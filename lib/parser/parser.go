// Code generated by goyacc -o parser.go -v parser.output parser.y. DO NOT EDIT.

//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2

import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	table       Table
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	envvar      EnvironmentVariable
	flag        Flag
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	replaceval  ReplaceValue
	replacevals []ReplaceValue
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const ENVIRONMENT_VARIABLE = 57355
const RUNTIME_INFORMATION = 57356
const EXTERNAL_COMMAND = 57357
const PLACEHOLDER = 57358
const SELECT = 57359
const FROM = 57360
const UPDATE = 57361
const SET = 57362
const UNSET = 57363
const DELETE = 57364
const WHERE = 57365
const INSERT = 57366
const INTO = 57367
const VALUES = 57368
const REPLACE = 57369
const AS = 57370
const DUAL = 57371
const STDIN = 57372
const RECURSIVE = 57373
const CREATE = 57374
const ADD = 57375
const DROP = 57376
const ALTER = 57377
const TABLE = 57378
const FIRST = 57379
const LAST = 57380
const AFTER = 57381
const BEFORE = 57382
const DEFAULT = 57383
const RENAME = 57384
const TO = 57385
const VIEW = 57386
const ORDER = 57387
const GROUP = 57388
const HAVING = 57389
const BY = 57390
const ASC = 57391
const DESC = 57392
const LIMIT = 57393
const OFFSET = 57394
const PERCENT = 57395
const JOIN = 57396
const INNER = 57397
const OUTER = 57398
const LEFT = 57399
const RIGHT = 57400
const FULL = 57401
const CROSS = 57402
const ON = 57403
const USING = 57404
const NATURAL = 57405
const LATERAL = 57406
const UNION = 57407
const INTERSECT = 57408
const EXCEPT = 57409
const ALL = 57410
const ANY = 57411
const EXISTS = 57412
const IN = 57413
const AND = 57414
const OR = 57415
const NOT = 57416
const BETWEEN = 57417
const LIKE = 57418
const IS = 57419
const NULL = 57420
const DISTINCT = 57421
const WITH = 57422
const RANGE = 57423
const UNBOUNDED = 57424
const PRECEDING = 57425
const FOLLOWING = 57426
const CURRENT = 57427
const ROW = 57428
const CASE = 57429
const IF = 57430
const ELSEIF = 57431
const WHILE = 57432
const WHEN = 57433
const THEN = 57434
const ELSE = 57435
const DO = 57436
const END = 57437
const DECLARE = 57438
const CURSOR = 57439
const FOR = 57440
const FETCH = 57441
const OPEN = 57442
const CLOSE = 57443
const DISPOSE = 57444
const PREPARE = 57445
const NEXT = 57446
const PRIOR = 57447
const ABSOLUTE = 57448
const RELATIVE = 57449
const SEPARATOR = 57450
const PARTITION = 57451
const OVER = 57452
const COMMIT = 57453
const ROLLBACK = 57454
const CONTINUE = 57455
const BREAK = 57456
const EXIT = 57457
const ECHO = 57458
const PRINT = 57459
const PRINTF = 57460
const SOURCE = 57461
const EXECUTE = 57462
const CHDIR = 57463
const PWD = 57464
const RELOAD = 57465
const REMOVE = 57466
const SYNTAX = 57467
const TRIGGER = 57468
const FUNCTION = 57469
const AGGREGATE = 57470
const BEGIN = 57471
const RETURN = 57472
const IGNORE = 57473
const WITHIN = 57474
const VAR = 57475
const SHOW = 57476
const TIES = 57477
const NULLS = 57478
const ROWS = 57479
const ONLY = 57480
const CSV = 57481
const JSON = 57482
const FIXED = 57483
const LTSV = 57484
const JSON_ROW = 57485
const JSON_TABLE = 57486
const SUBSTRING = 57487
const COUNT = 57488
const JSON_OBJECT = 57489
const AGGREGATE_FUNCTION = 57490
const LIST_FUNCTION = 57491
const ANALYTIC_FUNCTION = 57492
const FUNCTION_NTH = 57493
const FUNCTION_WITH_INS = 57494
const COMPARISON_OP = 57495
const STRING_OP = 57496
const SUBSTITUTION_OP = 57497
const UMINUS = 57498
const UPLUS = 57499

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"ENVIRONMENT_VARIABLE",
	"RUNTIME_INFORMATION",
	"EXTERNAL_COMMAND",
	"PLACEHOLDER",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"UNSET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"REPLACE",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"LATERAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"PREPARE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"ECHO",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"EXECUTE",
	"CHDIR",
	"PWD",
	"RELOAD",
	"REMOVE",
	"SYNTAX",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"ROWS",
	"ONLY",
	"CSV",
	"JSON",
	"FIXED",
	"LTSV",
	"JSON_ROW",
	"JSON_TABLE",
	"SUBSTRING",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LIST_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'='",
	"'-'",
	"'+'",
	"'*'",
	"'/'",
	"'%'",
	"'!'",
	"'('",
	"')'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2710

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string, forPrepared bool, ansiQuotes bool) ([]Statement, int, error) {
	l := new(Lexer)
	l.Init(s, sourceFile, forPrepared, ansiQuotes)
	yyParse(l)
	return l.program, l.HolderNumber(), l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 216,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 21,
	1, 26,
	89, 26,
	91, 26,
	93, 26,
	95, 26,
	158, 26,
	-2, 235,
	-1, 33,
	1, 78,
	89, 78,
	91, 78,
	93, 78,
	95, 78,
	158, 78,
	-2, 247,
	-1, 112,
	17, 216,
	19, 216,
	22, 216,
	24, 216,
	-2, 1,
	-1, 114,
	167, 306,
	-2, 216,
	-1, 123,
	65, 184,
	66, 184,
	67, 184,
	-2, 196,
	-1, 161,
	1, 122,
	89, 122,
	91, 122,
	93, 122,
	95, 122,
	158, 122,
	-2, 229,
	-1, 162,
	1, 163,
	89, 163,
	91, 163,
	93, 163,
	95, 163,
	158, 163,
	-2, 235,
	-1, 167,
	1, 156,
	89, 156,
	91, 156,
	93, 156,
	95, 156,
	158, 156,
	-2, 235,
	-1, 168,
	1, 157,
	89, 157,
	91, 157,
	93, 157,
	95, 157,
	158, 157,
	-2, 235,
	-1, 169,
	1, 158,
	89, 158,
	91, 158,
	93, 158,
	95, 158,
	158, 158,
	-2, 235,
	-1, 170,
	1, 161,
	89, 161,
	91, 161,
	93, 161,
	95, 161,
	158, 161,
	-2, 229,
	-1, 171,
	1, 162,
	89, 162,
	91, 162,
	93, 162,
	95, 162,
	158, 162,
	-2, 235,
	-1, 174,
	1, 169,
	89, 169,
	91, 169,
	93, 169,
	95, 169,
	158, 169,
	-2, 229,
	-1, 175,
	1, 170,
	89, 170,
	91, 170,
	93, 170,
	95, 170,
	158, 170,
	-2, 235,
	-1, 232,
	89, 1,
	93, 1,
	95, 1,
	-2, 216,
	-1, 254,
	166, 355,
	-2, 476,
	-1, 255,
	166, 356,
	-2, 477,
	-1, 256,
	166, 357,
	-2, 478,
	-1, 257,
	166, 358,
	-2, 479,
	-1, 289,
	4, 144,
	135, 144,
	136, 144,
	137, 144,
	139, 144,
	140, 144,
	141, 144,
	142, 144,
	-2, 235,
	-1, 290,
	4, 145,
	135, 145,
	136, 145,
	137, 145,
	139, 145,
	140, 145,
	141, 145,
	142, 145,
	-2, 235,
	-1, 300,
	1, 174,
	89, 174,
	91, 174,
	93, 174,
	95, 174,
	158, 174,
	-2, 235,
	-1, 308,
	95, 4,
	-2, 216,
	-1, 317,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	153, 0,
	159, 0,
	-2, 276,
	-1, 318,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	153, 0,
	159, 0,
	-2, 278,
	-1, 327,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	153, 0,
	159, 0,
	-2, 288,
	-1, 377,
	95, 1,
	-2, 216,
	-1, 393,
	54, 495,
	-2, 412,
	-1, 433,
	1, 80,
	89, 80,
	91, 80,
	93, 80,
	95, 80,
	158, 80,
	-2, 235,
	-1, 434,
	1, 81,
	89, 81,
	91, 81,
	93, 81,
	95, 81,
	158, 81,
	-2, 229,
	-1, 435,
	1, 82,
	89, 82,
	91, 82,
	93, 82,
	95, 82,
	158, 82,
	-2, 235,
	-1, 436,
	1, 83,
	89, 83,
	91, 83,
	93, 83,
	95, 83,
	158, 83,
	-2, 229,
	-1, 437,
	1, 149,
	89, 149,
	91, 149,
	93, 149,
	95, 149,
	158, 149,
	-2, 229,
	-1, 438,
	1, 150,
	89, 150,
	91, 150,
	93, 150,
	95, 150,
	158, 150,
	-2, 235,
	-1, 439,
	1, 151,
	89, 151,
	91, 151,
	93, 151,
	95, 151,
	158, 151,
	-2, 229,
	-1, 440,
	1, 152,
	89, 152,
	91, 152,
	93, 152,
	95, 152,
	158, 152,
	-2, 235,
	-1, 443,
	1, 117,
	89, 117,
	91, 117,
	93, 117,
	95, 117,
	158, 117,
	168, 117,
	-2, 235,
	-1, 448,
	1, 410,
	89, 410,
	91, 410,
	93, 410,
	95, 410,
	158, 410,
	-2, 235,
	-1, 455,
	1, 175,
	89, 175,
	91, 175,
	93, 175,
	95, 175,
	158, 175,
	-2, 235,
	-1, 480,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	153, 0,
	159, 0,
	-2, 289,
	-1, 513,
	95, 1,
	-2, 216,
	-1, 520,
	91, 1,
	93, 1,
	95, 1,
	-2, 216,
	-1, 523,
	1, 206,
	52, 206,
	80, 206,
	89, 206,
	91, 206,
	93, 206,
	95, 206,
	98, 206,
	138, 206,
	158, 206,
	167, 206,
	-2, 235,
	-1, 524,
	1, 211,
	89, 211,
	91, 211,
	93, 211,
	95, 211,
	98, 211,
	99, 211,
	158, 211,
	167, 211,
	-2, 235,
	-1, 559,
	167, 353,
	168, 353,
	-2, 229,
	-1, 601,
	89, 4,
	91, 4,
	93, 4,
	95, 4,
	-2, 216,
	-1, 604,
	95, 4,
	-2, 216,
	-1, 605,
	95, 4,
	-2, 216,
	-1, 670,
	54, 495,
	-2, 371,
	-1, 691,
	17, 506,
	80, 506,
	166, 506,
	-2, 87,
	-1, 717,
	89, 4,
	93, 4,
	95, 4,
	-2, 216,
	-1, 722,
	95, 4,
	-2, 216,
	-1, 723,
	95, 4,
	-2, 216,
	-1, 748,
	89, 1,
	93, 1,
	95, 1,
	-2, 216,
	-1, 791,
	1, 95,
	89, 95,
	91, 95,
	93, 95,
	95, 95,
	158, 95,
	-2, 229,
	-1, 792,
	1, 96,
	89, 96,
	91, 96,
	93, 96,
	95, 96,
	158, 96,
	-2, 235,
	-1, 794,
	95, 6,
	-2, 216,
	-1, 800,
	167, 128,
	168, 128,
	-2, 235,
	-1, 805,
	95, 4,
	-2, 216,
	-1, 876,
	95, 6,
	-2, 216,
	-1, 877,
	95, 6,
	-2, 216,
	-1, 881,
	95, 4,
	-2, 216,
	-1, 885,
	91, 4,
	93, 4,
	95, 4,
	-2, 216,
	-1, 928,
	89, 6,
	91, 6,
	93, 6,
	95, 6,
	-2, 216,
	-1, 935,
	158, 62,
	-2, 235,
	-1, 975,
	89, 6,
	93, 6,
	95, 6,
	-2, 216,
	-1, 978,
	95, 8,
	-2, 216,
	-1, 985,
	95, 6,
	-2, 216,
	-1, 988,
	89, 4,
	93, 4,
	95, 4,
	-2, 216,
	-1, 1015,
	95, 6,
	-2, 216,
	-1, 1048,
	95, 6,
	-2, 216,
	-1, 1052,
	91, 6,
	93, 6,
	95, 6,
	-2, 216,
	-1, 1054,
	89, 8,
	91, 8,
	93, 8,
	95, 8,
	-2, 216,
	-1, 1057,
	95, 8,
	-2, 216,
	-1, 1058,
	95, 8,
	-2, 216,
	-1, 1075,
	89, 8,
	93, 8,
	95, 8,
	-2, 216,
	-1, 1080,
	95, 8,
	-2, 216,
	-1, 1081,
	95, 8,
	-2, 216,
	-1, 1086,
	89, 6,
	93, 6,
	95, 6,
	-2, 216,
	-1, 1091,
	95, 8,
	-2, 216,
	-1, 1106,
	95, 8,
	-2, 216,
	-1, 1110,
	91, 8,
	93, 8,
	95, 8,
	-2, 216,
	-1, 1139,
	89, 8,
	93, 8,
	95, 8,
	-2, 216,
}

const yyPrivate = 57344

const yyLast = 4084

var yyAct = [...]int{

	122, 21, 1105, 1117, 1104, 1076, 349, 525, 1047, 1046,
	976, 866, 629, 880, 115, 33, 948, 268, 718, 186,
	839, 120, 950, 187, 113, 993, 1024, 949, 382, 879,
	669, 1023, 393, 589, 698, 573, 753, 383, 693, 463,
	26, 648, 162, 512, 419, 163, 164, 592, 167, 168,
	169, 171, 552, 175, 347, 660, 665, 27, 591, 89,
	388, 65, 1, 456, 237, 249, 238, 447, 531, 172,
	571, 180, 511, 184, 441, 458, 3, 243, 699, 536,
	535, 234, 392, 129, 344, 260, 191, 399, 181, 462,
	25, 221, 397, 140, 140, 68, 143, 247, 79, 78,
	265, 292, 137, 502, 410, 567, 539, 979, 540, 541,
	542, 534, 309, 21, 537, 180, 1028, 230, 464, 101,
	1017, 214, 918, 214, 213, 213, 213, 33, 183, 855,
	856, 149, 233, 123, 185, 141, 490, 470, 298, 213,
	848, 236, 165, 787, 396, 252, 710, 711, 770, 240,
	682, 683, 26, 539, 769, 540, 541, 542, 534, 289,
	290, 537, 741, 100, 130, 708, 126, 707, 692, 128,
	690, 125, 183, 684, 127, 231, 195, 680, 300, 671,
	655, 599, 205, 204, 206, 207, 208, 596, 3, 93,
	183, 178, 549, 310, 261, 488, 178, 74, 409, 404,
	314, 273, 25, 1006, 310, 214, 130, 313, 213, 310,
	1065, 280, 110, 310, 248, 267, 1064, 1040, 1004, 538,
	1039, 1038, 269, 1037, 271, 205, 204, 206, 207, 208,
	1036, 1035, 473, 21, 310, 325, 430, 1010, 1009, 272,
	381, 1007, 1005, 420, 297, 1003, 74, 33, 1002, 312,
	102, 103, 104, 992, 254, 255, 256, 257, 991, 400,
	110, 324, 973, 970, 390, 674, 919, 101, 878, 857,
	201, 210, 26, 200, 199, 202, 198, 854, 820, 361,
	362, 398, 132, 325, 433, 435, 438, 440, 443, 123,
	319, 819, 818, 443, 448, 373, 339, 341, 448, 448,
	817, 816, 455, 815, 811, 789, 391, 786, 3, 21,
	779, 778, 771, 132, 134, 340, 740, 454, 359, 360,
	387, 738, 25, 33, 737, 736, 729, 725, 706, 369,
	468, 704, 550, 561, 402, 140, 691, 689, 634, 627,
	626, 625, 407, 181, 612, 588, 406, 583, 505, 487,
	414, 485, 196, 195, 425, 132, 1054, 483, 197, 205,
	204, 206, 207, 208, 415, 452, 453, 446, 412, 413,
	474, 503, 391, 374, 429, 416, 426, 305, 21, 306,
	304, 418, 479, 183, 451, 523, 524, 101, 481, 482,
	449, 450, 33, 529, 957, 93, 956, 955, 102, 103,
	104, 472, 105, 106, 107, 108, 558, 954, 101, 953,
	952, 924, 396, 252, 910, 500, 905, 26, 476, 475,
	902, 900, 484, 501, 899, 892, 890, 861, 685, 577,
	631, 545, 608, 396, 252, 570, 546, 562, 497, 496,
	516, 498, 499, 495, 494, 493, 492, 916, 530, 491,
	432, 509, 431, 3, 405, 133, 183, 138, 133, 508,
	183, 602, 235, 229, 598, 586, 228, 25, 563, 506,
	507, 557, 206, 207, 208, 261, 681, 183, 218, 417,
	217, 216, 215, 603, 74, 286, 183, 928, 183, 223,
	601, 564, 248, 594, 566, 565, 568, 569, 284, 112,
	576, 274, 556, 178, 653, 1083, 391, 755, 903, 901,
	609, 101, 757, 367, 21, 639, 833, 824, 102, 103,
	104, 21, 254, 255, 256, 257, 744, 400, 33, 898,
	985, 649, 877, 951, 876, 33, 822, 111, 825, 102,
	103, 104, 93, 254, 255, 256, 257, 675, 400, 398,
	138, 744, 794, 26, 101, 654, 963, 823, 961, 897,
	26, 183, 677, 630, 650, 754, 896, 554, 219, 276,
	398, 670, 616, 614, 220, 145, 638, 622, 623, 624,
	111, 572, 368, 642, 895, 637, 579, 581, 645, 3,
	894, 617, 618, 619, 620, 621, 3, 443, 893, 659,
	448, 285, 21, 25, 821, 21, 21, 814, 633, 630,
	25, 522, 966, 521, 283, 651, 33, 668, 667, 33,
	33, 678, 275, 1138, 428, 687, 1106, 1124, 144, 1114,
	679, 672, 1081, 686, 146, 1113, 1108, 632, 1094, 1093,
	1085, 688, 102, 103, 104, 752, 105, 106, 107, 108,
	1067, 701, 277, 278, 1061, 646, 1053, 1050, 147, 987,
	984, 983, 529, 756, 939, 716, 183, 714, 720, 721,
	927, 712, 889, 580, 888, 734, 883, 808, 807, 747,
	760, 101, 636, 600, 517, 102, 103, 104, 739, 105,
	106, 107, 108, 515, 1107, 1080, 761, 763, 1106, 730,
	731, 732, 733, 735, 792, 1058, 1057, 750, 749, 1049,
	800, 978, 882, 1048, 572, 758, 881, 1091, 21, 723,
	806, 722, 605, 21, 21, 767, 572, 604, 783, 308,
	1048, 514, 33, 773, 572, 513, 782, 33, 33, 1015,
	772, 881, 805, 513, 572, 802, 379, 377, 1139, 21,
	776, 1110, 381, 1086, 826, 796, 777, 74, 1075, 1052,
	988, 781, 975, 33, 768, 775, 797, 798, 885, 594,
	799, 851, 748, 594, 717, 520, 232, 1141, 156, 157,
	1088, 803, 1077, 990, 837, 977, 809, 810, 26, 751,
	719, 832, 375, 239, 831, 21, 1131, 1130, 843, 845,
	849, 630, 670, 1112, 1111, 1073, 21, 946, 945, 33,
	887, 830, 102, 103, 104, 886, 105, 106, 107, 108,
	33, 873, 864, 715, 3, 863, 872, 1107, 203, 183,
	743, 1049, 882, 514, 1145, 1137, 1102, 183, 25, 1084,
	183, 1031, 986, 829, 554, 154, 155, 158, 159, 572,
	746, 183, 1128, 1071, 572, 838, 943, 842, 640, 1136,
	784, 785, 672, 911, 912, 920, 908, 1122, 907, 884,
	868, 929, 925, 1147, 906, 931, 935, 21, 21, 917,
	915, 670, 21, 942, 1133, 1118, 21, 1121, 936, 937,
	1120, 33, 33, 930, 933, 74, 33, 1043, 934, 266,
	33, 1134, 1135, 873, 873, 1100, 223, 1132, 872, 872,
	940, 1011, 630, 922, 859, 183, 364, 960, 222, 630,
	363, 852, 959, 98, 628, 959, 1029, 958, 980, 21,
	962, 965, 926, 471, 968, 971, 932, 913, 921, 914,
	974, 672, 411, 33, 1118, 941, 967, 311, 183, 944,
	263, 74, 868, 868, 982, 873, 858, 366, 365, 780,
	872, 1143, 293, 989, 1119, 74, 287, 74, 74, 996,
	997, 998, 999, 1000, 1098, 74, 21, 666, 1016, 21,
	959, 1099, 630, 847, 1101, 1001, 21, 1013, 766, 21,
	33, 806, 99, 33, 322, 972, 981, 1030, 321, 323,
	33, 765, 873, 33, 868, 329, 328, 872, 664, 969,
	840, 841, 873, 1034, 663, 385, 21, 872, 384, 385,
	1116, 1041, 1055, 1119, 1045, 572, 1033, 1051, 995, 959,
	33, 183, 657, 658, 1042, 262, 263, 264, 662, 386,
	529, 1063, 873, 661, 1056, 828, 1062, 872, 532, 21,
	1070, 868, 1032, 21, 1019, 21, 1066, 1068, 21, 21,
	1069, 868, 241, 33, 1072, 994, 703, 33, 183, 33,
	702, 630, 33, 33, 5, 873, 21, 80, 1092, 873,
	872, 21, 21, 1087, 872, 101, 294, 21, 572, 1016,
	33, 868, 21, 709, 700, 33, 33, 1025, 1103, 835,
	836, 33, 121, 630, 136, 135, 33, 21, 1127, 548,
	1125, 21, 1123, 873, 539, 194, 540, 541, 872, 938,
	812, 33, 801, 795, 868, 33, 793, 420, 868, 173,
	1019, 705, 597, 1019, 1019, 1140, 1144, 489, 307, 245,
	21, 444, 1092, 258, 246, 182, 244, 389, 179, 1148,
	403, 1019, 1008, 643, 33, 245, 1019, 1019, 408, 211,
	212, 539, 868, 540, 541, 542, 124, 1019, 296, 225,
	226, 424, 66, 1025, 295, 1074, 1025, 1025, 1078, 1079,
	486, 291, 1019, 94, 421, 422, 1019, 96, 94, 182,
	96, 93, 179, 423, 1025, 190, 1089, 121, 445, 1025,
	1025, 1095, 1096, 694, 695, 696, 697, 182, 148, 150,
	1025, 173, 1109, 193, 67, 1019, 102, 103, 104, 139,
	105, 106, 107, 108, 1090, 1025, 1014, 1126, 101, 1025,
	804, 1129, 376, 201, 210, 209, 200, 199, 202, 198,
	10, 9, 259, 553, 8, 201, 210, 209, 200, 199,
	202, 198, 7, 378, 252, 62, 302, 345, 1025, 346,
	1146, 395, 394, 250, 253, 201, 210, 209, 200, 199,
	202, 198, 1142, 316, 317, 318, 1115, 320, 1097, 1082,
	327, 88, 330, 331, 332, 333, 334, 335, 336, 61,
	60, 64, 173, 342, 348, 101, 57, 63, 201, 210,
	209, 200, 199, 202, 198, 58, 834, 370, 101, 656,
	372, 527, 526, 173, 56, 196, 195, 380, 375, 544,
	192, 197, 205, 204, 206, 207, 208, 196, 195, 652,
	299, 647, 644, 197, 205, 204, 206, 207, 208, 242,
	6, 303, 299, 348, 20, 19, 69, 196, 195, 153,
	173, 17, 427, 197, 205, 204, 206, 207, 208, 102,
	103, 104, 827, 105, 106, 107, 108, 539, 593, 540,
	541, 542, 534, 840, 841, 537, 590, 173, 16, 442,
	196, 195, 15, 14, 11, 18, 197, 205, 204, 206,
	207, 208, 201, 210, 209, 200, 199, 202, 198, 478,
	182, 480, 13, 173, 12, 1020, 869, 1018, 867, 201,
	210, 209, 200, 199, 202, 198, 459, 457, 173, 728,
	4, 2, 0, 0, 0, 101, 102, 103, 104, 0,
	105, 106, 107, 108, 0, 0, 0, 173, 173, 102,
	103, 104, 0, 105, 106, 107, 108, 173, 0, 0,
	396, 252, 0, 380, 0, 0, 0, 518, 101, 0,
	338, 0, 0, 0, 528, 0, 0, 533, 0, 0,
	0, 83, 0, 182, 196, 195, 0, 551, 0, 0,
	197, 205, 204, 206, 207, 208, 0, 0, 727, 0,
	0, 196, 195, 0, 575, 0, 0, 197, 205, 204,
	206, 207, 208, 584, 142, 587, 510, 0, 0, 151,
	152, 0, 160, 161, 101, 0, 0, 0, 166, 0,
	0, 0, 170, 0, 174, 0, 176, 177, 539, 0,
	540, 541, 542, 534, 0, 0, 537, 0, 0, 121,
	252, 0, 59, 0, 0, 0, 201, 210, 209, 200,
	199, 202, 198, 0, 0, 610, 102, 103, 104, 0,
	254, 255, 256, 257, 613, 400, 348, 0, 173, 227,
	131, 0, 0, 173, 173, 173, 0, 0, 182, 201,
	210, 209, 200, 199, 202, 198, 0, 398, 635, 102,
	103, 104, 0, 105, 106, 107, 108, 641, 251, 0,
	251, 0, 0, 0, 0, 0, 251, 270, 251, 0,
	0, 0, 0, 0, 0, 0, 279, 251, 281, 282,
	0, 0, 0, 0, 0, 288, 0, 0, 196, 195,
	0, 0, 0, 224, 197, 205, 204, 206, 207, 208,
	0, 0, 0, 299, 0, 102, 103, 104, 0, 105,
	106, 107, 108, 0, 101, 0, 0, 0, 0, 0,
	0, 196, 195, 0, 0, 315, 0, 197, 205, 204,
	206, 207, 208, 0, 0, 964, 0, 0, 0, 396,
	252, 0, 101, 724, 0, 337, 0, 0, 351, 726,
	0, 0, 0, 0, 0, 173, 173, 173, 173, 173,
	0, 0, 371, 0, 0, 0, 0, 396, 252, 742,
	0, 0, 0, 0, 846, 0, 0, 251, 251, 0,
	0, 0, 0, 0, 0, 0, 131, 0, 0, 0,
	251, 251, 0, 528, 0, 0, 0, 351, 0, 759,
	173, 0, 844, 0, 326, 201, 210, 209, 200, 199,
	202, 198, 0, 0, 0, 434, 436, 437, 439, 774,
	0, 173, 326, 326, 0, 0, 0, 0, 251, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 788, 101,
	0, 467, 0, 469, 0, 102, 103, 104, 401, 254,
	255, 256, 257, 0, 400, 0, 0, 380, 0, 0,
	0, 0, 401, 0, 0, 252, 813, 0, 0, 0,
	0, 0, 0, 102, 103, 104, 398, 254, 255, 256,
	257, 0, 400, 0, 0, 0, 0, 196, 195, 0,
	0, 101, 0, 197, 205, 204, 206, 207, 208, 96,
	0, 891, 0, 0, 398, 0, 853, 201, 210, 209,
	200, 199, 202, 198, 860, 0, 0, 862, 351, 101,
	0, 0, 0, 0, 0, 326, 543, 0, 865, 0,
	251, 326, 326, 547, 0, 555, 251, 559, 0, 0,
	251, 251, 0, 0, 396, 252, 0, 0, 0, 555,
	574, 0, 101, 578, 555, 555, 582, 0, 0, 93,
	585, 574, 0, 0, 595, 904, 326, 504, 504, 504,
	102, 103, 104, 0, 254, 255, 256, 257, 909, 764,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	195, 0, 923, 0, 173, 197, 205, 204, 206, 207,
	208, 401, 606, 607, 0, 0, 574, 0, 0, 121,
	0, 401, 0, 131, 0, 131, 131, 0, 101, 0,
	351, 615, 102, 103, 104, 947, 105, 106, 107, 108,
	0, 0, 0, 0, 0, 0, 0, 101, 75, 76,
	77, 0, 98, 0, 93, 96, 94, 95, 0, 71,
	102, 103, 104, 0, 254, 255, 256, 257, 0, 400,
	117, 0, 0, 111, 0, 0, 0, 0, 0, 0,
	251, 101, 0, 0, 0, 0, 673, 0, 0, 0,
	676, 398, 555, 102, 103, 104, 0, 105, 106, 107,
	108, 0, 0, 0, 555, 0, 396, 252, 0, 0,
	0, 0, 555, 90, 0, 0, 326, 91, 1012, 578,
	0, 99, 555, 0, 0, 380, 0, 0, 0, 0,
	119, 116, 0, 0, 0, 0, 0, 0, 0, 713,
	97, 762, 0, 173, 0, 0, 0, 0, 0, 0,
	0, 401, 0, 0, 0, 1044, 0, 0, 0, 102,
	103, 104, 326, 105, 106, 107, 108, 0, 0, 0,
	121, 0, 0, 0, 0, 0, 353, 0, 102, 103,
	104, 528, 105, 106, 107, 108, 110, 0, 84, 354,
	85, 352, 355, 356, 357, 358, 0, 351, 0, 0,
	0, 0, 0, 81, 82, 251, 251, 0, 92, 70,
	0, 0, 102, 103, 104, 0, 254, 255, 256, 257,
	0, 400, 555, 0, 0, 380, 251, 555, 0, 0,
	0, 0, 555, 0, 574, 0, 0, 0, 555, 555,
	0, 326, 0, 398, 790, 791, 0, 0, 0, 201,
	210, 209, 200, 199, 202, 198, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 201, 611, 209,
	200, 199, 202, 198, 0, 0, 401, 401, 101, 75,
	76, 77, 0, 98, 401, 93, 96, 94, 95, 0,
	71, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 0, 0, 111, 0, 0, 251, 251, 0,
	0, 251, 850, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 578,
	0, 196, 195, 0, 0, 0, 0, 197, 205, 204,
	206, 207, 208, 0, 90, 745, 0, 0, 91, 196,
	195, 0, 99, 0, 326, 197, 205, 204, 206, 207,
	208, 119, 116, 0, 0, 0, 0, 0, 0, 0,
	0, 97, 0, 0, 0, 401, 0, 401, 401, 401,
	0, 0, 401, 0, 0, 0, 0, 0, 0, 251,
	251, 201, 210, 209, 200, 199, 202, 198, 0, 0,
	0, 0, 0, 555, 0, 0, 0, 353, 0, 102,
	103, 104, 519, 105, 106, 107, 108, 110, 0, 84,
	354, 85, 352, 355, 356, 357, 358, 201, 477, 209,
	200, 199, 202, 198, 81, 82, 350, 0, 0, 92,
	70, 343, 0, 0, 0, 0, 0, 0, 0, 0,
	201, 0, 574, 200, 199, 202, 198, 401, 0, 401,
	401, 401, 0, 0, 0, 326, 555, 0, 0, 0,
	0, 0, 326, 196, 195, 0, 0, 0, 0, 197,
	205, 204, 206, 207, 208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 196,
	195, 0, 0, 0, 0, 197, 205, 204, 206, 207,
	208, 1026, 1027, 0, 0, 0, 0, 0, 0, 401,
	0, 0, 196, 195, 0, 326, 0, 0, 197, 205,
	204, 206, 207, 208, 0, 0, 0, 0, 0, 0,
	0, 101, 75, 76, 77, 0, 98, 0, 93, 96,
	94, 95, 22, 71, 0, 0, 0, 35, 36, 0,
	1059, 1060, 0, 0, 28, 351, 0, 111, 0, 29,
	44, 0, 30, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 90, 0, 0,
	0, 91, 0, 0, 326, 99, 0, 74, 0, 0,
	0, 0, 0, 0, 1022, 1021, 0, 874, 0, 0,
	0, 0, 0, 32, 97, 0, 39, 37, 38, 34,
	40, 0, 0, 0, 0, 0, 326, 0, 42, 43,
	465, 466, 0, 47, 48, 49, 50, 41, 52, 53,
	54, 45, 51, 55, 0, 0, 0, 875, 0, 0,
	31, 46, 102, 103, 104, 0, 105, 106, 107, 108,
	110, 0, 84, 87, 85, 86, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 82, 0,
	0, 0, 92, 70, 101, 75, 76, 77, 0, 98,
	0, 93, 96, 94, 95, 22, 71, 0, 0, 0,
	35, 36, 0, 0, 0, 0, 0, 28, 0, 0,
	111, 0, 29, 44, 0, 30, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	90, 0, 0, 0, 91, 0, 0, 0, 99, 0,
	74, 0, 0, 0, 0, 0, 0, 461, 460, 0,
	72, 0, 0, 0, 0, 0, 32, 97, 0, 39,
	37, 38, 34, 40, 0, 0, 0, 0, 0, 0,
	0, 42, 43, 465, 466, 73, 47, 48, 49, 50,
	41, 52, 53, 54, 45, 51, 55, 0, 0, 0,
	0, 0, 0, 31, 46, 102, 103, 104, 0, 105,
	106, 107, 108, 110, 0, 84, 87, 85, 86, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 82, 0, 0, 0, 92, 70, 101, 75, 76,
	77, 0, 98, 0, 93, 96, 94, 95, 22, 71,
	0, 0, 0, 35, 36, 0, 0, 0, 0, 0,
	28, 0, 0, 111, 0, 29, 44, 0, 30, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 90, 0, 0, 0, 91, 0, 0,
	0, 99, 0, 74, 0, 0, 0, 0, 0, 0,
	871, 870, 0, 874, 0, 0, 0, 0, 0, 32,
	97, 0, 39, 37, 38, 34, 40, 0, 0, 0,
	0, 0, 0, 0, 42, 43, 0, 0, 0, 47,
	48, 49, 50, 41, 52, 53, 54, 45, 51, 55,
	0, 0, 0, 875, 0, 0, 31, 46, 102, 103,
	104, 0, 105, 106, 107, 108, 110, 0, 84, 87,
	85, 86, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 82, 0, 0, 0, 92, 70,
	101, 75, 76, 77, 0, 98, 0, 93, 96, 94,
	95, 22, 71, 0, 0, 0, 35, 36, 0, 0,
	0, 0, 0, 28, 0, 0, 111, 0, 29, 44,
	0, 30, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 90, 0, 0, 0,
	91, 0, 0, 0, 99, 0, 74, 0, 0, 0,
	0, 0, 0, 24, 23, 0, 72, 0, 0, 0,
	0, 0, 32, 97, 0, 39, 37, 38, 34, 40,
	0, 0, 0, 0, 0, 0, 0, 42, 43, 0,
	0, 73, 47, 48, 49, 50, 41, 52, 53, 54,
	45, 51, 55, 0, 0, 0, 0, 0, 0, 31,
	46, 102, 103, 104, 0, 105, 106, 107, 108, 110,
	0, 84, 87, 85, 86, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 82, 0, 0,
	0, 92, 70, 101, 75, 76, 77, 0, 98, 0,
	93, 96, 94, 95, 0, 71, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 117, 0, 0, 111,
	0, 0, 0, 0, 0, 0, 0, 101, 75, 76,
	77, 0, 98, 0, 93, 96, 94, 95, 0, 71,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 0, 0, 111, 0, 0, 0, 0, 0, 90,
	0, 0, 0, 91, 0, 0, 0, 99, 0, 0,
	0, 0, 0, 0, 0, 0, 119, 116, 0, 0,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 0, 90, 0, 0, 0, 91, 0, 0,
	0, 99, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 116, 0, 0, 0, 0, 0, 0, 0, 189,
	97, 0, 353, 0, 102, 103, 104, 0, 105, 106,
	107, 108, 110, 0, 84, 354, 85, 352, 355, 356,
	357, 358, 0, 0, 0, 0, 0, 0, 0, 81,
	82, 350, 0, 0, 92, 70, 188, 0, 102, 103,
	104, 0, 105, 106, 107, 108, 110, 0, 84, 87,
	85, 86, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 82, 0, 0, 0, 92, 70,
	101, 75, 76, 77, 0, 98, 0, 93, 96, 94,
	95, 0, 71, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 117, 0, 0, 111, 0, 0, 0,
	0, 0, 0, 0, 101, 75, 76, 77, 0, 98,
	0, 93, 96, 94, 95, 0, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 0, 0,
	111, 0, 0, 0, 0, 0, 90, 0, 0, 0,
	91, 0, 0, 0, 99, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 116, 0, 0, 0, 0, 0,
	0, 0, 0, 97, 0, 0, 0, 0, 0, 0,
	90, 0, 0, 0, 91, 0, 0, 0, 99, 266,
	0, 0, 0, 0, 0, 0, 0, 119, 116, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 0, 118,
	0, 102, 103, 104, 0, 105, 106, 107, 108, 110,
	0, 84, 87, 85, 86, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 81, 82, 350, 0,
	0, 92, 70, 118, 0, 102, 103, 104, 0, 105,
	106, 107, 108, 110, 0, 84, 87, 85, 86, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 82, 0, 0, 0, 92, 70, 101, 75, 76,
	77, 0, 98, 0, 93, 96, 94, 95, 0, 71,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 0, 0, 111, 0, 0, 0, 0, 0, 0,
	0, 101, 75, 76, 77, 0, 98, 0, 93, 96,
	94, 95, 0, 71, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 117, 0, 0, 111, 0, 0,
	0, 0, 0, 90, 0, 0, 0, 91, 0, 0,
	0, 99, 0, 74, 0, 0, 0, 0, 0, 0,
	119, 116, 0, 0, 0, 0, 0, 0, 0, 0,
	97, 0, 0, 0, 0, 0, 0, 90, 0, 0,
	0, 91, 0, 0, 0, 99, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 116, 0, 0, 0, 0,
	0, 0, 0, 0, 97, 0, 118, 0, 102, 103,
	104, 0, 105, 106, 107, 108, 110, 0, 84, 87,
	85, 86, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 82, 0, 0, 0, 92, 70,
	118, 0, 102, 103, 104, 0, 105, 106, 107, 108,
	110, 0, 84, 87, 85, 86, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 82, 0,
	0, 0, 92, 70, 101, 75, 76, 77, 0, 98,
	0, 93, 96, 94, 95, 0, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 0, 0,
	111, 0, 0, 0, 0, 0, 0, 0, 101, 75,
	76, 77, 0, 98, 0, 93, 96, 94, 95, 0,
	71, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 117, 0, 0, 560, 0, 0, 0, 0, 0,
	90, 0, 0, 0, 91, 0, 0, 0, 99, 0,
	0, 0, 0, 0, 0, 0, 0, 119, 116, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 0, 0,
	0, 0, 0, 0, 90, 0, 0, 0, 91, 0,
	0, 0, 99, 0, 0, 0, 0, 0, 0, 0,
	0, 119, 116, 0, 0, 0, 0, 0, 0, 0,
	0, 97, 0, 118, 0, 102, 103, 104, 0, 105,
	106, 107, 108, 110, 0, 84, 87, 85, 86, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 82, 0, 0, 0, 92, 114, 118, 0, 102,
	103, 104, 0, 105, 106, 107, 108, 110, 0, 84,
	87, 85, 86, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 81, 82, 0, 0, 0, 92,
	70, 101, 75, 301, 77, 0, 98, 0, 93, 96,
	94, 95, 0, 71, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 117, 0, 0, 111, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 90, 0, 0,
	0, 91, 0, 0, 0, 99, 0, 0, 0, 0,
	0, 0, 0, 0, 119, 116, 0, 0, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	118, 0, 102, 103, 104, 0, 105, 106, 107, 108,
	110, 0, 84, 87, 85, 86, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 81, 82, 0,
	0, 0, 92, 70,
}
var yyPact = [...]int{

	2966, -1000, 341, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3720, 3557, -1000, -1000, 147, 289, 1069,
	1068, 384, 1888, -1000, 531, 1175, 1170, 1954, 1954, 741,
	1954, 3557, -1000, -1000, 3557, 3557, 1827, 3557, 3557, 3557,
	3557, 3557, 3557, -1000, 1954, 1954, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 348, -1000, -1000, -1000, -1000,
	3523, -1000, 3163, 1189, 1084, -1000, -1000, -1000, -1000, -1000,
	1776, 3557, 3557, -43, 316, 315, 314, 312, -1000, 415,
	116, 3557, 3557, -1000, -1000, -1000, -1000, 1954, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 300,
	297, -52, 2966, 684, 3523, -1000, 296, 292, 291, 3557,
	702, 1776, -1000, 1017, 1121, 1119, 1775, 1118, 1224, 970,
	820, -1000, 815, 3557, 1775, 1954, 1775, -1000, 820, 33,
	346, -1000, 525, -1000, 1954, 1510, 1954, 1954, 455, 442,
	-1000, 904, -1000, 1954, -1000, -1000, -1000, -1000, 3557, 3557,
	1163, 39, 900, 1043, 1156, -1000, 1150, -1000, -1000, 76,
	-43, -1000, -1000, 1475, -43, -1000, -1000, 3917, 3557, 1174,
	213, 210, 212, 189, 635, 41, 876, 1180, 291, -1000,
	-1000, -1000, 32, 1954, -1000, 3557, 3557, 3557, 832, 3557,
	923, 69, 3557, 937, 3557, 3557, 3557, 3557, 3557, 3557,
	3557, -1000, -1000, 1454, 3360, 3557, 2204, 820, 820, 69,
	69, 845, 889, -1000, -1000, 2309, -1000, 436, 820, 3557,
	1304, -1000, 2966, 210, 206, 3557, 701, 654, 653, 3557,
	967, 991, 1137, 1124, 1180, 1421, 1775, 1130, 31, -1000,
	-1000, -1000, -1000, 288, -1000, -1000, -1000, -1000, 1775, 1421,
	1140, 30, 874, 874, 874, 3129, -1000, 197, -1000, 313,
	215, 1151, 3557, 1180, 3557, 526, 208, 286, 284, -1000,
	-1000, -1000, -1000, 3557, 3557, 3557, 3557, 3557, 1116, -1000,
	-1000, 1193, 3557, 3557, 1178, 1178, 1775, 3557, 3557, 3557,
	-1000, 3557, 1776, -1000, -1000, -1000, -1000, 1137, 2640, 1954,
	1180, 1954, 66, 862, 1084, 204, 65, 22, 22, 914,
	2286, 3557, 69, 3557, -1000, 3523, -1000, 22, 69, 69,
	310, 310, -1000, -1000, -1000, 199, 2309, -1000, -1000, 190,
	3557, 184, 1162, -1000, 182, 27, 1109, -1000, 1776, -1000,
	-1000, -30, 283, 280, 279, 278, 277, 273, 272, 3557,
	3326, -1000, -1000, 69, 205, 205, 205, 832, -1000, 3557,
	1338, -1000, -1000, 642, -1000, 3557, 598, 2966, 589, 3557,
	2250, 683, 515, 512, 3557, 3557, 1973, 1124, 1002, 3557,
	-1000, 25, -1000, 51, 1291, -1000, -1000, -1000, 404, -1000,
	270, 1081, 166, 550, 1775, 3754, 271, 1124, 1421, 1510,
	189, -1000, 189, 189, -1000, -1000, 269, 550, 1954, 815,
	-1000, 263, 507, 550, 1954, 180, -1000, 1776, 677, 1954,
	815, 178, 1954, -1000, -43, -1000, -43, -43, -1000, -43,
	-1000, -1000, 19, 1104, 1180, -1000, -1000, -1000, 13, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 588, 332, -1000, -1000,
	3720, 3557, -1000, -1000, -1000, -1000, -1000, 633, -1000, 628,
	1954, 1954, -1000, 266, 1954, -1000, -1000, 3557, 2126, -1000,
	22, -1000, -1000, -1000, 177, -1000, 3557, -1000, 3129, 1954,
	3360, 820, 820, 820, 820, 3557, 3557, 3557, 174, 173,
	172, 852, -1000, 117, -1000, 264, -1000, -1000, 537, 171,
	3557, 587, 650, 2966, 3557, 771, -1000, -1000, 1776, 3557,
	2966, 1134, 551, 478, 418, -1000, 12, 983, 1776, -1000,
	1002, 996, 990, 1776, 960, 954, 921, 1106, 115, -1000,
	-1000, -1000, -1000, -1000, 1954, 98, 3557, -1000, 1954, 69,
	550, -1000, 1137, 9, 317, -44, -1000, -17, 5, -43,
	-52, 262, 550, -1000, 1124, -1000, 884, -1000, -1000, 884,
	550, 170, 2, 169, 0, -1000, 1166, 1954, 1053, -1000,
	550, 1027, 1023, -1000, -1000, -1000, 164, -1000, 1103, 161,
	-1, -1000, -1000, -3, 1052, -21, 3557, 1954, -1000, 3557,
	733, 2640, 682, 699, 2640, 2640, 627, 625, 815, 160,
	2309, 3557, -1000, 1321, -1000, -1000, 159, 3557, 3557, 3557,
	3326, 3557, 158, 157, 154, -1000, -1000, -1000, 69, 149,
	-6, 3557, -1000, 749, 394, 2108, 762, 584, -1000, 680,
	-1000, 1227, 698, -1000, 3557, -1000, -1000, 427, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1973, 376, -1000, -1000, 996,
	-1000, 3557, 3557, 2007, 1855, 947, -1000, 934, 921, -1000,
	1473, 116, -14, -1000, -1000, -20, -1000, -1000, 145, 1124,
	550, 3557, -1000, 3557, 1510, 550, 144, -1000, 143, 897,
	550, 1099, 1954, -1000, -1000, -1000, 550, 550, 140, -25,
	3557, 138, 1954, 3557, 1098, 423, 1095, 1180, 1180, 3557,
	1094, 1180, -1000, -1000, -1000, -1000, -1000, 2640, 649, 3557,
	583, 582, 2640, 2640, 137, 1092, 2309, -1000, 3557, 497,
	136, 134, 133, 125, 124, 111, 494, 426, 407, -1000,
	-1000, 69, 1194, -1000, 999, -1000, -1000, 755, 2966, -1000,
	-1000, 3557, 478, 963, -1000, 381, -1000, 1062, 1017, 1776,
	-1000, 1059, 116, 1312, 116, 1678, 1650, 929, -28, 115,
	3557, 895, -1000, -1000, 1776, 110, -38, 102, 894, 888,
	261, -1000, 815, -1000, -1000, -1000, 1166, 1954, 1776, -1000,
	-1000, -43, -1000, 815, 2803, 405, -1000, -1000, -1000, 1052,
	-1000, 403, 101, 623, 581, 2640, 676, 725, 720, 579,
	577, -1000, 260, 1674, 259, 488, 480, 474, 456, 449,
	419, 258, 255, 373, 254, 372, -1000, 3557, 250, -1000,
	744, 427, -1000, -1000, -1000, -1000, -1000, 967, -1000, -1000,
	3557, 248, 949, 1312, 116, 1059, 116, 383, 115, -1000,
	-45, 99, 69, -1000, -1000, -1000, 3557, 887, 245, 69,
	-1000, 550, -1000, -1000, -1000, -1000, 575, 329, -1000, -1000,
	3720, 3557, -1000, -1000, 3163, 3557, 2803, 2803, 1091, 569,
	648, 2640, 3557, 769, -1000, 2640, -1000, -1000, 718, 717,
	815, -1000, 424, 244, 243, 241, 231, 230, 228, 424,
	424, 448, 424, 446, 1508, 1017, -1000, -1000, 514, 1776,
	1954, -1000, -1000, 949, -1000, 1059, 116, -1000, -1000, -1000,
	-1000, 96, 69, -1000, 550, -1000, 95, -1000, 2803, 670,
	694, 617, 36, 857, 1180, -1000, 566, 565, 401, 754,
	564, -1000, 668, -1000, 692, -1000, -1000, 91, 86, -1000,
	1020, 980, 424, 424, 424, 424, 424, 424, 81, 1017,
	78, 52, 75, 37, -1000, 74, 1133, 71, -1000, -1000,
	-1000, -1000, 70, 885, -1000, 2803, 646, 3557, 2477, 1954,
	1954, 45, 855, -1000, -1000, 2803, -1000, 753, 2640, -1000,
	3557, -1000, -1000, -1000, 978, 3557, 64, 63, 56, 54,
	53, 50, -1000, -1000, 424, -1000, 424, -1000, -1000, -1000,
	871, 69, -1000, 620, 562, 2803, 667, 561, 198, -1000,
	-1000, 3720, 3557, -1000, -1000, -1000, 612, 611, 1954, 1954,
	559, -1000, 743, 1973, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 49, 43, 69, -1000, -1000, 555, 637, 2803, 3557,
	766, -1000, 2803, 715, 2477, 666, 691, 2477, 2477, 601,
	538, -1000, -1000, 368, -1000, -1000, -1000, 751, 545, -1000,
	661, -1000, 689, -1000, -1000, 2477, 624, 3557, 544, 543,
	2477, 2477, -1000, 899, -1000, 748, 2803, -1000, 3557, 605,
	541, 2477, 659, 714, 713, 540, 534, -1000, 938, 807,
	804, 781, -1000, 742, 532, 533, 2477, 3557, 765, -1000,
	2477, -1000, -1000, 707, 706, 835, 801, -1000, 818, 773,
	-1000, -1000, -1000, -1000, 747, 528, -1000, 656, -1000, 686,
	-1000, -1000, 879, -1000, -1000, -1000, -1000, -1000, 746, 2477,
	-1000, 3557, -1000, 789, -1000, -1000, 738, -1000, -1000,
}
var yyPgo = [...]int{

	0, 62, 63, 11, 120, 75, 118, 1421, 89, 23,
	39, 1420, 1417, 1416, 1408, 31, 26, 1407, 1406, 1405,
	1404, 1402, 1385, 1384, 78, 34, 38, 1383, 1382, 1379,
	74, 1378, 47, 1376, 1368, 58, 33, 1351, 1349, 1346,
	1345, 1344, 1074, 1340, 105, 83, 1138, 1339, 77, 60,
	68, 55, 25, 28, 36, 1332, 1331, 41, 1329, 37,
	57, 1320, 86, 1314, 99, 98, 163, 1077, 0, 54,
	59, 12, 7, 1312, 1311, 1309, 1306, 1542, 1305, 103,
	1297, 1296, 1291, 81, 1290, 1289, 1281, 6, 27, 16,
	22, 1279, 1278, 3, 1276, 1272, 65, 1264, 1263, 87,
	85, 97, 1262, 92, 30, 32, 1261, 20, 1259, 1257,
	1255, 21, 66, 1253, 70, 17, 67, 82, 35, 84,
	1252, 1244, 1243, 52, 1241, 1240, 43, 72, 13, 29,
	8, 9, 2, 4, 64, 1232, 18, 1230, 10, 1226,
	5, 1224, 1471, 61, 19, 14, 1219, 102, 1172, 1214,
	95, 100, 91, 80, 56, 79, 104, 1213, 44, 828,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 6, 6,
	7, 7, 8, 8, 8, 8, 8, 9, 9, 10,
	10, 12, 12, 11, 11, 11, 11, 11, 13, 13,
	13, 13, 13, 13, 14, 14, 15, 15, 15, 15,
	15, 16, 16, 17, 17, 18, 18, 18, 18, 18,
	19, 19, 19, 19, 19, 19, 20, 20, 20, 20,
	21, 21, 21, 21, 21, 22, 22, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 24, 24, 25,
	25, 26, 26, 26, 26, 26, 27, 27, 27, 27,
	27, 27, 27, 28, 28, 28, 28, 29, 29, 30,
	30, 31, 31, 31, 31, 32, 33, 33, 34, 35,
	35, 36, 36, 36, 37, 37, 37, 37, 37, 38,
	38, 38, 38, 38, 38, 38, 39, 39, 39, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 41, 41, 41, 42, 42, 43, 43,
	44, 44, 44, 44, 45, 45, 46, 47, 48, 48,
	49, 49, 50, 50, 51, 51, 52, 52, 53, 53,
	53, 54, 54, 54, 55, 55, 56, 56, 57, 57,
	57, 58, 58, 58, 59, 59, 60, 60, 61, 61,
	62, 62, 63, 63, 63, 63, 63, 64, 65, 66,
	66, 66, 66, 66, 67, 67, 67, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 69, 70, 70, 70, 71, 71,
	72, 72, 73, 73, 74, 74, 75, 75, 75, 76,
	76, 77, 78, 79, 79, 79, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 81, 81, 81, 81, 81,
	81, 81, 82, 82, 82, 82, 83, 83, 84, 84,
	84, 84, 84, 84, 84, 84, 85, 85, 85, 85,
	85, 85, 86, 86, 87, 87, 87, 87, 87, 87,
	87, 87, 87, 87, 87, 87, 88, 89, 89, 90,
	90, 91, 91, 92, 92, 92, 93, 93, 93, 94,
	94, 95, 95, 96, 96, 97, 97, 97, 97, 98,
	98, 98, 98, 99, 99, 102, 102, 102, 103, 103,
	103, 104, 104, 104, 104, 105, 105, 105, 105, 105,
	105, 105, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 107, 107, 108, 108, 109, 109, 109, 110,
	111, 111, 112, 112, 113, 113, 114, 114, 115, 115,
	116, 116, 117, 117, 100, 100, 101, 101, 118, 118,
	119, 119, 120, 120, 120, 120, 121, 122, 123, 123,
	124, 124, 124, 124, 124, 124, 124, 124, 125, 125,
	126, 126, 127, 127, 128, 128, 129, 129, 130, 130,
	131, 131, 132, 132, 133, 133, 134, 134, 135, 135,
	136, 136, 137, 137, 138, 138, 139, 139, 140, 140,
	141, 141, 142, 142, 142, 142, 142, 142, 142, 142,
	143, 144, 144, 145, 146, 146, 147, 147, 148, 149,
	150, 151, 151, 152, 152, 153, 153, 154, 154, 155,
	155, 155, 156, 156, 157, 157, 158, 158, 159, 159,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 8, 8, 9, 9, 1, 1, 1,
	2, 1, 1, 7, 8, 6, 1, 1, 7, 8,
	6, 1, 1, 1, 1, 1, 6, 8, 8, 9,
	9, 1, 2, 1, 1, 7, 8, 6, 1, 1,
	7, 8, 6, 1, 1, 1, 2, 2, 1, 2,
	4, 4, 4, 4, 2, 1, 1, 6, 8, 5,
	6, 8, 5, 7, 7, 7, 7, 1, 3, 1,
	3, 0, 1, 1, 2, 2, 5, 5, 2, 4,
	2, 3, 5, 6, 8, 5, 3, 1, 3, 1,
	3, 4, 2, 4, 3, 1, 1, 3, 3, 1,
	3, 1, 1, 3, 9, 10, 10, 12, 3, 0,
	1, 1, 1, 1, 2, 2, 5, 6, 3, 4,
	4, 4, 4, 4, 4, 2, 2, 2, 2, 4,
	4, 2, 2, 2, 4, 1, 2, 2, 4, 2,
	2, 1, 2, 2, 3, 4, 4, 6, 9, 11,
	5, 4, 4, 4, 1, 1, 3, 2, 0, 2,
	0, 2, 0, 3, 0, 2, 0, 3, 1, 6,
	5, 0, 1, 2, 1, 1, 0, 1, 1, 1,
	1, 0, 1, 1, 0, 3, 0, 2, 6, 9,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 1, 3, 1, 6, 1, 3,
	1, 3, 2, 4, 1, 1, 0, 1, 1, 1,
	1, 3, 3, 3, 1, 6, 3, 3, 3, 3,
	4, 4, 5, 6, 6, 3, 4, 4, 3, 4,
	4, 4, 4, 4, 2, 3, 3, 3, 3, 3,
	2, 2, 3, 3, 2, 2, 0, 1, 4, 4,
	6, 8, 3, 4, 4, 4, 5, 5, 5, 5,
	5, 1, 5, 10, 8, 9, 9, 9, 9, 9,
	9, 8, 8, 10, 8, 10, 2, 1, 5, 0,
	3, 2, 5, 2, 2, 2, 2, 2, 2, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 4,
	6, 6, 8, 1, 1, 1, 6, 6, 1, 2,
	3, 1, 2, 3, 4, 1, 2, 3, 1, 1,
	1, 3, 4, 5, 6, 5, 6, 5, 6, 7,
	6, 7, 2, 4, 1, 1, 1, 3, 1, 5,
	0, 1, 4, 5, 0, 2, 1, 3, 1, 3,
	1, 3, 1, 3, 1, 3, 1, 3, 1, 3,
	1, 3, 6, 9, 5, 8, 7, 3, 1, 3,
	10, 13, 9, 12, 9, 12, 8, 11, 5, 6,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 4, 5, 0, 2, 4, 5, 0, 2,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 1, 3, 1, 3, 1, 1,
	1, 0, 1, 0, 1, 0, 1, 0, 1, 1,
	1, 1, 0, 1, 0, 1, 0, 1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -11, -42, -43, -120, -121, -124,
	-125, -23, -20, -21, -27, -28, -31, -37, -22, -40,
	-41, -68, 15, 88, 87, -8, -10, -60, 27, 32,
	35, 133, 96, -145, 102, 20, 21, 100, 101, 99,
	103, 120, 111, 112, 33, 124, 134, 116, 117, 118,
	119, 125, 121, 122, 123, 126, -63, -81, -78, -77,
	-84, -85, -110, -80, -82, -143, -148, -149, -150, -39,
	166, 16, 90, 115, 80, 5, 6, 7, -64, -65,
	-67, 160, 161, -142, 145, 147, 148, 146, -86, -70,
	70, 74, 165, 11, 13, 14, 12, 97, 9, 78,
	-66, 4, 135, 136, 137, 139, 140, 141, 142, 149,
	143, 30, 158, -68, 166, -145, 88, 27, 133, 87,
	-111, -67, -68, -44, -46, 24, 19, 27, 22, -45,
	17, -77, 166, 166, 25, 36, 36, -147, 166, -146,
	-143, -147, -142, -143, 97, 44, 103, 127, -148, -150,
	-148, -142, -142, -38, 104, 105, 37, 38, 106, 107,
	-142, -142, -68, -68, -68, -150, -142, -68, -68, -68,
	-142, -68, -115, -67, -142, -68, -142, -142, 155, -67,
	-68, -115, -42, -60, -68, -143, -144, -9, 133, 96,
	6, -62, -61, -157, 31, 154, 153, 159, 77, 75,
	74, 71, 76, -159, 161, 160, 162, 163, 164, 73,
	72, -67, -67, 169, 166, 166, 166, 166, 166, 153,
	159, -152, -159, 74, -77, -67, -67, -142, 166, 166,
	169, -1, 92, -115, -83, 166, -111, -134, -112, 91,
	-52, 45, -47, -48, 25, 18, 25, -101, -99, -96,
	-98, -142, 30, -97, 139, 140, 141, 142, 25, 18,
	-100, -96, 65, 66, 67, -151, 79, -83, -115, -99,
	-142, -99, -151, 168, 155, 97, 44, 127, 128, -142,
	-96, -142, -142, 159, 43, 159, 43, 62, -142, -68,
	-68, 18, 62, 62, 43, 18, 18, 168, 62, 168,
	-68, 6, -67, 167, 167, 167, 167, -46, 94, 71,
	168, 71, -143, -144, 168, -142, -67, -67, -67, -152,
	-67, 75, 71, 76, -70, 166, -77, -67, 69, 68,
	-67, -67, -67, -67, -67, -67, -67, -142, 6, -83,
	-151, -83, -67, 167, -119, -109, -108, -69, -67, -87,
	162, -142, 148, 133, 146, 149, 150, 151, 152, -151,
	-151, -70, -70, 75, 71, 69, 68, 77, 146, -151,
	-67, -142, 6, -1, 167, 91, -135, 93, -113, 93,
	-67, -68, -53, -59, 51, 52, 48, -48, -49, 23,
	-144, -143, -117, -105, -102, -106, 29, -103, 166, -99,
	144, -77, -99, 20, 168, 166, -99, -117, 18, 168,
	-156, 68, -156, -156, -119, 167, 62, 166, 166, -158,
	28, 33, 34, 42, 20, -83, -147, -67, 98, 166,
	28, 166, 166, -68, -142, -68, -142, -142, -68, -142,
	-68, -30, -29, -68, 25, 5, -30, -116, -68, -150,
	-150, -99, -116, -116, -115, -68, -2, -12, -5, -13,
	88, 87, -8, -10, -6, 113, 114, -142, -144, -142,
	71, 71, -62, 28, 166, -64, -65, 72, -67, -70,
	-67, -70, -70, 167, -83, 167, 18, 167, 168, 28,
	166, 166, 166, 166, 166, 166, 166, 166, -83, -83,
	-69, -70, -79, 166, -77, 143, -79, -79, -152, -83,
	168, -127, -126, 93, 89, 95, -1, 95, -67, 92,
	92, 98, 99, -68, -68, -72, -73, -74, -67, -87,
	-49, -50, 46, -67, 60, -153, -155, 63, 168, 55,
	57, 58, 59, -142, 28, -105, 166, -142, 28, 26,
	166, -42, -123, -122, -66, -142, -101, -96, -68, -142,
	30, 62, 166, -49, -117, -100, -45, -44, -45, -45,
	166, -114, -66, -118, -142, -42, -24, 166, -142, -66,
	166, -66, -142, 167, -42, -142, -118, -42, 167, -36,
	-33, -35, -32, -34, -143, -142, 168, 28, -144, 168,
	95, 158, -68, -111, 94, 94, -142, -142, 166, -118,
	-67, 72, 167, -67, -119, -142, -83, -151, -151, -151,
	-151, -151, -83, -83, -83, 167, 167, 167, 72, -71,
	-70, 166, 100, 71, 167, -67, 95, -127, -1, -68,
	87, -67, -1, 19, -55, 37, 104, -56, -57, 53,
	86, 137, -58, 86, 137, 168, -75, 49, 50, -50,
	-51, 47, 48, 54, 54, -154, 56, -153, -155, -104,
	-105, 64, -103, -142, 167, -68, -142, -71, -114, -48,
	168, 159, 167, 168, 168, 166, -114, -49, -114, 167,
	168, 167, 168, -26, 37, 38, 39, 40, -25, -24,
	41, -114, 43, 43, 167, 28, 167, 168, 168, 41,
	167, 168, -30, -142, -116, 90, -2, 92, -136, 91,
	-2, -2, 94, 94, -42, 167, -67, 167, 98, 167,
	-83, -83, -83, -83, -69, -83, 167, 167, 167, -70,
	167, 168, -67, 81, 132, 167, 88, 95, 92, -112,
	-134, 91, -68, -54, 138, 80, -72, 136, -51, -67,
	-115, -105, 64, -105, 64, 54, 54, -154, -103, 168,
	168, 167, -49, -123, -67, -83, -96, -114, 167, 167,
	62, -114, -158, -118, -66, -66, 167, 168, -67, 167,
	-142, -142, -68, 28, 129, 28, -32, -35, -35, -143,
	-68, 28, -36, -2, -137, 93, -68, 95, 95, -2,
	-2, 167, 28, -67, 110, 167, 167, 167, 167, 167,
	167, 110, 110, 131, 110, 131, -71, 168, 46, 88,
	-1, -57, -59, 135, -76, 37, 38, -52, -103, -107,
	61, 62, -103, -105, 64, -105, 64, 54, 168, -104,
	-142, -68, 26, -42, 167, 167, 168, 167, 62, 26,
	-42, 166, -42, -26, -25, -42, -3, -14, -5, -18,
	88, 87, -15, -16, 90, 130, 129, 129, 167, -129,
	-128, 93, 89, 95, -2, 92, 90, 90, 95, 95,
	166, 167, 166, 110, 110, 110, 110, 110, 110, 166,
	166, 136, 166, 136, -67, 166, -126, -54, -53, -67,
	166, -107, -107, -103, -103, -105, 64, -104, 167, 167,
	-71, -83, 26, -42, 166, -71, -114, 95, 158, -68,
	-111, -68, -143, -144, -9, -68, -3, -3, 28, 95,
	-129, -2, -68, 87, -2, 90, 90, -42, -89, -88,
	-90, 109, 166, 166, 166, 166, 166, 166, -88, -90,
	-89, 110, -88, 110, 167, -52, 98, -118, -107, -103,
	167, -71, -114, 167, -3, 92, -138, 91, 94, 71,
	71, -143, -144, 95, 95, 129, 88, 95, 92, -136,
	91, 167, 167, -52, 45, 48, -89, -89, -89, -89,
	-89, -88, 167, 167, 166, 167, 166, 167, 19, 167,
	167, 26, -42, -3, -139, 93, -68, -4, -17, -5,
	-19, 88, 87, -15, -16, -6, -142, -142, 71, 71,
	-3, 88, -2, 48, -115, 167, 167, 167, 167, 167,
	167, -89, -88, 26, -42, -71, -131, -130, 93, 89,
	95, -3, 92, 95, 158, -68, -111, 94, 94, -142,
	-142, 95, -128, -72, 167, 167, -71, 95, -131, -3,
	-68, 87, -3, 90, -4, 92, -140, 91, -4, -4,
	94, 94, -91, 137, 88, 95, 92, -138, 91, -4,
	-141, 93, -68, 95, 95, -4, -4, -92, 75, 82,
	6, 85, 88, -3, -133, -132, 93, 89, 95, -4,
	92, 90, 90, 95, 95, -94, 82, -93, 6, 85,
	83, 83, 86, -130, 95, -133, -4, -68, 87, -4,
	90, 90, 72, 83, 83, 84, 86, 88, 95, 92,
	-140, 91, -95, 82, -93, 88, -4, 84, -132,
}
var yyDef = [...]int{

	-2, -2, 2, 30, 31, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
	25, -2, 27, 0, 400, 46, 47, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 139,
	0, 0, 85, 86, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 171, 0, 0, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 248, 249, 250, 251,
	216, 253, 0, 39, 504, 222, 223, 224, 225, 226,
	0, 0, 0, 229, 0, 0, 0, 0, 321, 493,
	0, 0, 0, 480, 488, 489, 490, 0, 227, 228,
	234, 472, 473, 474, 475, 476, 477, 478, 479, 0,
	0, 0, -2, 235, -2, 247, 0, 0, 0, 400,
	0, 401, 235, -2, 188, 0, 0, 0, 0, 0,
	491, 185, 216, 306, 0, 0, 0, 76, 491, 486,
	484, 77, 0, 79, 0, 0, 0, 0, 0, 0,
	84, 108, 110, 0, 140, 141, 142, 143, 0, 0,
	0, -2, -2, 235, 235, 155, 167, -2, -2, -2,
	-2, -2, 166, 408, -2, -2, 172, 173, 0, 0,
	235, 0, 0, 0, 235, 246, 0, 0, 37, 38,
	40, 217, 220, 0, 505, 0, 508, 509, 493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 301, 0, 306, 306, 0, 491, 491, 508,
	509, 0, 0, 494, 294, 304, 305, 0, 491, 0,
	0, 3, -2, 0, 0, 306, 0, 458, 404, 0,
	214, 0, 188, 190, 0, 0, 0, 0, 416, 363,
	364, 353, 354, 0, -2, -2, -2, -2, 0, 0,
	0, 414, 502, 502, 502, 0, 492, 0, 307, 0,
	506, 0, 306, 0, 0, 0, 0, 0, 0, 111,
	116, 124, 138, 0, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 223, 483, 236, 252, 255, 271, 188, -2, 0,
	0, 0, 0, 0, 504, 0, 272, -2, -2, 0,
	0, 0, 0, 0, 285, 216, 256, -2, 0, 0,
	295, 296, 297, 298, 299, 302, 303, 230, 232, 0,
	306, 0, 408, 312, 0, 420, 396, 398, 394, 395,
	254, 229, 0, 0, 0, 0, 0, 0, 0, 306,
	306, 277, 279, 0, 0, 0, 0, 493, 148, 306,
	0, 231, 233, 442, 314, 0, 0, -2, 0, 0,
	0, 235, 176, 198, 0, 0, 0, 190, 192, 0,
	187, 481, 189, -2, 375, 378, 379, 380, 216, 365,
	0, 368, 216, 0, 0, 0, 0, 190, 0, 0,
	0, 503, 0, 0, 186, 315, 0, 0, 0, 216,
	507, 0, 0, 0, 0, 0, 487, 485, 216, 0,
	216, 0, 0, -2, -2, -2, -2, -2, -2, -2,
	-2, 109, 119, -2, 0, 121, 123, 164, -2, 153,
	154, 168, 159, 160, 409, -2, 0, 0, 41, 42,
	0, 400, 51, 52, 53, 28, 29, 0, 482, 0,
	0, 0, 221, 0, 0, 280, 281, 0, 0, 286,
	-2, 290, 292, 308, 0, 309, 0, 313, 0, 0,
	306, 491, 491, 491, 491, 306, 306, 306, 0, 0,
	0, 0, 287, 216, 274, 0, 291, 293, 0, 0,
	0, 0, 442, -2, 0, 0, 459, 399, 405, 0,
	-2, 0, 0, -2, -2, 197, 260, 266, 264, 265,
	192, 194, 0, 191, 0, 0, 497, 495, 0, 496,
	499, 500, 501, 376, 0, 495, 0, 369, 0, 0,
	0, 424, 188, 428, 0, 229, 417, 0, 235, -2,
	354, 0, 0, 438, 190, 415, 181, 184, 182, 183,
	0, 0, 406, 0, 418, 89, 101, 0, 97, 92,
	0, 0, 0, 318, 106, 107, 0, 115, 0, 0,
	131, 132, 126, 129, 125, 0, 0, 0, 112, 0,
	0, -2, 235, 0, -2, -2, 0, 0, 216, 0,
	282, 0, 316, 0, 421, 397, 0, 306, 306, 306,
	306, 306, 0, 0, 0, 317, 319, 320, 0, 0,
	258, 0, 146, 0, 322, 0, 0, 0, 443, 235,
	45, 402, 456, 177, 0, 204, 205, 201, 207, 208,
	209, 210, 215, 212, 213, 0, 262, 267, 268, 194,
	180, 0, 0, 0, 0, 0, 498, 0, 497, 413,
	-2, 0, 380, 377, 381, 235, 370, 422, 0, 190,
	0, 0, 359, 306, 0, 0, 0, 439, 0, 0,
	0, -2, 0, 90, 102, 103, 0, 0, 0, 99,
	0, 0, 0, 0, 113, 0, 0, 0, 0, 0,
	0, 0, 120, 118, 411, 32, 5, -2, 462, 0,
	0, 0, -2, -2, 0, 0, 283, 310, 0, 308,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	273, 0, 0, 147, 0, 257, 43, 0, -2, 403,
	457, 0, 235, 214, 202, 0, 261, 0, 196, 195,
	193, 382, 0, 495, 0, 0, 0, 0, 372, 0,
	0, 216, 426, 429, 427, 0, 0, 0, 0, 216,
	0, 407, 216, 419, 104, 105, 101, 0, 98, 93,
	94, -2, -2, 216, -2, 0, 127, 133, 130, 0,
	-2, 0, 0, 446, 0, -2, 235, 0, 0, 0,
	0, 218, 0, 0, 0, 316, 317, 318, 319, 320,
	322, 0, 0, 0, 0, 0, 259, 0, 0, 44,
	440, 201, 200, 203, 263, 269, 270, 214, 387, 383,
	0, 0, 0, 495, 0, 385, 0, 0, 0, 373,
	229, 235, 0, 425, 360, 361, 306, 216, 0, 0,
	436, 0, 88, 91, 100, 114, 0, 0, 54, 55,
	0, 400, 68, 69, 0, 61, -2, -2, 0, 0,
	446, -2, 0, 0, 463, -2, 33, 34, 0, 0,
	216, 311, 339, 0, 0, 0, 0, 0, 0, 339,
	339, 0, 339, 0, 0, 196, 441, 199, 178, 392,
	0, 388, 384, 0, 390, 386, 0, 374, 366, 367,
	423, 0, 0, 432, 0, 434, 0, 134, -2, 235,
	0, 235, 246, 0, 0, -2, 0, 0, 0, 0,
	0, 447, 235, 50, 460, 35, 36, 0, 0, 337,
	196, 0, 339, 339, 339, 339, 339, 339, 0, 196,
	0, 0, 0, 0, 275, 0, 0, 0, 389, 391,
	362, 430, 0, 216, 7, -2, 466, 0, -2, 0,
	0, 0, 0, 135, 136, -2, 48, 0, -2, 461,
	0, 219, 324, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 332, 339, 334, 339, 323, 179, 393,
	216, 0, 437, 450, 0, -2, 235, 0, 0, 63,
	64, 0, 400, 73, 74, 75, 0, 0, 0, 0,
	0, 49, 444, 0, 340, 325, 326, 327, 328, 329,
	330, 0, 0, 0, 433, 435, 0, 450, -2, 0,
	0, 467, -2, 0, -2, 235, 0, -2, -2, 0,
	0, 137, 445, 197, 333, 335, 431, 0, 0, 451,
	235, 67, 464, 56, 9, -2, 470, 0, 0, 0,
	-2, -2, 338, 0, 65, 0, -2, 465, 0, 454,
	0, -2, 235, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 66, 448, 0, 454, -2, 0, 0, 471,
	-2, 57, 58, 0, 0, 0, 0, 350, 0, 0,
	343, 344, 345, 449, 0, 0, 455, 235, 72, 468,
	59, 60, 0, 349, 346, 347, 348, 70, 0, -2,
	469, 0, 342, 0, 352, 71, 452, 351, 453,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 165, 3, 3, 3, 164, 3, 3,
	166, 167, 162, 161, 168, 160, 169, 163, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 158,
	3, 159,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:248
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:253
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:258
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:265
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:269
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:275
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:279
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:285
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:289
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:295
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:299
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:303
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:307
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:311
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:315
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:319
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:323
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:327
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:331
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:335
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:339
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:343
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:347
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:351
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:355
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:359
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:363
		{
			yyVAL.statement = ExternalCommand{BaseExpr: NewBaseExpr(yyDollar[1].token), Command: yyDollar[1].token.Literal}
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:369
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:373
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:379
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:383
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 32:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:389
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 33:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:393
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 34:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:397
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 35:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:401
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 36:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:405
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:411
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:415
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:421
		{
			yyVAL.statement = Exit{}
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:425
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:431
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:435
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:441
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:445
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:449
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:453
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:457
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 48:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:463
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 49:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:467
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 50:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:471
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:475
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:479
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:483
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:489
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:493
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 56:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:499
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:503
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 58:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:507
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 59:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:511
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 60:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:515
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:521
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:525
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:531
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:535
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:541
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 66:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:545
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 67:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:549
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:553
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:557
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 70:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:563
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 71:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:567
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 72:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:571
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:575
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:579
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:583
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:589
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:593
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:597
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:601
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:607
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 81:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:611
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:615
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:619
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:623
		{
			yyVAL.statement = UnsetEnvVar{EnvVar: yyDollar[2].envvar}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:629
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:633
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 87:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:639
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:643
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 89:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:647
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 90:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:651
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:655
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:659
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:663
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 94:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:667
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 95:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:671
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].identifier}
		}
	case 96:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:675
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].queryexpr}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:681
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:685
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:691
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:695
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:701
		{
			yyVAL.expression = nil
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:705
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:709
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:713
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:717
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:723
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 107:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:727
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Statement: yyDollar[5].identifier}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:731
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 109:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:735
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:739
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:743
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 112:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:747
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:753
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 114:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:757
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 115:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:761
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:765
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].queryexpr}
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:771
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:775
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr, Name: yyDollar[3].identifier}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:781
		{
			yyVAL.replacevals = []ReplaceValue{yyDollar[1].replaceval}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:785
		{
			yyVAL.replacevals = append([]ReplaceValue{yyDollar[1].replaceval}, yyDollar[3].replacevals...)
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:791
		{
			yyVAL.statement = StatementPreparation{Name: yyDollar[2].identifier, Statement: value.NewString(yyDollar[4].token.Literal)}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:795
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier}
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:799
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:803
		{
			yyVAL.statement = DisposeStatement{Name: yyDollar[3].identifier}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:809
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:815
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:819
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:825
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:831
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:835
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:841
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:845
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:849
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 134:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:855
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 135:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:859
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 136:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:863
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 137:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:867
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:871
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:877
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:881
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:885
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:889
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:893
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:897
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:901
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:907
		{
			yyVAL.queryexpr = CursorStatus{Cursor: yyDollar[2].identifier, Negation: yyDollar[4].token, Type: yyDollar[5].token}
		}
	case 147:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:911
		{
			yyVAL.queryexpr = CursorStatus{Cursor: yyDollar[2].identifier, Negation: yyDollar[4].token, Type: yyDollar[6].token}
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:915
		{
			yyVAL.queryexpr = CursorAttrebute{Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:921
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:925
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:929
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:933
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:937
		{
			yyVAL.statement = AddFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:941
		{
			yyVAL.statement = RemoveFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:945
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:949
		{
			yyVAL.statement = Echo{Value: yyDollar[2].queryexpr}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:953
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:957
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:961
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:965
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:969
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].identifier}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:973
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:977
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr}
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:981
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:985
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:989
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token), Keywords: yyDollar[2].queryexprs}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:993
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:997
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier, Table: yyDollar[4].queryexpr}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1001
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].identifier}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1005
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].queryexpr}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1009
		{
			yyVAL.statement = Pwd{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1013
		{
			yyVAL.statement = Reload{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1019
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1023
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[3].queryexpr}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1027
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1033
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
			}
		}
	case 177:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1042
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				Context:       yyDollar[6].token,
			}
		}
	case 178:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1054
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause: yyDollar[1].queryexpr,
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[2].queryexpr,
					IntoClause:    yyDollar[3].queryexpr,
					FromClause:    yyDollar[4].queryexpr,
					WhereClause:   yyDollar[5].queryexpr,
					GroupByClause: yyDollar[6].queryexpr,
					HavingClause:  yyDollar[7].queryexpr,
				},
				OrderByClause: yyDollar[8].queryexpr,
				LimitClause:   yyDollar[9].queryexpr,
			}
		}
	case 179:
		yyDollar = yyS[yypt-11 : yypt+1]
		//line parser.y:1070
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause: yyDollar[1].queryexpr,
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[2].queryexpr,
					IntoClause:    yyDollar[3].queryexpr,
					FromClause:    yyDollar[4].queryexpr,
					WhereClause:   yyDollar[5].queryexpr,
					GroupByClause: yyDollar[6].queryexpr,
					HavingClause:  yyDollar[7].queryexpr,
				},
				OrderByClause: yyDollar[8].queryexpr,
				LimitClause:   yyDollar[9].queryexpr,
				Context:       yyDollar[11].token,
			}
		}
	case 180:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1089
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1099
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1108
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1117
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1128
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1132
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1138
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1144
		{
			yyVAL.queryexpr = IntoClause{Variables: yyDollar[2].variables}
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1150
		{
			yyVAL.queryexpr = nil
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1154
		{
			yyVAL.queryexpr = FromClause{Tables: yyDollar[2].queryexprs}
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1160
		{
			yyVAL.queryexpr = nil
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1164
		{
			yyVAL.queryexpr = WhereClause{Filter: yyDollar[2].queryexpr}
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1170
		{
			yyVAL.queryexpr = nil
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1174
		{
			yyVAL.queryexpr = GroupByClause{Items: yyDollar[3].queryexprs}
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1180
		{
			yyVAL.queryexpr = nil
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1184
		{
			yyVAL.queryexpr = HavingClause{Filter: yyDollar[2].queryexpr}
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1190
		{
			yyVAL.queryexpr = nil
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1194
		{
			yyVAL.queryexpr = OrderByClause{Items: yyDollar[3].queryexprs}
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1200
		{
			if yyDollar[1].queryexpr == nil {
				yyVAL.queryexpr = yyDollar[1].queryexpr
			} else {
				yyVAL.queryexpr = LimitClause{BaseExpr: yyDollar[1].queryexpr.(OffsetClause).BaseExpr, OffsetClause: yyDollar[1].queryexpr}
			}
		}
	case 199:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1208
		{
			var base *BaseExpr
			if yyDollar[1].queryexpr == nil {
				base = NewBaseExpr(yyDollar[2].token)
			} else {
				base = yyDollar[1].queryexpr.(OffsetClause).BaseExpr
			}
			yyVAL.queryexpr = LimitClause{BaseExpr: base, Type: yyDollar[2].token, Position: yyDollar[3].token, Value: yyDollar[4].queryexpr, Unit: yyDollar[5].token, Restriction: yyDollar[6].token, OffsetClause: yyDollar[1].queryexpr}
		}
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1218
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, Value: yyDollar[2].queryexpr, Unit: yyDollar[3].token, Restriction: yyDollar[4].token, OffsetClause: yyDollar[5].queryexpr}
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1224
		{
			yyVAL.token = Token{}
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1228
		{
			yyVAL.token = yyDollar[1].token
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1232
		{
			yyVAL.token = yyDollar[2].token
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1238
		{
			yyVAL.token = yyDollar[1].token
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1242
		{
			yyVAL.token = yyDollar[1].token
		}
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1248
		{
			yyVAL.token = Token{}
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1252
		{
			yyVAL.token = yyDollar[1].token
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1258
		{
			yyVAL.token = yyDollar[1].token
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1262
		{
			yyVAL.token = yyDollar[1].token
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1266
		{
			yyVAL.token = yyDollar[1].token
		}
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1272
		{
			yyVAL.token = Token{}
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1276
		{
			yyVAL.token = yyDollar[1].token
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1280
		{
			yyVAL.token = yyDollar[1].token
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1286
		{
			yyVAL.queryexpr = nil
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1290
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: yyDollar[2].queryexpr, Unit: yyDollar[3].token}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1296
		{
			yyVAL.queryexpr = nil
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1300
		{
			yyVAL.queryexpr = WithClause{InlineTables: yyDollar[2].queryexprs}
		}
	case 218:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1306
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 219:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1310
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1316
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1320
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1326
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1330
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1334
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1338
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1342
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1348
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1354
		{
			yyVAL.queryexpr = NewNullValue()
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1360
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1364
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1368
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1372
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1376
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1382
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1386
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1390
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1396
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1400
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1404
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1408
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1412
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1416
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1420
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1424
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1428
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1432
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1436
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1440
		{
			yyVAL.queryexpr = yyDollar[1].envvar
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1444
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1448
		{
			yyVAL.queryexpr = yyDollar[1].flag
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1452
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1456
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1460
		{
			name := ""
			if yyDollar[1].token.Literal[0] == ':' {
				name = yyDollar[1].token.Literal[1:]
			}
			yyVAL.queryexpr = Placeholder{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Ordinal: yyDollar[1].token.HolderOrdinal, Name: name}
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1470
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1476
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1480
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 257:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1484
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1490
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1494
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1500
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1504
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1510
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1514
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, NullsPosition: yyDollar[4].token}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1520
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1524
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 266:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1530
		{
			yyVAL.token = Token{}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1534
		{
			yyVAL.token = yyDollar[1].token
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1538
		{
			yyVAL.token = yyDollar[1].token
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1544
		{
			yyVAL.token = yyDollar[1].token
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1548
		{
			yyVAL.token = yyDollar[1].token
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1554
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1560
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1583
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1587
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 275:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1591
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1597
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1601
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1605
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1609
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1613
		{
			yyVAL.queryexpr = Is{LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1617
		{
			yyVAL.queryexpr = Is{LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1621
		{
			yyVAL.queryexpr = Between{LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 283:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1625
		{
			yyVAL.queryexpr = Between{LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 284:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1629
		{
			yyVAL.queryexpr = Between{LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1633
		{
			yyVAL.queryexpr = In{LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1637
		{
			yyVAL.queryexpr = In{LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1641
		{
			yyVAL.queryexpr = In{LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1645
		{
			yyVAL.queryexpr = Like{LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 289:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1649
		{
			yyVAL.queryexpr = Like{LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 290:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1653
		{
			yyVAL.queryexpr = Any{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 291:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1657
		{
			yyVAL.queryexpr = Any{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 292:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1661
		{
			yyVAL.queryexpr = All{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 293:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1665
		{
			yyVAL.queryexpr = All{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1669
		{
			yyVAL.queryexpr = Exists{Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1675
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1679
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1683
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1687
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1691
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1695
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1699
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1705
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1709
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1713
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1717
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1723
		{
			yyVAL.queryexprs = nil
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1727
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1733
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1737
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 310:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1741
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: []QueryExpression{yyDollar[3].queryexpr, yyDollar[5].queryexpr}, From: yyDollar[4].token}
		}
	case 311:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1745
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: []QueryExpression{yyDollar[3].queryexpr, yyDollar[5].queryexpr, yyDollar[7].queryexpr}, From: yyDollar[4].token, For: yyDollar[6].token}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1749
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1753
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1757
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1761
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 316:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1768
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 317:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1772
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 318:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1776
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 319:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1780
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 320:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1784
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1788
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1794
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 323:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1798
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, OrderBy: yyDollar[9].queryexpr}
		}
	case 324:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1804
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 325:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1808
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 326:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1812
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 327:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1816
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 328:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1820
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 329:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1824
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 330:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1828
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 331:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1832
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 332:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1836
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 333:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1840
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreType: yyDollar[6].token, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 334:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1844
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 335:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1848
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreType: yyDollar[6].token, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1854
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1860
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 338:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1864
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: OrderByClause{Items: yyDollar[4].queryexprs}, WindowingClause: yyDollar[5].queryexpr}
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1870
		{
			yyVAL.queryexpr = nil
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1874
		{
			yyVAL.queryexpr = PartitionClause{Values: yyDollar[3].queryexprs}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1880
		{
			yyVAL.queryexpr = WindowingClause{FrameLow: yyDollar[2].queryexpr}
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1884
		{
			yyVAL.queryexpr = WindowingClause{FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1890
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Unbounded: yyDollar[1].token}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1894
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Offset: i}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1899
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1905
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Offset: i}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1910
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Offset: i}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1915
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1921
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Unbounded: yyDollar[1].token}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1925
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1931
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Unbounded: yyDollar[1].token}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1935
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1941
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1945
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1951
		{
			yyVAL.token = yyDollar[1].token
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1955
		{
			yyVAL.token = yyDollar[1].token
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1959
		{
			yyVAL.token = yyDollar[1].token
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1963
		{
			yyVAL.token = yyDollar[1].token
		}
	case 359:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1969
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, Path: yyDollar[3].queryexpr, Args: nil}
		}
	case 360:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1973
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, Path: yyDollar[3].queryexpr, Args: yyDollar[5].queryexprs}
		}
	case 361:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1977
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: nil}
		}
	case 362:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1981
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: yyDollar[7].queryexprs}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1987
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1991
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1997
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 366:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2001
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].identifier}
		}
	case 367:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2005
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2011
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr}
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2015
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2019
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token, Alias: yyDollar[3].identifier}
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2025
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2029
		{
			yyDollar[2].table.Lateral = yyDollar[1].token
			yyDollar[2].table.BaseExpr = NewBaseExpr(yyDollar[1].token)
			yyVAL.queryexprs = []QueryExpression{yyDollar[2].table}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2035
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].table}, yyDollar[3].queryexprs...)
		}
	case 374:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2039
		{
			yyDollar[2].table.Lateral = yyDollar[1].token
			yyDollar[2].table.BaseExpr = NewBaseExpr(yyDollar[1].token)
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[2].table}, yyDollar[4].queryexprs...)
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2047
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2051
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2055
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token, Alias: yyDollar[3].identifier}
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2059
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2063
		{
			yyVAL.queryexpr = Table{Object: Dual{}}
		}
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2067
		{
			yyVAL.queryexpr = yyDollar[1].table
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2071
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 382:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2077
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 383:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2081
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 384:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2085
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 385:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2089
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 386:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2093
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 387:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2097
		{
			yyDollar[5].table.Lateral = yyDollar[4].token
			yyDollar[5].table.BaseExpr = NewBaseExpr(yyDollar[4].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].table, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 388:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2103
		{
			yyDollar[5].table.Lateral = yyDollar[4].token
			yyDollar[5].table.BaseExpr = NewBaseExpr(yyDollar[4].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].table, JoinType: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 389:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:2109
		{
			yyDollar[6].table.Lateral = yyDollar[5].token
			yyDollar[6].table.BaseExpr = NewBaseExpr(yyDollar[5].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].table, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[7].queryexpr}
		}
	case 390:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2115
		{
			yyDollar[6].table.Lateral = yyDollar[5].token
			yyDollar[6].table.BaseExpr = NewBaseExpr(yyDollar[5].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].table, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 391:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:2121
		{
			yyDollar[7].table.Lateral = yyDollar[6].token
			yyDollar[7].table.BaseExpr = NewBaseExpr(yyDollar[6].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[7].table, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2129
		{
			yyVAL.queryexpr = JoinCondition{On: yyDollar[2].queryexpr}
		}
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2133
		{
			yyVAL.queryexpr = JoinCondition{Using: yyDollar[3].queryexprs}
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2139
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2143
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2149
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2153
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token, Alias: yyDollar[3].identifier}
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2157
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 399:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2163
		{
			yyVAL.queryexpr = CaseExpr{Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 400:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2169
		{
			yyVAL.queryexpr = nil
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2173
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 402:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2179
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 403:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2183
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 404:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2189
		{
			yyVAL.queryexpr = nil
		}
	case 405:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2193
		{
			yyVAL.queryexpr = CaseExprElse{Result: yyDollar[2].queryexpr}
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2199
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2203
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2209
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2213
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2219
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 411:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2223
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2229
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2233
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2239
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2243
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2249
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2253
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2259
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2263
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2269
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2273
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 422:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2279
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, ValuesList: yyDollar[6].queryexprs}
		}
	case 423:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:2283
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 424:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2287
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 425:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:2291
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 426:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:2297
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2303
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2309
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2313
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 430:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:2319
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Keys: yyDollar[7].queryexprs, ValuesList: yyDollar[10].queryexprs}
		}
	case 431:
		yyDollar = yyS[yypt-13 : yypt+1]
		//line parser.y:2323
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Keys: yyDollar[10].queryexprs, ValuesList: yyDollar[13].queryexprs}
		}
	case 432:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:2327
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Keys: yyDollar[7].queryexprs, Query: yyDollar[9].queryexpr.(SelectQuery)}
		}
	case 433:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:2331
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Keys: yyDollar[10].queryexprs, Query: yyDollar[12].queryexpr.(SelectQuery)}
		}
	case 434:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:2335
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Keys: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 435:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:2339
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Fields: yyDollar[5].queryexprs, Keys: yyDollar[9].queryexprs, ValuesList: yyDollar[12].queryexprs}
		}
	case 436:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:2343
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Keys: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 437:
		yyDollar = yyS[yypt-11 : yypt+1]
		//line parser.y:2347
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Fields: yyDollar[5].queryexprs, Keys: yyDollar[9].queryexprs, Query: yyDollar[11].queryexpr.(SelectQuery)}
		}
	case 438:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2353
		{
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: FromClause{Tables: yyDollar[4].queryexprs}, WhereClause: yyDollar[5].queryexpr}
		}
	case 439:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2357
		{
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: FromClause{Tables: yyDollar[5].queryexprs}, WhereClause: yyDollar[6].queryexpr}
		}
	case 440:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2363
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 441:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2367
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 442:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2373
		{
			yyVAL.elseexpr = Else{}
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2377
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 444:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2383
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 445:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2387
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2393
		{
			yyVAL.elseexpr = Else{}
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2397
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2403
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2407
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 450:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2413
		{
			yyVAL.elseexpr = Else{}
		}
	case 451:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2417
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2423
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 453:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2427
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2433
		{
			yyVAL.elseexpr = Else{}
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2437
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2443
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 457:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2447
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2453
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2457
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2463
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 461:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2467
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2473
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2477
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2483
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2487
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2493
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2497
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2503
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2507
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2513
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2517
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2523
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2527
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2531
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 475:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2535
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2539
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2543
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2547
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2551
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2557
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2563
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 482:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2567
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2573
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2579
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2583
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2589
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 487:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2593
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2599
		{
			yyVAL.envvar = EnvironmentVariable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2605
		{
			yyVAL.queryexpr = RuntimeInformation{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2611
		{
			yyVAL.flag = Flag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 491:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2617
		{
			yyVAL.token = Token{}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2621
		{
			yyVAL.token = yyDollar[1].token
		}
	case 493:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2627
		{
			yyVAL.token = Token{}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2631
		{
			yyVAL.token = yyDollar[1].token
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2637
		{
			yyVAL.token = Token{}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2641
		{
			yyVAL.token = yyDollar[1].token
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2647
		{
			yyVAL.token = Token{}
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2651
		{
			yyVAL.token = yyDollar[1].token
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2657
		{
			yyVAL.token = yyDollar[1].token
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2661
		{
			yyVAL.token = yyDollar[1].token
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2665
		{
			yyVAL.token = yyDollar[1].token
		}
	case 502:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2671
		{
			yyVAL.token = Token{}
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2675
		{
			yyVAL.token = yyDollar[1].token
		}
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2681
		{
			yyVAL.token = Token{}
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2685
		{
			yyVAL.token = yyDollar[1].token
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2691
		{
			yyVAL.token = Token{}
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2695
		{
			yyVAL.token = yyDollar[1].token
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2701
		{
			yyVAL.token = yyDollar[1].token
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2705
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
