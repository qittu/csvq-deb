// Code generated by goyacc -o parser.go -v parser.output parser.y. DO NOT EDIT.

//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2

import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	table       Table
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	envvar      EnvironmentVariable
	flag        Flag
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	replaceval  ReplaceValue
	replacevals []ReplaceValue
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const ENVIRONMENT_VARIABLE = 57355
const RUNTIME_INFORMATION = 57356
const EXTERNAL_COMMAND = 57357
const PLACEHOLDER = 57358
const SELECT = 57359
const FROM = 57360
const UPDATE = 57361
const SET = 57362
const UNSET = 57363
const DELETE = 57364
const WHERE = 57365
const INSERT = 57366
const INTO = 57367
const VALUES = 57368
const REPLACE = 57369
const AS = 57370
const DUAL = 57371
const STDIN = 57372
const RECURSIVE = 57373
const CREATE = 57374
const ADD = 57375
const DROP = 57376
const ALTER = 57377
const TABLE = 57378
const FIRST = 57379
const LAST = 57380
const AFTER = 57381
const BEFORE = 57382
const DEFAULT = 57383
const RENAME = 57384
const TO = 57385
const VIEW = 57386
const ORDER = 57387
const GROUP = 57388
const HAVING = 57389
const BY = 57390
const ASC = 57391
const DESC = 57392
const LIMIT = 57393
const OFFSET = 57394
const PERCENT = 57395
const JOIN = 57396
const INNER = 57397
const OUTER = 57398
const LEFT = 57399
const RIGHT = 57400
const FULL = 57401
const CROSS = 57402
const ON = 57403
const USING = 57404
const NATURAL = 57405
const LATERAL = 57406
const UNION = 57407
const INTERSECT = 57408
const EXCEPT = 57409
const ALL = 57410
const ANY = 57411
const EXISTS = 57412
const IN = 57413
const AND = 57414
const OR = 57415
const NOT = 57416
const BETWEEN = 57417
const LIKE = 57418
const IS = 57419
const NULL = 57420
const DISTINCT = 57421
const WITH = 57422
const RANGE = 57423
const UNBOUNDED = 57424
const PRECEDING = 57425
const FOLLOWING = 57426
const CURRENT = 57427
const ROW = 57428
const CASE = 57429
const IF = 57430
const ELSEIF = 57431
const WHILE = 57432
const WHEN = 57433
const THEN = 57434
const ELSE = 57435
const DO = 57436
const END = 57437
const DECLARE = 57438
const CURSOR = 57439
const FOR = 57440
const FETCH = 57441
const OPEN = 57442
const CLOSE = 57443
const DISPOSE = 57444
const PREPARE = 57445
const NEXT = 57446
const PRIOR = 57447
const ABSOLUTE = 57448
const RELATIVE = 57449
const SEPARATOR = 57450
const PARTITION = 57451
const OVER = 57452
const COMMIT = 57453
const ROLLBACK = 57454
const CONTINUE = 57455
const BREAK = 57456
const EXIT = 57457
const ECHO = 57458
const PRINT = 57459
const PRINTF = 57460
const SOURCE = 57461
const EXECUTE = 57462
const CHDIR = 57463
const PWD = 57464
const RELOAD = 57465
const REMOVE = 57466
const SYNTAX = 57467
const TRIGGER = 57468
const FUNCTION = 57469
const AGGREGATE = 57470
const BEGIN = 57471
const RETURN = 57472
const IGNORE = 57473
const WITHIN = 57474
const VAR = 57475
const SHOW = 57476
const TIES = 57477
const NULLS = 57478
const ROWS = 57479
const ONLY = 57480
const CSV = 57481
const JSON = 57482
const FIXED = 57483
const LTSV = 57484
const CSV_INLINE = 57485
const JSON_INLINE = 57486
const JSON_TABLE = 57487
const JSON_ROW = 57488
const SUBSTRING = 57489
const COUNT = 57490
const JSON_OBJECT = 57491
const AGGREGATE_FUNCTION = 57492
const LIST_FUNCTION = 57493
const ANALYTIC_FUNCTION = 57494
const FUNCTION_NTH = 57495
const FUNCTION_WITH_INS = 57496
const COMPARISON_OP = 57497
const STRING_OP = 57498
const SUBSTITUTION_OP = 57499
const UMINUS = 57500
const UPLUS = 57501

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"ENVIRONMENT_VARIABLE",
	"RUNTIME_INFORMATION",
	"EXTERNAL_COMMAND",
	"PLACEHOLDER",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"UNSET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"REPLACE",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"LATERAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"PREPARE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"ECHO",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"EXECUTE",
	"CHDIR",
	"PWD",
	"RELOAD",
	"REMOVE",
	"SYNTAX",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"ROWS",
	"ONLY",
	"CSV",
	"JSON",
	"FIXED",
	"LTSV",
	"CSV_INLINE",
	"JSON_INLINE",
	"JSON_TABLE",
	"JSON_ROW",
	"SUBSTRING",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LIST_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'='",
	"'-'",
	"'+'",
	"'*'",
	"'/'",
	"'%'",
	"'!'",
	"'('",
	"')'",
	"','",
	"'.'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2789

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string, forPrepared bool, ansiQuotes bool) ([]Statement, int, error) {
	l := new(Lexer)
	l.Init(s, sourceFile, forPrepared, ansiQuotes)
	yyParse(l)
	return l.program, l.HolderNumber(), l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 220,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 21,
	1, 26,
	89, 26,
	91, 26,
	93, 26,
	95, 26,
	160, 26,
	-2, 239,
	-1, 27,
	65, 188,
	66, 188,
	67, 188,
	-2, 200,
	-1, 35,
	1, 78,
	89, 78,
	91, 78,
	93, 78,
	95, 78,
	160, 78,
	-2, 251,
	-1, 61,
	65, 189,
	66, 189,
	67, 189,
	-2, 244,
	-1, 116,
	19, 220,
	22, 220,
	24, 220,
	-2, 1,
	-1, 130,
	65, 188,
	66, 188,
	67, 188,
	-2, 200,
	-1, 170,
	1, 122,
	89, 122,
	91, 122,
	93, 122,
	95, 122,
	160, 122,
	-2, 233,
	-1, 171,
	1, 163,
	89, 163,
	91, 163,
	93, 163,
	95, 163,
	160, 163,
	-2, 239,
	-1, 176,
	1, 156,
	89, 156,
	91, 156,
	93, 156,
	95, 156,
	160, 156,
	-2, 239,
	-1, 177,
	1, 157,
	89, 157,
	91, 157,
	93, 157,
	95, 157,
	160, 157,
	-2, 239,
	-1, 178,
	1, 158,
	89, 158,
	91, 158,
	93, 158,
	95, 158,
	160, 158,
	-2, 239,
	-1, 179,
	1, 161,
	89, 161,
	91, 161,
	93, 161,
	95, 161,
	160, 161,
	-2, 233,
	-1, 180,
	1, 162,
	89, 162,
	91, 162,
	93, 162,
	95, 162,
	160, 162,
	-2, 239,
	-1, 183,
	1, 169,
	89, 169,
	91, 169,
	93, 169,
	95, 169,
	160, 169,
	-2, 233,
	-1, 184,
	1, 170,
	89, 170,
	91, 170,
	93, 170,
	95, 170,
	160, 170,
	-2, 239,
	-1, 247,
	89, 1,
	93, 1,
	95, 1,
	-2, 220,
	-1, 270,
	168, 359,
	-2, 486,
	-1, 271,
	168, 360,
	-2, 487,
	-1, 272,
	168, 361,
	-2, 488,
	-1, 273,
	168, 362,
	-2, 489,
	-1, 284,
	54, 505,
	-2, 422,
	-1, 319,
	4, 144,
	135, 144,
	136, 144,
	137, 144,
	139, 144,
	140, 144,
	141, 144,
	142, 144,
	-2, 239,
	-1, 320,
	4, 145,
	135, 145,
	136, 145,
	137, 145,
	139, 145,
	140, 145,
	141, 145,
	142, 145,
	-2, 239,
	-1, 330,
	1, 174,
	89, 174,
	91, 174,
	93, 174,
	95, 174,
	160, 174,
	-2, 239,
	-1, 337,
	95, 4,
	-2, 220,
	-1, 365,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	155, 0,
	161, 0,
	-2, 280,
	-1, 366,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	155, 0,
	161, 0,
	-2, 282,
	-1, 375,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	155, 0,
	161, 0,
	-2, 292,
	-1, 411,
	95, 1,
	-2, 220,
	-1, 418,
	1, 210,
	52, 210,
	80, 210,
	89, 210,
	91, 210,
	93, 210,
	95, 210,
	98, 210,
	138, 210,
	160, 210,
	169, 210,
	-2, 239,
	-1, 419,
	1, 215,
	89, 215,
	91, 215,
	93, 215,
	95, 215,
	98, 215,
	99, 215,
	160, 215,
	169, 215,
	-2, 239,
	-1, 451,
	65, 189,
	66, 189,
	67, 189,
	-2, 378,
	-1, 473,
	1, 80,
	89, 80,
	91, 80,
	93, 80,
	95, 80,
	160, 80,
	-2, 239,
	-1, 474,
	1, 81,
	89, 81,
	91, 81,
	93, 81,
	95, 81,
	160, 81,
	-2, 233,
	-1, 475,
	1, 82,
	89, 82,
	91, 82,
	93, 82,
	95, 82,
	160, 82,
	-2, 239,
	-1, 476,
	1, 83,
	89, 83,
	91, 83,
	93, 83,
	95, 83,
	160, 83,
	-2, 233,
	-1, 477,
	1, 149,
	89, 149,
	91, 149,
	93, 149,
	95, 149,
	160, 149,
	-2, 233,
	-1, 478,
	1, 150,
	89, 150,
	91, 150,
	93, 150,
	95, 150,
	160, 150,
	-2, 239,
	-1, 479,
	1, 151,
	89, 151,
	91, 151,
	93, 151,
	95, 151,
	160, 151,
	-2, 233,
	-1, 480,
	1, 152,
	89, 152,
	91, 152,
	93, 152,
	95, 152,
	160, 152,
	-2, 239,
	-1, 483,
	1, 117,
	89, 117,
	91, 117,
	93, 117,
	95, 117,
	160, 117,
	170, 117,
	-2, 239,
	-1, 488,
	1, 420,
	89, 420,
	91, 420,
	93, 420,
	95, 420,
	160, 420,
	-2, 239,
	-1, 495,
	1, 175,
	89, 175,
	91, 175,
	93, 175,
	95, 175,
	160, 175,
	-2, 239,
	-1, 534,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	155, 0,
	161, 0,
	-2, 293,
	-1, 557,
	95, 1,
	-2, 220,
	-1, 564,
	91, 1,
	93, 1,
	95, 1,
	-2, 220,
	-1, 593,
	169, 357,
	170, 357,
	-2, 233,
	-1, 611,
	54, 505,
	-2, 381,
	-1, 649,
	19, 220,
	22, 220,
	24, 220,
	-2, 4,
	-1, 652,
	95, 4,
	-2, 220,
	-1, 653,
	95, 4,
	-2, 220,
	-1, 679,
	169, 260,
	170, 260,
	-2, 189,
	-1, 727,
	17, 516,
	80, 516,
	168, 516,
	-2, 87,
	-1, 753,
	89, 4,
	93, 4,
	95, 4,
	-2, 220,
	-1, 758,
	95, 4,
	-2, 220,
	-1, 759,
	95, 4,
	-2, 220,
	-1, 784,
	89, 1,
	93, 1,
	95, 1,
	-2, 220,
	-1, 830,
	1, 95,
	89, 95,
	91, 95,
	93, 95,
	95, 95,
	160, 95,
	-2, 233,
	-1, 831,
	1, 96,
	89, 96,
	91, 96,
	93, 96,
	95, 96,
	160, 96,
	-2, 239,
	-1, 833,
	95, 6,
	-2, 220,
	-1, 839,
	169, 128,
	170, 128,
	-2, 239,
	-1, 844,
	95, 4,
	-2, 220,
	-1, 910,
	95, 6,
	-2, 220,
	-1, 911,
	95, 6,
	-2, 220,
	-1, 915,
	95, 4,
	-2, 220,
	-1, 919,
	91, 4,
	93, 4,
	95, 4,
	-2, 220,
	-1, 956,
	19, 220,
	22, 220,
	24, 220,
	-2, 6,
	-1, 963,
	160, 62,
	-2, 239,
	-1, 1004,
	89, 6,
	93, 6,
	95, 6,
	-2, 220,
	-1, 1007,
	95, 8,
	-2, 220,
	-1, 1014,
	95, 6,
	-2, 220,
	-1, 1017,
	89, 4,
	93, 4,
	95, 4,
	-2, 220,
	-1, 1043,
	95, 6,
	-2, 220,
	-1, 1076,
	95, 6,
	-2, 220,
	-1, 1080,
	91, 6,
	93, 6,
	95, 6,
	-2, 220,
	-1, 1082,
	19, 220,
	22, 220,
	24, 220,
	-2, 8,
	-1, 1085,
	95, 8,
	-2, 220,
	-1, 1086,
	95, 8,
	-2, 220,
	-1, 1103,
	89, 8,
	93, 8,
	95, 8,
	-2, 220,
	-1, 1108,
	95, 8,
	-2, 220,
	-1, 1109,
	95, 8,
	-2, 220,
	-1, 1114,
	89, 6,
	93, 6,
	95, 6,
	-2, 220,
	-1, 1119,
	95, 8,
	-2, 220,
	-1, 1134,
	95, 8,
	-2, 220,
	-1, 1138,
	91, 8,
	93, 8,
	95, 8,
	-2, 220,
	-1, 1167,
	89, 8,
	93, 8,
	95, 8,
	-2, 220,
}

const yyPrivate = 57344

const yyLast = 4378

var yyAct = [...]int{
	119, 61, 1133, 354, 1075, 1145, 1132, 1005, 1074, 1104,
	914, 420, 125, 677, 754, 1052, 976, 1051, 978, 805,
	913, 298, 556, 67, 621, 1022, 977, 255, 197, 136,
	196, 734, 610, 288, 693, 637, 729, 619, 640, 504,
	496, 459, 639, 586, 265, 503, 26, 256, 252, 570,
	601, 1045, 253, 128, 487, 606, 1, 149, 149, 352,
	152, 93, 481, 555, 436, 735, 441, 349, 208, 284,
	279, 139, 283, 61, 440, 181, 276, 263, 236, 83,
	290, 546, 82, 76, 502, 25, 146, 204, 322, 229,
	70, 343, 228, 1008, 190, 239, 27, 444, 195, 445,
	446, 447, 439, 338, 444, 442, 445, 446, 447, 439,
	1056, 245, 442, 229, 889, 890, 228, 61, 228, 61,
	521, 150, 78, 228, 133, 130, 510, 135, 158, 132,
	891, 892, 134, 875, 876, 78, 328, 251, 136, 174,
	248, 826, 292, 814, 1071, 746, 747, 777, 216, 225,
	224, 215, 214, 217, 213, 744, 260, 498, 3, 705,
	706, 743, 26, 728, 282, 726, 723, 722, 707, 703,
	647, 281, 644, 246, 78, 577, 519, 97, 105, 187,
	277, 339, 434, 1039, 429, 347, 78, 303, 900, 187,
	78, 114, 339, 136, 229, 944, 1093, 228, 77, 310,
	1092, 25, 339, 287, 268, 78, 78, 127, 21, 339,
	278, 1035, 443, 373, 264, 893, 302, 374, 615, 1068,
	1067, 341, 1066, 1065, 299, 339, 301, 1064, 342, 105,
	1063, 117, 211, 210, 1038, 374, 374, 77, 212, 220,
	219, 221, 222, 223, 327, 1036, 333, 329, 61, 77,
	1034, 171, 1032, 77, 172, 173, 1031, 176, 177, 178,
	180, 1021, 184, 424, 1020, 1002, 78, 1001, 77, 77,
	1000, 999, 995, 137, 3, 872, 292, 912, 372, 877,
	189, 874, 194, 858, 857, 856, 137, 1033, 425, 130,
	451, 855, 367, 26, 345, 346, 395, 396, 388, 392,
	854, 393, 394, 853, 407, 850, 828, 825, 818, 106,
	107, 108, 403, 270, 271, 272, 273, 294, 295, 296,
	802, 78, 795, 776, 21, 137, 189, 149, 771, 77,
	583, 770, 25, 426, 114, 636, 769, 137, 61, 762,
	761, 137, 289, 427, 136, 742, 136, 136, 432, 435,
	740, 494, 727, 725, 683, 431, 373, 137, 595, 450,
	106, 107, 108, 282, 109, 110, 111, 112, 675, 674,
	508, 374, 673, 671, 61, 319, 320, 374, 374, 631,
	549, 541, 492, 493, 77, 486, 539, 537, 517, 78,
	466, 455, 470, 625, 330, 190, 456, 460, 374, 548,
	548, 548, 547, 143, 408, 3, 335, 491, 336, 334,
	985, 984, 61, 97, 210, 489, 490, 137, 983, 105,
	220, 219, 221, 222, 223, 120, 35, 512, 136, 514,
	515, 982, 533, 981, 292, 516, 980, 137, 535, 536,
	513, 946, 513, 513, 292, 115, 939, 530, 935, 933,
	529, 932, 925, 924, 544, 21, 895, 26, 881, 545,
	136, 708, 415, 680, 596, 418, 419, 656, 560, 136,
	618, 136, 584, 528, 527, 591, 526, 613, 525, 277,
	552, 550, 551, 216, 225, 224, 215, 214, 217, 213,
	221, 222, 223, 524, 634, 642, 25, 582, 523, 522,
	600, 472, 457, 597, 471, 454, 598, 590, 282, 609,
	264, 599, 430, 611, 651, 646, 147, 608, 142, 250,
	244, 473, 475, 478, 480, 483, 243, 624, 518, 233,
	483, 488, 469, 232, 231, 488, 488, 458, 230, 495,
	137, 316, 35, 657, 704, 21, 142, 1082, 679, 238,
	106, 107, 108, 314, 109, 110, 111, 112, 61, 220,
	219, 221, 222, 223, 956, 61, 649, 211, 210, 3,
	147, 116, 401, 212, 220, 219, 221, 222, 223, 304,
	187, 424, 866, 628, 374, 136, 695, 658, 575, 696,
	661, 662, 663, 664, 665, 571, 1111, 700, 105, 936,
	934, 697, 790, 26, 931, 292, 292, 138, 780, 678,
	26, 862, 275, 292, 687, 1014, 911, 306, 910, 21,
	686, 691, 701, 991, 268, 713, 780, 860, 572, 833,
	234, 989, 863, 930, 709, 929, 235, 928, 592, 576,
	927, 926, 25, 402, 694, 678, 721, 699, 861, 25,
	61, 711, 979, 61, 61, 859, 724, 136, 702, 315,
	852, 567, 617, 682, 417, 720, 737, 994, 947, 710,
	305, 313, 105, 35, 714, 716, 581, 374, 468, 573,
	416, 1166, 1152, 1142, 1141, 78, 1136, 1159, 1122, 1109,
	752, 1121, 681, 756, 757, 1113, 1095, 1089, 115, 1081,
	307, 308, 750, 1078, 1016, 1013, 1012, 748, 650, 967,
	955, 923, 922, 917, 847, 3, 292, 846, 292, 292,
	292, 783, 3, 292, 767, 685, 648, 561, 568, 106,
	107, 108, 559, 109, 110, 111, 112, 803, 775, 261,
	786, 789, 788, 785, 105, 1108, 801, 797, 77, 804,
	794, 808, 800, 822, 61, 815, 613, 165, 166, 61,
	61, 1086, 218, 35, 820, 21, 688, 642, 838, 821,
	115, 642, 21, 796, 692, 1085, 1135, 1077, 374, 97,
	1134, 1076, 835, 841, 1007, 61, 836, 837, 809, 811,
	759, 865, 611, 916, 842, 758, 136, 915, 1134, 848,
	849, 653, 652, 106, 107, 108, 337, 109, 110, 111,
	112, 292, 154, 292, 292, 292, 1119, 558, 1076, 136,
	871, 557, 136, 870, 163, 164, 167, 168, 882, 883,
	26, 879, 1043, 136, 61, 915, 137, 35, 844, 678,
	557, 869, 413, 411, 884, 61, 885, 888, 613, 907,
	1167, 906, 483, 1138, 1114, 488, 237, 21, 898, 1103,
	21, 21, 897, 1080, 1017, 153, 1004, 919, 784, 25,
	753, 155, 564, 374, 247, 106, 107, 108, 136, 109,
	110, 111, 112, 886, 611, 918, 942, 1169, 292, 1116,
	1105, 1019, 940, 1006, 374, 156, 787, 755, 409, 941,
	254, 1158, 1140, 1139, 949, 1101, 948, 953, 974, 973,
	921, 61, 61, 920, 751, 1135, 61, 1077, 958, 916,
	61, 950, 558, 1173, 1165, 136, 907, 907, 906, 906,
	1130, 817, 960, 954, 678, 968, 104, 962, 1128, 961,
	1112, 1059, 3, 1015, 868, 374, 782, 831, 1146, 1156,
	988, 987, 1146, 839, 987, 678, 969, 61, 996, 986,
	972, 21, 990, 845, 1099, 993, 21, 21, 971, 689,
	1164, 1150, 907, 1175, 906, 1162, 1163, 1161, 1149, 1148,
	779, 209, 102, 35, 997, 398, 1010, 1018, 1160, 397,
	35, 902, 21, 1011, 238, 415, 676, 1025, 1026, 1027,
	1028, 1029, 1057, 136, 987, 61, 678, 1126, 61, 1009,
	511, 340, 1030, 344, 1127, 61, 878, 1129, 61, 202,
	907, 370, 906, 819, 1171, 369, 371, 1147, 1144, 813,
	907, 1147, 906, 400, 399, 377, 376, 806, 807, 136,
	374, 21, 323, 317, 61, 607, 1062, 1053, 719, 718,
	1069, 103, 21, 1073, 987, 201, 202, 203, 1060, 907,
	605, 906, 1070, 1084, 444, 424, 445, 446, 902, 902,
	604, 1090, 374, 1091, 258, 35, 1061, 61, 35, 35,
	1024, 61, 603, 61, 1096, 1094, 61, 61, 257, 258,
	579, 580, 907, 259, 906, 867, 907, 602, 906, 964,
	965, 678, 437, 444, 61, 445, 446, 447, 1115, 61,
	61, 129, 957, 1023, 902, 61, 959, 963, 21, 21,
	61, 739, 1053, 21, 970, 1053, 1053, 21, 464, 738,
	907, 324, 906, 678, 1102, 61, 1151, 1106, 1107, 61,
	1153, 461, 462, 1053, 745, 1003, 736, 145, 1053, 1053,
	463, 730, 731, 732, 733, 1117, 792, 793, 144, 1053,
	1123, 1124, 902, 207, 21, 1047, 1172, 1168, 61, 966,
	68, 1137, 902, 851, 1053, 840, 834, 1176, 1053, 35,
	832, 460, 741, 645, 35, 35, 1154, 520, 484, 274,
	1157, 262, 280, 1041, 444, 29, 445, 446, 447, 439,
	428, 902, 442, 1058, 141, 98, 1037, 1053, 157, 159,
	35, 140, 21, 998, 1044, 21, 698, 565, 141, 1174,
	433, 326, 21, 100, 131, 21, 325, 845, 321, 100,
	98, 97, 1079, 84, 902, 200, 485, 206, 902, 69,
	1047, 148, 1118, 1047, 1047, 1042, 843, 410, 105, 10,
	9, 21, 587, 8, 7, 412, 64, 1083, 126, 35,
	105, 1047, 350, 351, 286, 1097, 1047, 1047, 193, 1100,
	35, 285, 902, 291, 268, 293, 216, 1047, 266, 215,
	214, 217, 213, 269, 21, 1098, 268, 182, 21, 1170,
	21, 105, 1047, 21, 21, 1143, 1047, 1125, 1110, 92,
	63, 62, 66, 1131, 59, 65, 188, 60, 791, 578,
	422, 21, 421, 1120, 193, 453, 21, 21, 58, 226,
	227, 205, 21, 574, 1044, 1047, 569, 21, 566, 240,
	241, 6, 20, 193, 19, 105, 35, 35, 71, 162,
	17, 35, 21, 1155, 105, 35, 21, 641, 638, 16,
	482, 97, 188, 540, 15, 14, 11, 18, 126, 449,
	211, 210, 13, 12, 1048, 588, 212, 220, 219, 221,
	222, 223, 903, 1046, 901, 21, 182, 1120, 499, 106,
	107, 108, 35, 109, 110, 111, 112, 105, 193, 406,
	497, 106, 107, 108, 620, 270, 271, 272, 273, 627,
	629, 4, 2, 0, 0, 0, 216, 225, 224, 215,
	214, 217, 213, 0, 0, 0, 0, 0, 0, 0,
	0, 332, 106, 107, 108, 0, 109, 110, 111, 112,
	35, 0, 0, 35, 28, 0, 0, 0, 0, 0,
	35, 0, 353, 35, 364, 365, 366, 0, 368, 0,
	0, 375, 0, 378, 379, 380, 381, 382, 383, 384,
	0, 0, 0, 182, 390, 353, 106, 107, 108, 35,
	109, 110, 111, 112, 0, 106, 107, 108, 404, 109,
	110, 111, 112, 0, 182, 193, 0, 0, 414, 0,
	211, 210, 0, 423, 0, 0, 212, 220, 219, 221,
	222, 223, 35, 0, 0, 329, 35, 192, 35, 0,
	0, 35, 35, 0, 438, 0, 0, 0, 106, 107,
	108, 620, 109, 110, 111, 112, 0, 5, 0, 35,
	0, 0, 0, 620, 35, 35, 182, 0, 467, 193,
	35, 193, 193, 0, 444, 35, 445, 446, 447, 439,
	806, 807, 442, 192, 0, 620, 105, 0, 386, 0,
	35, 0, 0, 182, 35, 620, 0, 0, 0, 193,
	0, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	105, 0, 0, 216, 225, 224, 215, 214, 217, 213,
	105, 0, 0, 35, 0, 87, 0, 0, 100, 0,
	191, 0, 0, 532, 0, 534, 0, 182, 0, 0,
	774, 216, 225, 224, 215, 214, 217, 213, 0, 0,
	0, 0, 182, 193, 0, 0, 0, 182, 182, 0,
	151, 0, 0, 0, 0, 160, 161, 182, 169, 170,
	588, 0, 0, 414, 175, 620, 191, 562, 179, 0,
	183, 0, 185, 186, 105, 193, 0, 0, 0, 0,
	0, 0, 0, 620, 193, 191, 193, 211, 210, 823,
	824, 0, 0, 212, 220, 219, 221, 222, 223, 287,
	268, 773, 0, 0, 0, 0, 0, 106, 107, 108,
	249, 109, 110, 111, 112, 211, 210, 242, 0, 0,
	0, 212, 220, 219, 221, 222, 223, 0, 0, 0,
	554, 106, 107, 108, 612, 109, 110, 111, 112, 0,
	0, 106, 107, 108, 192, 109, 110, 111, 112, 267,
	0, 267, 0, 0, 0, 126, 0, 267, 0, 267,
	300, 267, 0, 193, 0, 0, 0, 0, 0, 309,
	267, 311, 312, 353, 0, 182, 0, 0, 318, 0,
	182, 182, 182, 0, 0, 669, 0, 0, 0, 0,
	0, 0, 0, 0, 672, 0, 0, 0, 0, 0,
	193, 0, 0, 0, 0, 106, 107, 108, 684, 270,
	271, 272, 273, 294, 295, 296, 0, 690, 0, 0,
	0, 0, 348, 0, 356, 0, 0, 0, 192, 0,
	0, 423, 0, 105, 0, 0, 0, 191, 289, 0,
	0, 0, 0, 0, 385, 0, 78, 356, 0, 0,
	0, 0, 620, 297, 0, 0, 712, 182, 287, 268,
	0, 405, 0, 105, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 0, 0, 356, 78, 0, 267, 0,
	0, 0, 192, 0, 0, 0, 0, 0, 0, 0,
	267, 267, 216, 225, 224, 215, 214, 217, 213, 0,
	0, 448, 0, 620, 0, 267, 0, 0, 452, 77,
	0, 0, 0, 0, 192, 182, 182, 182, 182, 182,
	0, 191, 0, 192, 772, 192, 0, 0, 0, 474,
	476, 477, 479, 0, 778, 0, 0, 0, 0, 77,
	387, 389, 267, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 507, 0, 509, 0, 798, 0,
	182, 0, 0, 0, 106, 107, 108, 0, 270, 271,
	272, 273, 294, 295, 296, 585, 211, 210, 0, 0,
	0, 0, 212, 220, 219, 221, 222, 223, 0, 0,
	827, 329, 0, 0, 106, 107, 108, 289, 109, 110,
	111, 112, 192, 0, 0, 0, 0, 623, 0, 414,
	0, 193, 0, 465, 0, 0, 632, 0, 635, 0,
	0, 0, 0, 0, 0, 0, 0, 137, 864, 0,
	105, 0, 0, 0, 193, 0, 0, 193, 0, 192,
	0, 0, 0, 0, 589, 267, 593, 0, 193, 267,
	267, 0, 0, 0, 0, 287, 268, 0, 0, 267,
	880, 0, 0, 0, 0, 614, 0, 452, 0, 616,
	0, 0, 0, 589, 622, 0, 0, 626, 589, 589,
	630, 0, 0, 0, 633, 622, 0, 0, 643, 0,
	887, 0, 0, 193, 0, 191, 0, 0, 0, 538,
	0, 0, 0, 0, 542, 543, 0, 0, 0, 0,
	0, 192, 0, 0, 553, 0, 0, 0, 0, 0,
	938, 0, 0, 0, 0, 0, 654, 655, 0, 0,
	182, 0, 191, 0, 622, 356, 659, 0, 0, 0,
	193, 0, 0, 0, 182, 0, 182, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 126,
	0, 106, 107, 108, 0, 270, 271, 272, 273, 294,
	295, 296, 216, 225, 224, 215, 214, 217, 213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 356, 289, 0, 0, 0, 0, 0,
	589, 0, 0, 0, 760, 216, 225, 224, 215, 214,
	217, 213, 589, 0, 0, 0, 0, 0, 193, 0,
	267, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 660, 0, 589, 0, 0, 666, 667, 668,
	0, 626, 0, 0, 589, 0, 0, 0, 0, 0,
	192, 0, 0, 0, 193, 0, 211, 210, 0, 0,
	414, 749, 212, 220, 219, 221, 222, 223, 0, 0,
	992, 0, 0, 192, 0, 0, 192, 0, 182, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 0, 211,
	210, 0, 0, 0, 0, 212, 220, 219, 221, 222,
	223, 0, 0, 937, 126, 216, 225, 224, 215, 214,
	217, 213, 0, 0, 0, 423, 0, 0, 0, 589,
	0, 0, 0, 267, 589, 0, 0, 105, 0, 0,
	0, 0, 192, 0, 267, 267, 0, 0, 267, 816,
	0, 0, 589, 873, 622, 105, 0, 0, 589, 589,
	0, 0, 287, 268, 829, 830, 0, 0, 0, 414,
	0, 0, 0, 0, 0, 0, 894, 0, 0, 896,
	287, 268, 763, 764, 765, 766, 768, 0, 0, 192,
	899, 105, 0, 0, 0, 0, 0, 812, 0, 211,
	210, 0, 0, 0, 0, 212, 220, 219, 221, 222,
	223, 0, 0, 781, 0, 810, 287, 268, 0, 0,
	216, 225, 224, 215, 214, 217, 213, 799, 0, 0,
	0, 0, 0, 0, 0, 945, 0, 0, 105, 267,
	267, 563, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 717, 626, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 287, 268, 0, 0, 192, 106, 107,
	108, 0, 270, 271, 272, 273, 294, 295, 296, 0,
	0, 0, 975, 0, 0, 0, 106, 107, 108, 0,
	270, 271, 272, 273, 294, 295, 296, 0, 715, 0,
	0, 289, 0, 192, 211, 210, 0, 622, 0, 0,
	212, 220, 219, 221, 222, 223, 0, 0, 0, 289,
	0, 589, 106, 107, 108, 0, 270, 271, 272, 273,
	294, 295, 296, 105, 79, 80, 81, 0, 102, 0,
	97, 100, 98, 99, 22, 73, 78, 0, 0, 37,
	38, 0, 0, 0, 0, 289, 30, 0, 0, 115,
	1040, 31, 46, 0, 32, 0, 0, 0, 0, 106,
	107, 108, 589, 270, 271, 272, 273, 294, 295, 296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1072, 943, 0, 94,
	0, 0, 289, 95, 0, 0, 0, 103, 0, 77,
	0, 951, 0, 952, 0, 0, 1050, 1049, 0, 908,
	0, 0, 0, 0, 0, 34, 101, 0, 41, 39,
	40, 36, 42, 0, 1054, 1055, 0, 0, 0, 0,
	44, 45, 505, 506, 0, 49, 50, 51, 52, 43,
	54, 55, 56, 47, 53, 57, 0, 0, 0, 909,
	0, 0, 33, 48, 106, 107, 108, 0, 109, 110,
	111, 112, 0, 0, 0, 114, 88, 91, 89, 90,
	113, 0, 1087, 1088, 0, 0, 0, 356, 0, 0,
	0, 85, 86, 0, 0, 0, 96, 72, 105, 79,
	80, 81, 0, 102, 0, 97, 100, 98, 99, 22,
	73, 78, 0, 0, 37, 38, 0, 0, 0, 0,
	0, 30, 0, 0, 115, 0, 31, 46, 0, 32,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 94, 0, 0, 0, 95, 0,
	0, 0, 103, 0, 77, 0, 0, 0, 0, 0,
	0, 501, 500, 0, 74, 0, 0, 0, 0, 0,
	34, 101, 0, 41, 39, 40, 36, 42, 0, 0,
	0, 0, 0, 0, 0, 44, 45, 505, 506, 75,
	49, 50, 51, 52, 43, 54, 55, 56, 47, 53,
	57, 0, 0, 0, 0, 0, 0, 33, 48, 106,
	107, 108, 0, 109, 110, 111, 112, 0, 0, 0,
	114, 88, 91, 89, 90, 113, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 86, 0, 0,
	0, 96, 72, 105, 79, 80, 81, 0, 102, 0,
	97, 100, 98, 99, 22, 73, 78, 0, 0, 37,
	38, 0, 0, 0, 0, 0, 30, 0, 0, 115,
	0, 31, 46, 0, 32, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 94,
	0, 0, 0, 95, 0, 0, 0, 103, 0, 77,
	0, 0, 0, 0, 0, 0, 905, 904, 0, 908,
	0, 0, 0, 0, 0, 34, 101, 0, 41, 39,
	40, 36, 42, 0, 0, 0, 0, 0, 0, 0,
	44, 45, 0, 0, 0, 49, 50, 51, 52, 43,
	54, 55, 56, 47, 53, 57, 0, 0, 0, 909,
	0, 0, 33, 48, 106, 107, 108, 0, 109, 110,
	111, 112, 0, 0, 0, 114, 88, 91, 89, 90,
	113, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 86, 0, 0, 0, 96, 72, 105, 79,
	80, 81, 0, 102, 0, 97, 100, 98, 99, 22,
	73, 78, 0, 0, 37, 38, 0, 0, 0, 0,
	0, 30, 0, 0, 115, 0, 31, 46, 0, 32,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 94, 0, 0, 0, 95, 0,
	0, 0, 103, 0, 77, 0, 0, 0, 0, 0,
	0, 24, 23, 0, 74, 0, 0, 0, 0, 0,
	34, 101, 0, 41, 39, 40, 36, 42, 0, 0,
	0, 0, 0, 0, 0, 44, 45, 0, 0, 75,
	49, 50, 51, 52, 43, 54, 55, 56, 47, 53,
	57, 0, 0, 0, 0, 0, 0, 33, 48, 106,
	107, 108, 0, 109, 110, 111, 112, 0, 0, 0,
	114, 88, 91, 89, 90, 113, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 86, 0, 0,
	0, 96, 72, 105, 79, 80, 81, 0, 102, 0,
	97, 100, 98, 99, 0, 73, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 122, 216, 225, 115,
	215, 214, 217, 213, 0, 0, 0, 0, 0, 0,
	105, 79, 80, 81, 0, 102, 0, 97, 100, 98,
	99, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 122, 0, 0, 115, 0, 0, 94,
	0, 0, 0, 95, 0, 0, 0, 103, 0, 0,
	0, 0, 0, 0, 0, 0, 124, 121, 0, 0,
	0, 0, 0, 0, 0, 0, 101, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 94, 0, 0, 0,
	95, 211, 210, 0, 103, 0, 0, 212, 220, 219,
	221, 222, 223, 124, 121, 0, 0, 0, 0, 0,
	0, 0, 358, 101, 106, 107, 108, 0, 109, 110,
	111, 112, 0, 0, 0, 114, 88, 359, 89, 357,
	360, 361, 362, 363, 0, 0, 0, 0, 0, 0,
	0, 85, 86, 355, 0, 0, 96, 72, 391, 358,
	0, 106, 107, 108, 0, 109, 110, 111, 112, 0,
	0, 0, 114, 88, 359, 89, 357, 360, 361, 362,
	363, 0, 0, 0, 0, 0, 0, 0, 85, 86,
	355, 0, 0, 96, 72, 105, 79, 80, 81, 0,
	102, 0, 97, 100, 98, 99, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 122, 0,
	0, 115, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 105, 79, 80, 81, 0, 102, 0, 97,
	100, 98, 99, 0, 73, 78, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 122, 0, 0, 115, 0,
	0, 94, 0, 0, 0, 95, 0, 0, 0, 103,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 121,
	0, 0, 0, 0, 0, 0, 0, 0, 101, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 94, 0,
	0, 0, 95, 0, 0, 0, 103, 0, 77, 0,
	0, 0, 0, 0, 0, 124, 121, 0, 0, 0,
	0, 0, 0, 0, 358, 101, 106, 107, 108, 0,
	109, 110, 111, 112, 0, 0, 0, 114, 88, 359,
	89, 357, 360, 361, 362, 363, 0, 0, 0, 0,
	0, 0, 0, 85, 86, 0, 0, 0, 96, 72,
	0, 123, 0, 106, 107, 108, 0, 109, 110, 111,
	112, 0, 0, 0, 114, 88, 91, 89, 90, 113,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 86, 0, 0, 0, 96, 72, 105, 79, 80,
	81, 0, 102, 0, 97, 100, 98, 99, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	122, 0, 0, 115, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 105, 79, 80, 81, 0, 102,
	0, 97, 100, 98, 99, 0, 73, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 122, 0, 0,
	115, 0, 0, 94, 0, 0, 0, 95, 0, 0,
	0, 103, 0, 0, 0, 0, 0, 0, 0, 0,
	124, 121, 0, 0, 0, 0, 0, 0, 0, 199,
	101, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	94, 0, 0, 0, 95, 0, 0, 0, 103, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 121, 0,
	0, 0, 0, 0, 0, 0, 198, 101, 106, 107,
	108, 0, 109, 110, 111, 112, 0, 0, 0, 114,
	88, 91, 89, 90, 113, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 86, 0, 0, 0,
	96, 72, 0, 123, 0, 106, 107, 108, 0, 109,
	110, 111, 112, 0, 0, 0, 114, 88, 91, 89,
	90, 113, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 86, 355, 0, 0, 96, 72, 105,
	79, 80, 81, 0, 102, 0, 97, 100, 98, 99,
	0, 73, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 122, 0, 0, 115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 105, 79, 80, 81,
	0, 102, 0, 97, 100, 98, 99, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 122,
	0, 0, 115, 0, 0, 94, 0, 0, 0, 95,
	0, 0, 0, 103, 209, 0, 0, 0, 0, 0,
	0, 0, 124, 121, 0, 0, 0, 0, 0, 0,
	0, 0, 101, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 94, 0, 0, 0, 95, 0, 0, 0,
	103, 0, 0, 0, 0, 0, 0, 0, 0, 124,
	121, 0, 0, 0, 0, 0, 0, 0, 123, 101,
	106, 107, 108, 0, 109, 110, 111, 112, 0, 0,
	0, 114, 88, 91, 89, 90, 113, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 86, 0,
	0, 0, 96, 72, 0, 123, 0, 106, 107, 108,
	0, 109, 110, 111, 112, 0, 0, 0, 114, 88,
	91, 89, 90, 113, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 86, 0, 0, 0, 96,
	72, 105, 79, 80, 81, 0, 102, 0, 97, 100,
	98, 99, 0, 73, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 122, 0, 0, 115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 105, 79,
	80, 81, 0, 102, 0, 97, 100, 98, 99, 0,
	73, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 122, 0, 0, 594, 0, 0, 94, 0, 0,
	0, 95, 0, 0, 0, 103, 0, 0, 0, 0,
	0, 0, 0, 0, 124, 121, 0, 0, 0, 0,
	0, 0, 0, 0, 101, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 94, 0, 0, 0, 95, 0,
	0, 0, 103, 0, 0, 0, 0, 0, 0, 0,
	0, 124, 121, 0, 0, 0, 0, 0, 0, 0,
	123, 101, 106, 107, 108, 0, 109, 110, 111, 112,
	0, 0, 0, 114, 88, 91, 89, 90, 113, 0,
	0, 0, 216, 225, 224, 215, 214, 217, 213, 85,
	86, 0, 0, 0, 96, 118, 0, 123, 0, 106,
	107, 108, 409, 109, 110, 111, 112, 0, 0, 0,
	114, 88, 91, 89, 90, 113, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 86, 0, 0,
	0, 96, 72, 105, 79, 331, 81, 0, 102, 0,
	97, 100, 98, 99, 0, 73, 216, 225, 224, 215,
	214, 217, 213, 0, 0, 0, 122, 0, 0, 115,
	0, 0, 0, 0, 0, 0, 211, 210, 0, 0,
	0, 0, 212, 220, 219, 221, 222, 223, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 94,
	0, 0, 0, 95, 0, 0, 0, 103, 0, 216,
	670, 224, 215, 214, 217, 213, 124, 121, 0, 0,
	0, 0, 0, 0, 0, 0, 101, 0, 0, 0,
	211, 210, 0, 0, 0, 0, 212, 220, 219, 221,
	222, 223, 216, 531, 224, 215, 214, 217, 213, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 123, 0, 106, 107, 108, 0, 109, 110,
	111, 112, 0, 0, 0, 114, 88, 91, 89, 90,
	113, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 86, 211, 210, 0, 96, 72, 0, 212,
	220, 219, 221, 222, 223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 211, 210, 0, 0,
	0, 0, 212, 220, 219, 221, 222, 223,
}

var yyPact = [...]int{
	2994, -1000, 411, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3967, 3802, -1000, -1000, 1066, 105, 1186,
	378, 1122, 1111, 402, 1340, -1000, 768, 1217, 1192, 1576,
	1576, 720, 1576, 3802, -1000, -1000, 3802, 3802, 1586, 3802,
	3802, 3802, 3802, 3802, 3802, -1000, 1576, 1576, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 423, -1000, -1000,
	-1000, -1000, 3398, -1000, 3563, 1229, 990, 1132, 902, -1000,
	-1000, -1000, -1000, -1000, 4115, 3802, 3802, -79, 370, 366,
	365, 361, -1000, 475, 269, 3802, 3802, -1000, -1000, -1000,
	-1000, 1576, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 358, 352, -60, 2994, 782, 3398, -1000,
	-1000, 351, 350, 348, 3802, 809, 4115, -1000, 1037, 1045,
	1066, 1186, 1166, 1256, 1164, 594, -1000, 173, 1200, 1169,
	1220, 174, 3802, 1256, 1576, 1256, -1000, 902, 17, 422,
	-1000, 573, -1000, 1576, 1244, 1576, 1576, 510, 498, -1000,
	981, -1000, 1576, -1000, -1000, -1000, -1000, 3802, 3802, 1210,
	26, 980, 1088, 1208, -1000, 1203, -1000, -1000, 74, -79,
	-1000, -1000, 1801, -79, -1000, -1000, 4169, 3802, 77, 240,
	237, 239, 372, 1200, 712, 32, 940, 1220, 348, -1000,
	-1000, 945, 945, 945, -1000, 15, 1576, -1000, 3196, -1000,
	3802, 3802, 3802, 920, 3802, 950, 45, 3802, 967, 3802,
	3802, 3802, 3802, 3802, 3802, 3802, -1000, -1000, 1552, 3765,
	3802, 3159, 902, 902, 45, 45, 914, 965, -1000, -1000,
	1205, -1000, 495, 902, 3802, 1383, -1000, 2994, 237, 235,
	3802, 807, 750, 749, 3802, 582, 565, 3802, 3802, 3361,
	1037, 1200, 1256, 1180, 14, -1000, -1000, -1000, -1000, 344,
	-1000, -1000, -1000, -1000, 1256, 174, 1202, 12, 1169, 1056,
	3802, -1000, 11, -1000, 42, 1331, -1000, -1000, -1000, 1809,
	-1000, -1000, 1287, 337, -1000, -1000, -1000, 222, -1000, 334,
	369, 1108, 3802, 1220, 3802, 580, 364, 336, 333, -1000,
	-1000, -1000, -1000, 3802, 3802, 3802, 3802, 3802, 1163, -1000,
	-1000, 1231, 3802, 3802, 1211, 1211, 1256, 3802, 3802, 3802,
	-1000, 3802, 4115, -1000, -1000, -1000, -1000, 2664, 1576, 1220,
	1576, 55, 939, 372, -1000, 372, 372, 1132, 360, -1000,
	6, 1159, -1000, 4115, -1000, -1000, -48, 331, 330, 325,
	310, 308, 306, 305, 397, 258, 258, 973, 4211, 3802,
	45, 3802, -1000, 3398, -1000, 258, 45, 45, 326, 326,
	-1000, -1000, -1000, 3116, 1205, -1000, -1000, 218, 3802, 217,
	1335, -1000, 212, 3802, 3600, -1000, -1000, 45, 234, 234,
	234, 920, -1000, 3802, 1540, -1000, -1000, 728, -1000, 3802,
	637, 2994, 632, 3802, 2319, 780, 1198, 624, 542, 502,
	-1000, 5, 1041, 4115, -1000, 578, 1169, 304, 740, 1256,
	4004, 296, 1169, 174, 1244, 1056, 1050, 1034, 4115, 1016,
	1006, 989, 1048, 1650, -1000, -1000, -1000, -1000, -1000, 1576,
	49, 1287, -1000, 1576, 3802, -1000, 302, 740, 1576, 173,
	-1000, 225, 415, 740, 1576, 210, -1000, 4115, 1839, 1576,
	173, 166, 1576, -1000, -79, -1000, -79, -79, -1000, -79,
	-1000, -1000, 2, 1155, 1220, -1000, -1000, -1000, 0, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 631, 406, -1000, -1000,
	3967, 3802, -1000, -1000, -1000, -1000, -1000, 708, -1000, 707,
	1576, 1576, 953, -1000, -1000, 953, -1000, 299, 1576, 3196,
	1576, 3765, 902, 902, 902, 902, 3802, 3802, 3802, -1000,
	-1000, 3802, 4178, -1000, 258, -1000, -1000, -1000, 204, -1000,
	3802, -1000, 203, 200, 199, 924, -1000, 188, -1000, 295,
	-1000, -1000, 592, 185, 3802, 630, 747, 2994, 3802, 882,
	-1000, -1000, 4115, 3802, 2994, -1000, 3802, -1000, -1000, 506,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3361, 465, -1000,
	-1000, 1197, 1056, 45, 668, -1000, 1200, -1, 383, -53,
	-1000, -10, -2, -79, -60, 293, 740, -1000, 1169, -1000,
	1050, -1000, 3802, 3802, 2404, 2357, 995, -1000, 994, 989,
	-1000, 1139, 269, -3, -1000, -1000, -1000, -4, 740, 184,
	-5, 183, -7, -1000, 1114, 1576, 1105, -1000, 740, 1086,
	1078, -1000, -1000, -1000, 181, -1000, 1154, 176, -9, -1000,
	-1000, -15, 1103, -24, 3802, 1576, -1000, 3802, 824, 2664,
	778, 806, 2664, 2664, 701, 696, 173, 171, -1000, -1000,
	170, 3802, 3802, 3802, 3600, 3802, 167, 162, 159, 1205,
	3802, -1000, 1512, -1000, -1000, -1000, 45, 154, -23, -1000,
	3802, -1000, 899, 476, 2214, 858, 626, -1000, 776, -1000,
	4051, 805, 542, 1022, -1000, 467, -1000, 1119, -1000, 1050,
	-1000, 153, 1169, 740, 3802, -1000, 3802, 1244, 740, 151,
	-1000, 1066, 4115, -1000, 1009, 269, 1489, 269, 2321, 2303,
	975, -27, 1650, 3802, 139, 961, 740, 1153, 1576, -1000,
	-1000, -1000, 740, 740, 138, -29, 3802, 137, 1576, 3802,
	1152, 500, 1148, 1220, 1220, 3802, 1147, 1220, -1000, -1000,
	-1000, -1000, -1000, 2664, 745, 3802, 622, 619, 2664, 2664,
	136, 1145, 550, 134, 131, 122, 116, 115, 114, 545,
	517, 501, 1205, -1000, 3802, -1000, -1000, 45, 412, -1000,
	1049, -1000, -1000, 856, 2994, -1000, -1000, 3802, 506, -1000,
	-1000, -1000, -1000, -1000, 1066, 249, -1000, -1000, 4115, 112,
	-36, 110, 954, 1037, -1000, -1000, 3802, 290, 976, 1489,
	269, 1009, 269, 2006, 1650, -1000, -55, -39, 189, 288,
	-1000, 173, -1000, -1000, -1000, 1114, 1576, 4115, -1000, -1000,
	-79, -1000, 173, 2829, 489, -1000, -1000, -1000, 1103, -1000,
	487, 108, 704, 618, 2664, 775, 823, 820, 617, 616,
	-1000, 285, 284, 531, 530, 527, 525, 523, 494, 283,
	281, 464, 280, 463, 2114, -1000, 3802, 278, -1000, 833,
	-1000, 1037, 45, -1000, -1000, -1000, 3802, 169, 273, 570,
	4115, 1576, -1000, -1000, 976, -1000, 1009, 269, -1000, -1000,
	3802, -1000, 3802, 45, -1000, 740, -1000, -1000, -1000, -1000,
	615, 404, -1000, -1000, 3967, 3802, -1000, -1000, 3563, 3802,
	2829, 2829, 1141, 614, 742, 2664, 3802, 881, -1000, 2664,
	-1000, -1000, 819, 818, 173, 543, 268, 265, 263, 250,
	243, 242, 543, 543, 521, 543, 513, -1000, 2081, 1066,
	-1000, 569, -1000, 103, 45, -1000, 740, 1194, 102, -1000,
	-1000, 101, 98, -1000, 96, -1000, 2829, 774, 802, 690,
	22, 938, 1220, -1000, 611, 610, 486, 855, 609, -1000,
	772, -1000, 800, -1000, -1000, 95, 92, -1000, 1068, 1032,
	543, 543, 543, 543, 543, 543, 87, 1066, 83, 119,
	81, 43, -1000, 76, 1187, -1000, -1000, 65, -1000, -1000,
	-1000, -1000, 157, -1000, 2829, 739, 3802, 2499, 1576, 1576,
	39, 931, -1000, -1000, 2829, -1000, 853, 2664, -1000, 3802,
	-1000, -1000, -1000, 1028, 3802, 61, 58, 54, 53, 51,
	50, -1000, -1000, 543, -1000, 543, -1000, -1000, 118, 45,
	-1000, 688, 608, 2829, 771, 604, 387, -1000, -1000, 3967,
	3802, -1000, -1000, -1000, 681, 667, 1576, 1576, 602, -1000,
	830, 3361, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 31,
	27, 45, -1000, -1000, 601, 725, 2829, 3802, 877, -1000,
	2829, 815, 2499, 767, 799, 2499, 2499, 651, 595, -1000,
	-1000, 459, -1000, -1000, -1000, 852, 600, -1000, 762, -1000,
	798, -1000, -1000, 2499, 723, 3802, 596, 593, 2499, 2499,
	-1000, 932, -1000, 842, 2829, -1000, 3802, 687, 591, 2499,
	761, 813, 812, 589, 588, -1000, 946, 896, 895, 885,
	-1000, 828, 587, 705, 2499, 3802, 862, -1000, 2499, -1000,
	-1000, 811, 597, 916, 894, -1000, 892, 884, -1000, -1000,
	-1000, -1000, 836, 586, -1000, 758, -1000, 796, -1000, -1000,
	942, -1000, -1000, -1000, -1000, -1000, 835, 2499, -1000, 3802,
	-1000, 889, -1000, -1000, 826, -1000, -1000,
}

var yyPgo = [...]int{
	0, 56, 40, 188, 51, 157, 39, 1402, 84, 28,
	45, 1401, 1390, 1378, 1374, 17, 15, 1373, 1372, 1364,
	1363, 1362, 1357, 1356, 65, 31, 36, 1355, 1354, 1350,
	62, 1349, 38, 1348, 1347, 42, 35, 1340, 1339, 1338,
	1334, 1332, 1527, 1331, 96, 83, 1195, 607, 71, 70,
	64, 50, 25, 27, 34, 1328, 1326, 49, 1323, 47,
	1434, 1321, 87, 1318, 82, 79, 936, 1233, 207, 59,
	61, 13, 11, 1312, 1310, 1309, 1308, 0, 1307, 81,
	1305, 1304, 1302, 1690, 1301, 1300, 1299, 3, 26, 16,
	18, 1298, 1297, 5, 1295, 1289, 44, 1283, 1278, 1275,
	1273, 80, 76, 77, 1271, 33, 32, 69, 1264, 19,
	1263, 1262, 1256, 12, 52, 1255, 37, 21, 54, 72,
	24, 67, 1254, 1253, 1252, 43, 1250, 1249, 22, 63,
	10, 20, 4, 8, 2, 6, 48, 1247, 14, 1246,
	7, 1245, 9, 1242, 1595, 23, 30, 425, 1241, 86,
	1170, 1239, 90, 68, 78, 74, 55, 66, 91, 1237,
	41, 762,
}

var yyR1 = [...]int{
	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 6, 6,
	7, 7, 8, 8, 8, 8, 8, 9, 9, 10,
	10, 12, 12, 11, 11, 11, 11, 11, 13, 13,
	13, 13, 13, 13, 14, 14, 15, 15, 15, 15,
	15, 16, 16, 17, 17, 18, 18, 18, 18, 18,
	19, 19, 19, 19, 19, 19, 20, 20, 20, 20,
	21, 21, 21, 21, 21, 22, 22, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 24, 24, 25,
	25, 26, 26, 26, 26, 26, 27, 27, 27, 27,
	27, 27, 27, 28, 28, 28, 28, 29, 29, 30,
	30, 31, 31, 31, 31, 32, 33, 33, 34, 35,
	35, 36, 36, 36, 37, 37, 37, 37, 37, 38,
	38, 38, 38, 38, 38, 38, 39, 39, 39, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 41, 41, 41, 42, 42, 42, 42,
	43, 43, 43, 43, 44, 44, 44, 44, 45, 45,
	46, 47, 48, 48, 49, 49, 50, 50, 51, 51,
	52, 52, 53, 53, 53, 54, 54, 54, 55, 55,
	56, 56, 57, 57, 57, 58, 58, 58, 59, 59,
	60, 60, 61, 61, 62, 62, 63, 63, 63, 63,
	63, 64, 65, 66, 66, 66, 66, 66, 67, 67,
	67, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 69, 70,
	70, 70, 71, 71, 72, 72, 73, 73, 74, 74,
	75, 75, 75, 76, 76, 77, 78, 79, 79, 79,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 81,
	81, 81, 81, 81, 81, 81, 82, 82, 82, 82,
	83, 83, 84, 84, 84, 84, 84, 84, 84, 84,
	85, 85, 85, 85, 85, 85, 86, 86, 87, 87,
	87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
	88, 89, 89, 90, 90, 91, 91, 92, 92, 92,
	93, 93, 93, 94, 94, 95, 95, 96, 96, 97,
	97, 97, 97, 99, 99, 99, 98, 98, 98, 98,
	100, 100, 100, 100, 101, 101, 104, 104, 105, 105,
	105, 106, 106, 106, 106, 107, 107, 107, 107, 107,
	107, 107, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 109, 109, 110, 110, 111, 111, 111, 112,
	113, 113, 114, 114, 115, 115, 116, 116, 117, 117,
	118, 118, 119, 119, 102, 102, 103, 103, 120, 120,
	121, 121, 122, 122, 122, 122, 123, 124, 125, 125,
	126, 126, 126, 126, 126, 126, 126, 126, 127, 127,
	128, 128, 129, 129, 130, 130, 131, 131, 132, 132,
	133, 133, 134, 134, 135, 135, 136, 136, 137, 137,
	138, 138, 139, 139, 140, 140, 141, 141, 142, 142,
	143, 143, 144, 144, 144, 144, 144, 144, 144, 144,
	145, 146, 146, 147, 148, 148, 149, 149, 150, 151,
	152, 153, 153, 154, 154, 155, 155, 156, 156, 157,
	157, 157, 158, 158, 159, 159, 160, 160, 161, 161,
}

var yyR2 = [...]int{
	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 8, 8, 9, 9, 1, 1, 1,
	2, 1, 1, 7, 8, 6, 1, 1, 7, 8,
	6, 1, 1, 1, 1, 1, 6, 8, 8, 9,
	9, 1, 2, 1, 1, 7, 8, 6, 1, 1,
	7, 8, 6, 1, 1, 1, 2, 2, 1, 2,
	4, 4, 4, 4, 2, 1, 1, 6, 8, 5,
	6, 8, 5, 7, 7, 7, 7, 1, 3, 1,
	3, 0, 1, 1, 2, 2, 5, 5, 2, 4,
	2, 3, 5, 6, 8, 5, 3, 1, 3, 1,
	3, 4, 2, 4, 3, 1, 1, 3, 3, 1,
	3, 1, 1, 3, 9, 10, 10, 12, 3, 0,
	1, 1, 1, 1, 2, 2, 5, 6, 3, 4,
	4, 4, 4, 4, 4, 2, 2, 2, 2, 4,
	4, 2, 2, 2, 4, 1, 2, 2, 4, 2,
	2, 1, 2, 2, 3, 4, 3, 5, 4, 6,
	8, 10, 9, 11, 5, 4, 4, 4, 1, 1,
	3, 2, 0, 2, 0, 2, 0, 3, 0, 2,
	0, 3, 1, 6, 5, 0, 1, 2, 1, 1,
	0, 1, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 6, 9, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 1, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 1, 3,
	1, 6, 1, 3, 1, 3, 2, 4, 1, 1,
	0, 1, 1, 1, 1, 3, 3, 3, 1, 6,
	3, 3, 3, 3, 4, 4, 5, 6, 6, 3,
	4, 4, 3, 4, 4, 4, 4, 4, 2, 3,
	3, 3, 3, 3, 2, 2, 3, 3, 2, 2,
	0, 1, 4, 4, 6, 8, 3, 4, 4, 4,
	5, 5, 5, 5, 5, 1, 5, 10, 8, 9,
	9, 9, 9, 9, 9, 8, 8, 10, 8, 10,
	2, 1, 5, 0, 3, 2, 5, 2, 2, 2,
	2, 2, 2, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 6, 6, 8,
	6, 8, 6, 8, 1, 1, 1, 1, 1, 2,
	3, 1, 2, 3, 4, 1, 2, 3, 1, 1,
	1, 3, 4, 5, 6, 5, 6, 5, 6, 7,
	6, 7, 2, 4, 1, 1, 1, 3, 1, 5,
	0, 1, 4, 5, 0, 2, 1, 3, 1, 3,
	1, 3, 1, 3, 1, 3, 1, 3, 1, 3,
	1, 3, 6, 9, 5, 8, 7, 3, 1, 3,
	10, 13, 9, 12, 9, 12, 8, 11, 5, 6,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 4, 5, 0, 2, 4, 5, 0, 2,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 1, 3, 1, 3, 1, 1,
	1, 0, 1, 0, 1, 0, 1, 0, 1, 1,
	1, 1, 0, 1, 0, 1, 0, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -1, -7, -5, -11, -42, -43, -122, -123, -126,
	-127, -23, -20, -21, -27, -28, -31, -37, -22, -40,
	-41, -68, 15, 88, 87, -8, -10, -44, -60, -46,
	27, 32, 35, 133, 96, -147, 102, 20, 21, 100,
	101, 99, 103, 120, 111, 112, 33, 124, 134, 116,
	117, 118, 119, 125, 121, 122, 123, 126, -63, -81,
	-78, -77, -84, -85, -112, -80, -82, -145, -150, -151,
	-152, -39, 168, 16, 90, 115, -45, 80, 17, 5,
	6, 7, -64, -65, -67, 162, 163, -144, 147, 149,
	150, 148, -86, -70, 70, 74, 167, 11, 13, 14,
	12, 97, 9, 78, -66, 4, 135, 136, 137, 139,
	140, 141, 142, 151, 146, 30, 160, -68, 168, -77,
	-147, 88, 27, 133, 87, -113, -67, -68, -52, 45,
	-44, -46, 24, 19, 27, 22, -77, 168, -47, -48,
	25, 18, 168, 25, 36, 36, -149, 168, -148, -145,
	-149, -144, -145, 97, 44, 103, 127, -150, -152, -150,
	-144, -144, -38, 104, 105, 37, 38, 106, 107, -144,
	-144, -68, -68, -68, -152, -144, -68, -68, -68, -144,
	-68, -117, -67, -144, -68, -144, -144, 157, -67, -68,
	-117, -42, -60, -46, -68, -145, -146, -9, 133, 96,
	6, 65, 66, 67, -62, -61, -159, 31, -153, 79,
	156, 155, 161, 77, 75, 74, 71, 76, -161, 163,
	162, 164, 165, 166, 73, 72, -67, -67, 171, 168,
	168, 168, 168, 168, 155, 161, -154, -161, 74, -77,
	-67, -67, -144, 168, 168, 171, -1, 92, -117, -83,
	168, -113, -136, -114, 91, -53, -59, 51, 52, 48,
	-52, -47, 25, -103, -101, -96, -98, -144, 30, -97,
	139, 140, 141, 142, 25, 18, -102, -96, -48, -49,
	23, -146, -145, -119, -107, -104, -108, 29, -105, 168,
	-101, -100, -77, -99, 143, 144, 145, -83, -117, -101,
	-144, -101, -153, 170, 157, 97, 44, 127, 128, -144,
	-96, -144, -144, 161, 43, 161, 43, 62, -144, -68,
	-68, 18, 62, 62, 43, 18, 18, 170, 62, 170,
	-68, 6, -67, 169, 169, 169, 169, 94, 71, 170,
	71, -145, -146, -158, 68, -158, -158, 170, -144, -121,
	-111, -110, -69, -67, -87, 164, -144, 150, 133, 148,
	151, 152, 153, 154, -67, -67, -67, -154, -67, 75,
	71, 76, -70, 168, -77, -67, 69, 68, -67, -67,
	-67, -67, -67, -67, -67, -144, 6, -83, -153, -83,
	-67, 169, -121, -153, -153, -70, -70, 75, 71, 69,
	68, 77, 148, -153, -67, -144, 6, -1, 169, 91,
	-137, 93, -115, 93, -67, -68, 98, 99, -68, -68,
	-72, -73, -74, -67, -87, -53, -48, -101, 20, 170,
	168, -101, -119, 18, 170, -49, -50, 46, -67, 60,
	-155, -157, 63, 170, 55, 57, 58, 59, -144, 28,
	-107, -77, -144, 28, 168, 169, 62, 168, 168, -160,
	28, 33, 34, 42, 20, -83, -149, -67, 98, 168,
	28, 168, 168, -68, -144, -68, -144, -144, -68, -144,
	-68, -30, -29, -68, 25, 5, -30, -118, -68, -152,
	-152, -101, -118, -118, -117, -68, -2, -12, -5, -13,
	88, 87, -8, -10, -6, 113, 114, -144, -146, -144,
	71, 71, -45, -44, -45, -45, -62, 28, 168, 170,
	28, 168, 168, 168, 168, 168, 168, 168, 168, -64,
	-65, 72, -67, -70, -67, -70, -70, 169, -83, 169,
	18, 169, -83, -83, -69, -70, -79, 168, -77, 146,
	-79, -79, -154, -83, 170, -129, -128, 93, 89, 95,
	-1, 95, -67, 92, 92, 19, -55, 37, 104, -56,
	-57, 53, 86, 137, -58, 86, 137, 170, -75, 49,
	50, 98, -49, 26, 168, -42, -125, -124, -66, -144,
	-103, -96, -68, -144, 30, 62, 168, -49, -119, -102,
	-50, -51, 47, 48, 54, 54, -156, 56, -155, -157,
	-106, -107, 64, -105, -144, 169, -144, -68, 168, -116,
	-66, -120, -144, -42, -24, 168, -144, -66, 168, -66,
	-144, 169, -42, -144, -120, -42, 169, -36, -33, -35,
	-32, -34, -145, -144, 170, 28, -146, 170, 95, 160,
	-68, -113, 94, 94, -144, -144, 168, -120, -121, -144,
	-83, -153, -153, -153, -153, -153, -83, -83, -83, -67,
	72, 169, -67, 169, 169, 169, 72, -71, -70, -77,
	168, 100, 71, 169, -67, 95, -129, -1, -68, 87,
	-67, -1, -68, -54, 138, 80, -72, 136, 19, -50,
	-71, -116, -48, 170, 161, 169, 170, 170, 168, -116,
	-49, -51, -67, -117, -107, 64, -107, 64, 54, 54,
	-156, -105, 170, 170, -116, 169, 170, 169, 170, -26,
	37, 38, 39, 40, -25, -24, 41, -116, 43, 43,
	169, 28, 169, 170, 170, 41, 169, 170, -30, -144,
	-118, 90, -2, 92, -138, 91, -2, -2, 94, 94,
	-42, 169, 169, -83, -83, -83, -83, -69, -83, 169,
	169, 169, -67, 169, 98, -70, 169, 170, -67, 81,
	132, 169, 88, 95, 92, -114, -136, 91, -57, -59,
	135, -76, 37, 38, -51, 169, -49, -125, -67, -83,
	-96, -116, 169, -52, -105, -109, 61, 62, -105, -107,
	64, -107, 64, 54, 170, -106, -144, -68, 169, 62,
	-116, -160, -120, -66, -66, 169, 170, -67, 169, -144,
	-144, -68, 28, 129, 28, -32, -35, -35, -145, -68,
	28, -36, -2, -139, 93, -68, 95, 95, -2, -2,
	169, 28, 110, 169, 169, 169, 169, 169, 169, 110,
	110, 131, 110, 131, -67, -71, 170, 46, 88, -1,
	-54, -52, 26, -42, 169, 169, 170, 169, 62, -53,
	-67, 168, -109, -109, -105, -105, -107, 64, -106, 169,
	170, 169, 170, 26, -42, 168, -42, -26, -25, -42,
	-3, -14, -5, -18, 88, 87, -15, -16, 90, 130,
	129, 129, 169, -131, -130, 93, 89, 95, -2, 92,
	90, 90, 95, 95, 168, 168, 110, 110, 110, 110,
	110, 110, 168, 168, 136, 168, 136, 169, -67, 168,
	-128, -53, -71, -83, 26, -42, 168, 98, -120, -109,
	-105, -83, -83, -71, -116, 95, 160, -68, -113, -68,
	-145, -146, -9, -68, -3, -3, 28, 95, -131, -2,
	-68, 87, -2, 90, 90, -42, -89, -88, -90, 109,
	168, 168, 168, 168, 168, 168, -88, -90, -89, 110,
	-88, 110, 169, -52, 98, 169, -71, -116, 19, 169,
	169, 169, 169, -3, 92, -140, 91, 94, 71, 71,
	-145, -146, 95, 95, 129, 88, 95, 92, -138, 91,
	169, 169, -52, 45, 48, -89, -89, -89, -89, -89,
	-88, 169, 169, 168, 169, 168, 169, 19, 169, 26,
	-42, -3, -141, 93, -68, -4, -17, -5, -19, 88,
	87, -15, -16, -6, -144, -144, 71, 71, -3, 88,
	-2, 48, -117, 169, 169, 169, 169, 169, 169, -89,
	-88, 26, -42, -71, -133, -132, 93, 89, 95, -3,
	92, 95, 160, -68, -113, 94, 94, -144, -144, 95,
	-130, -72, 169, 169, -71, 95, -133, -3, -68, 87,
	-3, 90, -4, 92, -142, 91, -4, -4, 94, 94,
	-91, 137, 88, 95, 92, -140, 91, -4, -143, 93,
	-68, 95, 95, -4, -4, -92, 75, 82, 6, 85,
	88, -3, -135, -134, 93, 89, 95, -4, 92, 90,
	90, 95, 95, -94, 82, -93, 6, 85, 83, 83,
	86, -132, 95, -135, -4, -68, 87, -4, 90, 90,
	72, 83, 83, 84, 86, 88, 95, 92, -142, 91,
	-95, 82, -93, 88, -4, 84, -134,
}

var yyDef = [...]int{
	-2, -2, 2, 30, 31, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
	25, -2, 27, 0, 410, 46, 47, -2, 0, 192,
	0, 0, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 139, 0, 0, 85, 86, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 171, 0, 0, 241, 242,
	243, -2, 245, 246, 247, 248, 249, 250, 252, 253,
	254, 255, 0, 257, 0, 39, 0, 514, 501, 226,
	227, 228, 229, 230, 0, 0, 0, 233, 0, 0,
	0, 0, 325, 503, 0, 0, 0, 490, 498, 499,
	500, 0, 231, 232, 238, 482, 483, 484, 485, 486,
	487, 488, 489, 0, 0, 0, -2, 239, 310, 244,
	251, 0, 0, 0, 410, 0, 411, 239, 218, 0,
	-2, 192, 0, 0, 0, 0, 189, 0, 192, 194,
	0, 0, 310, 0, 0, 0, 76, 501, 496, 494,
	77, 0, 79, 0, 0, 0, 0, 0, 0, 84,
	108, 110, 0, 140, 141, 142, 143, 0, 0, 0,
	-2, -2, 239, 239, 155, 167, -2, -2, -2, -2,
	-2, 166, 418, -2, -2, 172, 173, 0, 0, 239,
	0, 0, 0, 192, 239, 250, 0, 0, 37, 38,
	40, 512, 512, 512, 221, 224, 0, 515, 0, 502,
	0, 518, 519, 503, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 304, 305, 0, 310,
	310, 0, 501, 501, 518, 519, 0, 0, 504, 298,
	308, 309, 0, 501, 0, 0, 3, -2, 0, 0,
	310, 0, 468, 414, 0, 176, 202, 0, 0, 0,
	218, 192, 0, 0, 426, 374, 375, 357, 358, 0,
	-2, -2, -2, -2, 0, 0, 0, 424, 194, 196,
	0, 191, 491, 193, -2, 385, 388, 389, 390, 0,
	376, 377, 378, 0, 363, 364, 365, 0, 311, 0,
	516, 0, 310, 0, 0, 0, 0, 0, 0, 111,
	116, 124, 138, 0, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 227, 493, 240, 256, 259, 275, -2, 0, 0,
	0, 0, 0, 0, 513, 0, 0, 514, 0, 190,
	430, 406, 408, 404, 405, 258, 233, 0, 0, 0,
	0, 0, 0, 0, 276, -2, -2, 0, 0, 0,
	0, 0, 289, 0, 260, -2, 0, 0, 299, 300,
	301, 302, 303, 306, 307, 234, 236, 0, 310, 0,
	418, 316, 0, 310, 310, 281, 283, 0, 0, 0,
	0, 503, 148, 310, 0, 235, 237, 452, 318, 0,
	0, -2, 0, 0, 0, 239, 0, 0, -2, -2,
	201, 264, 270, 268, 269, 178, 194, 0, 0, 0,
	0, 0, 194, 0, 0, 196, 198, 0, 195, 0,
	0, 507, 505, 0, 506, 509, 510, 511, 386, 0,
	505, -2, 379, 0, 0, 319, 0, 0, 0, 0,
	517, 0, 0, 0, 0, 0, 497, 495, 0, 0,
	0, 0, 0, -2, -2, -2, -2, -2, -2, -2,
	-2, 109, 119, -2, 0, 121, 123, 164, -2, 153,
	154, 168, 159, 160, 419, -2, 0, 0, 41, 42,
	0, 410, 51, 52, 53, 28, 29, 0, 492, 0,
	0, 0, 185, 188, 186, 187, 225, 0, 0, 0,
	0, 310, 501, 501, 501, 501, 310, 310, 310, 284,
	285, 0, 0, 290, -2, 294, 296, 312, 0, 313,
	0, 317, 0, 0, 0, 0, 291, 0, 278, 0,
	295, 297, 0, 0, 0, 0, 452, -2, 0, 0,
	469, 409, 415, 0, -2, 177, 0, 208, 209, 205,
	211, 212, 213, 214, 219, 216, 217, 0, 266, 271,
	272, 0, 196, 0, 0, 434, 192, 438, 0, 233,
	427, 0, 239, -2, 358, 0, 0, 448, 194, 425,
	198, 184, 0, 0, 0, 0, 0, 508, 0, 507,
	423, -2, 0, 390, 387, 391, 380, 239, 0, 0,
	416, 0, 428, 89, 101, 0, 97, 92, 0, 0,
	0, 322, 106, 107, 0, 115, 0, 0, 131, 132,
	126, 129, 125, 0, 0, 0, 112, 0, 0, -2,
	239, 0, -2, -2, 0, 0, 0, 0, 431, 407,
	0, 310, 310, 310, 310, 310, 0, 0, 0, 286,
	0, 320, 0, 321, 323, 324, 0, 0, 262, -2,
	0, 146, 0, 326, 0, 0, 0, 453, 239, 45,
	412, 466, 239, 218, 206, 0, 265, 0, 179, 198,
	432, 0, 194, 0, 0, 366, 310, 0, 0, 0,
	449, 200, 199, 197, 392, 0, 505, 0, 0, 0,
	0, 382, 0, 0, 0, 0, 0, -2, 0, 90,
	102, 103, 0, 0, 0, 99, 0, 0, 0, 0,
	113, 0, 0, 0, 0, 0, 0, 0, 120, 118,
	421, 32, 5, -2, 472, 0, 0, 0, -2, -2,
	0, 0, 312, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 287, 314, 0, 288, 277, 0, 0, 147,
	0, 261, 43, 0, -2, 413, 467, 0, 205, 204,
	207, 267, 273, 274, 200, 0, 436, 439, 437, 0,
	0, 0, 0, 218, 397, 393, 0, 0, 0, 505,
	0, 395, 0, 0, 0, 383, 233, 239, 0, 0,
	417, 0, 429, 104, 105, 101, 0, 98, 93, 94,
	-2, -2, 0, -2, 0, 127, 133, 130, 0, -2,
	0, 0, 456, 0, -2, 239, 0, 0, 0, 0,
	222, 0, 0, 320, 321, 322, 323, 324, 326, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 44, 450,
	203, 218, 0, 435, 367, 368, 310, 0, 0, 180,
	402, 0, 398, 394, 0, 400, 396, 0, 384, 370,
	310, 372, 310, 0, 446, 0, 88, 91, 100, 114,
	0, 0, 54, 55, 0, 410, 68, 69, 0, 61,
	-2, -2, 0, 0, 456, -2, 0, 0, 473, -2,
	33, 34, 0, 0, 0, 343, 0, 0, 0, 0,
	0, 0, 343, 343, 0, 343, 0, 315, 0, 200,
	451, 182, 433, 0, 0, 442, 0, 0, 0, 399,
	401, 0, 0, 444, 0, 134, -2, 239, 0, 239,
	250, 0, 0, -2, 0, 0, 0, 0, 0, 457,
	239, 50, 470, 35, 36, 0, 0, 341, 200, 0,
	343, 343, 343, 343, 343, 343, 0, 200, 0, 0,
	0, 0, 279, 0, 0, 369, 440, 0, 181, 403,
	371, 373, 0, 7, -2, 476, 0, -2, 0, 0,
	0, 0, 135, 136, -2, 48, 0, -2, 471, 0,
	223, 328, 340, 0, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 343, 338, 343, 327, 183, 0, 0,
	447, 460, 0, -2, 239, 0, 0, 63, 64, 0,
	410, 73, 74, 75, 0, 0, 0, 0, 0, 49,
	454, 0, 344, 329, 330, 331, 332, 333, 334, 0,
	0, 0, 443, 445, 0, 460, -2, 0, 0, 477,
	-2, 0, -2, 239, 0, -2, -2, 0, 0, 137,
	455, 201, 337, 339, 441, 0, 0, 461, 239, 67,
	474, 56, 9, -2, 480, 0, 0, 0, -2, -2,
	342, 0, 65, 0, -2, 475, 0, 464, 0, -2,
	239, 0, 0, 0, 0, 345, 0, 0, 0, 0,
	66, 458, 0, 464, -2, 0, 0, 481, -2, 57,
	58, 0, 0, 0, 0, 354, 0, 0, 347, 348,
	349, 459, 0, 0, 465, 239, 72, 478, 59, 60,
	0, 353, 350, 351, 352, 70, 0, -2, 479, 0,
	346, 0, 356, 71, 462, 355, 463,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 167, 3, 3, 3, 166, 3, 3,
	168, 169, 164, 163, 170, 162, 171, 165, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 160,
	3, 161,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159,
}

var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:251
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:256
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:261
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:268
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:272
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:278
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:282
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:288
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:292
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:298
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:302
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:306
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:310
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:314
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:318
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:322
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:326
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:330
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:334
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:338
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:342
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:346
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:350
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:354
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:358
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:362
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:366
		{
			yyVAL.statement = ExternalCommand{BaseExpr: NewBaseExpr(yyDollar[1].token), Command: yyDollar[1].token.Literal}
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:372
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:376
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:382
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:386
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 32:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:392
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 33:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:396
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 34:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:400
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 35:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:404
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 36:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:408
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:414
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:418
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:424
		{
			yyVAL.statement = Exit{}
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:428
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:434
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:438
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:444
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:448
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:452
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:456
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:460
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 48:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:466
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 49:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:470
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 50:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:474
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:478
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:482
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:486
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:492
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:496
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 56:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:502
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:506
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 58:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:510
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 59:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:514
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 60:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:518
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:524
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:528
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:534
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:538
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:544
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 66:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:548
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 67:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:552
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:556
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:560
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 70:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:566
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 71:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:570
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 72:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:574
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:578
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:582
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:586
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:592
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:596
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:600
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:604
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:610
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 81:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:614
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:618
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:622
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:626
		{
			yyVAL.statement = UnsetEnvVar{EnvVar: yyDollar[2].envvar}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:632
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:636
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 87:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:642
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:646
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 89:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:650
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 90:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:654
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:658
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:662
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:666
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 94:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:670
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 95:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:674
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].identifier}
		}
	case 96:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:678
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].queryexpr}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:684
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:688
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:694
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:698
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:704
		{
			yyVAL.expression = nil
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:708
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:712
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:716
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:720
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:726
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 107:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:730
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Statement: yyDollar[5].identifier}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:734
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 109:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:738
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:742
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:746
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 112:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:750
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:756
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 114:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:760
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 115:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:764
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:768
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].queryexpr}
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:774
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:778
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr, Name: yyDollar[3].identifier}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:784
		{
			yyVAL.replacevals = []ReplaceValue{yyDollar[1].replaceval}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:788
		{
			yyVAL.replacevals = append([]ReplaceValue{yyDollar[1].replaceval}, yyDollar[3].replacevals...)
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:794
		{
			yyVAL.statement = StatementPreparation{Name: yyDollar[2].identifier, Statement: value.NewString(yyDollar[4].token.Literal)}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:798
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier}
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:802
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:806
		{
			yyVAL.statement = DisposeStatement{Name: yyDollar[3].identifier}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:812
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:818
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:822
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:828
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:834
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:838
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:844
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:848
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:852
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 134:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:858
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 135:
		yyDollar = yyS[yypt-10 : yypt+1]
//line parser.y:862
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 136:
		yyDollar = yyS[yypt-10 : yypt+1]
//line parser.y:866
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 137:
		yyDollar = yyS[yypt-12 : yypt+1]
//line parser.y:870
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:874
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:880
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:884
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:888
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:892
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:896
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:900
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:904
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:910
		{
			yyVAL.queryexpr = CursorStatus{Cursor: yyDollar[2].identifier, Negation: yyDollar[4].token, Type: yyDollar[5].token}
		}
	case 147:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:914
		{
			yyVAL.queryexpr = CursorStatus{Cursor: yyDollar[2].identifier, Negation: yyDollar[4].token, Type: yyDollar[6].token}
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:918
		{
			yyVAL.queryexpr = CursorAttrebute{Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:924
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:928
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:932
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:936
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:940
		{
			yyVAL.statement = AddFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:944
		{
			yyVAL.statement = RemoveFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:948
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:952
		{
			yyVAL.statement = Echo{Value: yyDollar[2].queryexpr}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:956
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:960
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:964
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:968
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:972
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].identifier}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:976
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:980
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr}
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:984
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:988
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:992
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token), Keywords: yyDollar[2].queryexprs}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:996
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1000
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier, Table: yyDollar[4].queryexpr}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1004
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].identifier}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1008
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].queryexpr}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1012
		{
			yyVAL.statement = Pwd{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1016
		{
			yyVAL.statement = Reload{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1022
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1026
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[3].queryexpr}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1030
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1036
		{
			yyVAL.queryexpr = SelectQuery{
				SelectEntity:  yyDollar[1].queryexpr,
				OrderByClause: yyDollar[2].queryexpr,
				LimitClause:   yyDollar[3].queryexpr,
			}
		}
	case 177:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1044
		{
			yyVAL.queryexpr = SelectQuery{
				SelectEntity:  yyDollar[1].queryexpr,
				OrderByClause: yyDollar[2].queryexpr,
				LimitClause:   yyDollar[3].queryexpr,
				Context:       yyDollar[5].token,
			}
		}
	case 178:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1053
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
			}
		}
	case 179:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:1062
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				Context:       yyDollar[6].token,
			}
		}
	case 180:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:1074
		{
			yyVAL.queryexpr = SelectQuery{
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[1].queryexpr,
					IntoClause:    yyDollar[2].queryexpr,
					FromClause:    yyDollar[3].queryexpr,
					WhereClause:   yyDollar[4].queryexpr,
					GroupByClause: yyDollar[5].queryexpr,
					HavingClause:  yyDollar[6].queryexpr,
				},
				OrderByClause: yyDollar[7].queryexpr,
				LimitClause:   yyDollar[8].queryexpr,
			}
		}
	case 181:
		yyDollar = yyS[yypt-10 : yypt+1]
//line parser.y:1089
		{
			yyVAL.queryexpr = SelectQuery{
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[1].queryexpr,
					IntoClause:    yyDollar[2].queryexpr,
					FromClause:    yyDollar[3].queryexpr,
					WhereClause:   yyDollar[4].queryexpr,
					GroupByClause: yyDollar[5].queryexpr,
					HavingClause:  yyDollar[6].queryexpr,
				},
				OrderByClause: yyDollar[7].queryexpr,
				LimitClause:   yyDollar[8].queryexpr,
				Context:       yyDollar[10].token,
			}
		}
	case 182:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:1105
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause: yyDollar[1].queryexpr,
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[2].queryexpr,
					IntoClause:    yyDollar[3].queryexpr,
					FromClause:    yyDollar[4].queryexpr,
					WhereClause:   yyDollar[5].queryexpr,
					GroupByClause: yyDollar[6].queryexpr,
					HavingClause:  yyDollar[7].queryexpr,
				},
				OrderByClause: yyDollar[8].queryexpr,
				LimitClause:   yyDollar[9].queryexpr,
			}
		}
	case 183:
		yyDollar = yyS[yypt-11 : yypt+1]
//line parser.y:1121
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause: yyDollar[1].queryexpr,
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[2].queryexpr,
					IntoClause:    yyDollar[3].queryexpr,
					FromClause:    yyDollar[4].queryexpr,
					WhereClause:   yyDollar[5].queryexpr,
					GroupByClause: yyDollar[6].queryexpr,
					HavingClause:  yyDollar[7].queryexpr,
				},
				OrderByClause: yyDollar[8].queryexpr,
				LimitClause:   yyDollar[9].queryexpr,
				Context:       yyDollar[11].token,
			}
		}
	case 184:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1140
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 185:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1150
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1159
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 187:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1168
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1179
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1183
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1189
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1195
		{
			yyVAL.queryexpr = IntoClause{Variables: yyDollar[2].variables}
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1201
		{
			yyVAL.queryexpr = nil
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1205
		{
			yyVAL.queryexpr = FromClause{Tables: yyDollar[2].queryexprs}
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1211
		{
			yyVAL.queryexpr = nil
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1215
		{
			yyVAL.queryexpr = WhereClause{Filter: yyDollar[2].queryexpr}
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1221
		{
			yyVAL.queryexpr = nil
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1225
		{
			yyVAL.queryexpr = GroupByClause{Items: yyDollar[3].queryexprs}
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1231
		{
			yyVAL.queryexpr = nil
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1235
		{
			yyVAL.queryexpr = HavingClause{Filter: yyDollar[2].queryexpr}
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1241
		{
			yyVAL.queryexpr = nil
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1245
		{
			yyVAL.queryexpr = OrderByClause{Items: yyDollar[3].queryexprs}
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1251
		{
			if yyDollar[1].queryexpr == nil {
				yyVAL.queryexpr = yyDollar[1].queryexpr
			} else {
				yyVAL.queryexpr = LimitClause{BaseExpr: yyDollar[1].queryexpr.(OffsetClause).BaseExpr, OffsetClause: yyDollar[1].queryexpr}
			}
		}
	case 203:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:1259
		{
			var base *BaseExpr
			if yyDollar[1].queryexpr == nil {
				base = NewBaseExpr(yyDollar[2].token)
			} else {
				base = yyDollar[1].queryexpr.(OffsetClause).BaseExpr
			}
			yyVAL.queryexpr = LimitClause{BaseExpr: base, Type: yyDollar[2].token, Position: yyDollar[3].token, Value: yyDollar[4].queryexpr, Unit: yyDollar[5].token, Restriction: yyDollar[6].token, OffsetClause: yyDollar[1].queryexpr}
		}
	case 204:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1269
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, Value: yyDollar[2].queryexpr, Unit: yyDollar[3].token, Restriction: yyDollar[4].token, OffsetClause: yyDollar[5].queryexpr}
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1275
		{
			yyVAL.token = Token{}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1279
		{
			yyVAL.token = yyDollar[1].token
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1283
		{
			yyVAL.token = yyDollar[2].token
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1289
		{
			yyVAL.token = yyDollar[1].token
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1293
		{
			yyVAL.token = yyDollar[1].token
		}
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1299
		{
			yyVAL.token = Token{}
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1323
		{
			yyVAL.token = Token{}
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1331
		{
			yyVAL.token = yyDollar[1].token
		}
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1337
		{
			yyVAL.queryexpr = nil
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1341
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: yyDollar[2].queryexpr, Unit: yyDollar[3].token}
		}
	case 220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1347
		{
			yyVAL.queryexpr = nil
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1351
		{
			yyVAL.queryexpr = WithClause{InlineTables: yyDollar[2].queryexprs}
		}
	case 222:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:1357
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 223:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:1361
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1367
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1371
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1377
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1381
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1385
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1389
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1393
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1399
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1405
		{
			yyVAL.queryexpr = NewNullValue()
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1411
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1415
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1419
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1423
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1427
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1433
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1437
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1441
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1447
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1451
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1455
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1459
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1463
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1467
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1471
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1475
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1479
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1483
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1487
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1491
		{
			yyVAL.queryexpr = yyDollar[1].envvar
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1495
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1499
		{
			yyVAL.queryexpr = yyDollar[1].flag
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1503
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1507
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1511
		{
			name := ""
			if yyDollar[1].token.Literal[0] == ':' {
				name = yyDollar[1].token.Literal[1:]
			}
			yyVAL.queryexpr = Placeholder{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Ordinal: yyDollar[1].token.HolderOrdinal, Name: name}
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1521
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1527
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1531
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 261:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:1535
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1541
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1545
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1551
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1555
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1561
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1565
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, NullsPosition: yyDollar[4].token}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1571
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1575
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 270:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1581
		{
			yyVAL.token = Token{}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1585
		{
			yyVAL.token = yyDollar[1].token
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1589
		{
			yyVAL.token = yyDollar[1].token
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1595
		{
			yyVAL.token = yyDollar[1].token
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1599
		{
			yyVAL.token = yyDollar[1].token
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1605
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1611
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1634
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1638
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 279:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:1642
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1648
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1652
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1656
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1660
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1664
		{
			yyVAL.queryexpr = Is{LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1668
		{
			yyVAL.queryexpr = Is{LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 286:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1672
		{
			yyVAL.queryexpr = Between{LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 287:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:1676
		{
			yyVAL.queryexpr = Between{LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 288:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:1680
		{
			yyVAL.queryexpr = Between{LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1684
		{
			yyVAL.queryexpr = In{LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 290:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1688
		{
			yyVAL.queryexpr = In{LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 291:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1692
		{
			yyVAL.queryexpr = In{LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1696
		{
			yyVAL.queryexpr = Like{LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 293:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1700
		{
			yyVAL.queryexpr = Like{LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 294:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1704
		{
			yyVAL.queryexpr = Any{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1708
		{
			yyVAL.queryexpr = Any{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1712
		{
			yyVAL.queryexpr = All{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1716
		{
			yyVAL.queryexpr = All{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1720
		{
			yyVAL.queryexpr = Exists{Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1726
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1730
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1734
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1738
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1742
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1746
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1750
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1756
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1760
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1764
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1768
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1774
		{
			yyVAL.queryexprs = nil
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1778
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1784
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1788
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 314:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:1792
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: []QueryExpression{yyDollar[3].queryexpr, yyDollar[5].queryexpr}, From: yyDollar[4].token}
		}
	case 315:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:1796
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: []QueryExpression{yyDollar[3].queryexpr, yyDollar[5].queryexpr, yyDollar[7].queryexpr}, From: yyDollar[4].token, For: yyDollar[6].token}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1800
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 317:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1804
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1808
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 319:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1812
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 320:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1819
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 321:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1823
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1827
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1831
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1835
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1839
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1845
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 327:
		yyDollar = yyS[yypt-10 : yypt+1]
//line parser.y:1849
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, OrderBy: yyDollar[9].queryexpr}
		}
	case 328:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:1855
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 329:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:1859
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 330:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:1863
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 331:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:1867
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 332:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:1871
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 333:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:1875
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 334:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:1879
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 335:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:1883
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 336:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:1887
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 337:
		yyDollar = yyS[yypt-10 : yypt+1]
//line parser.y:1891
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreType: yyDollar[6].token, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 338:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:1895
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 339:
		yyDollar = yyS[yypt-10 : yypt+1]
//line parser.y:1899
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreType: yyDollar[6].token, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1905
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1911
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1915
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: OrderByClause{Items: yyDollar[4].queryexprs}, WindowingClause: yyDollar[5].queryexpr}
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1921
		{
			yyVAL.queryexpr = nil
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1925
		{
			yyVAL.queryexpr = PartitionClause{Values: yyDollar[3].queryexprs}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1931
		{
			yyVAL.queryexpr = WindowingClause{FrameLow: yyDollar[2].queryexpr}
		}
	case 346:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1935
		{
			yyVAL.queryexpr = WindowingClause{FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1941
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Unbounded: yyDollar[1].token}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1945
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Offset: i}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1950
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1956
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Offset: i}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1961
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Offset: i}
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1966
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1972
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Unbounded: yyDollar[1].token}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1976
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1982
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Unbounded: yyDollar[1].token}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1986
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1992
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1996
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2002
		{
			yyVAL.token = yyDollar[1].token
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2006
		{
			yyVAL.token = yyDollar[1].token
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2010
		{
			yyVAL.token = yyDollar[1].token
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2014
		{
			yyVAL.token = yyDollar[1].token
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2020
		{
			yyVAL.token = yyDollar[1].token
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2024
		{
			yyVAL.token = yyDollar[1].token
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2028
		{
			yyVAL.token = yyDollar[1].token
		}
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2034
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, Path: yyDollar[3].queryexpr, Args: nil}
		}
	case 367:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:2038
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, Path: yyDollar[3].queryexpr, Args: yyDollar[5].queryexprs}
		}
	case 368:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:2042
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: nil}
		}
	case 369:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:2046
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: yyDollar[7].queryexprs}
		}
	case 370:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:2052
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: nil}
		}
	case 371:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:2056
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: yyDollar[7].queryexprs}
		}
	case 372:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:2060
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: nil}
		}
	case 373:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:2064
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: yyDollar[7].queryexprs}
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2070
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2074
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2080
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2084
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2090
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2094
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2098
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token, Alias: yyDollar[3].identifier}
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2104
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2108
		{
			yyDollar[2].table.Lateral = yyDollar[1].token
			yyDollar[2].table.BaseExpr = NewBaseExpr(yyDollar[1].token)
			yyVAL.queryexprs = []QueryExpression{yyDollar[2].table}
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2114
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].table}, yyDollar[3].queryexprs...)
		}
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2118
		{
			yyDollar[2].table.Lateral = yyDollar[1].token
			yyDollar[2].table.BaseExpr = NewBaseExpr(yyDollar[1].token)
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[2].table}, yyDollar[4].queryexprs...)
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2126
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2130
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2134
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token, Alias: yyDollar[3].identifier}
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2138
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2142
		{
			yyVAL.queryexpr = Table{Object: Dual{}}
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2146
		{
			yyVAL.queryexpr = yyDollar[1].table
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2150
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2156
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 393:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2160
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 394:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:2164
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 395:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2168
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 396:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:2172
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 397:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2176
		{
			yyDollar[5].table.Lateral = yyDollar[4].token
			yyDollar[5].table.BaseExpr = NewBaseExpr(yyDollar[4].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].table, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 398:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:2182
		{
			yyDollar[5].table.Lateral = yyDollar[4].token
			yyDollar[5].table.BaseExpr = NewBaseExpr(yyDollar[4].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].table, JoinType: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 399:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:2188
		{
			yyDollar[6].table.Lateral = yyDollar[5].token
			yyDollar[6].table.BaseExpr = NewBaseExpr(yyDollar[5].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].table, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[7].queryexpr}
		}
	case 400:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:2194
		{
			yyDollar[6].table.Lateral = yyDollar[5].token
			yyDollar[6].table.BaseExpr = NewBaseExpr(yyDollar[5].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].table, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 401:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:2200
		{
			yyDollar[7].table.Lateral = yyDollar[6].token
			yyDollar[7].table.BaseExpr = NewBaseExpr(yyDollar[6].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[7].table, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2208
		{
			yyVAL.queryexpr = JoinCondition{On: yyDollar[2].queryexpr}
		}
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2212
		{
			yyVAL.queryexpr = JoinCondition{Using: yyDollar[3].queryexprs}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2218
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2222
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2228
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2232
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token, Alias: yyDollar[3].identifier}
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2236
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 409:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2242
		{
			yyVAL.queryexpr = CaseExpr{Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2248
		{
			yyVAL.queryexpr = nil
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2252
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2258
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2262
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2268
		{
			yyVAL.queryexpr = nil
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2272
		{
			yyVAL.queryexpr = CaseExprElse{Result: yyDollar[2].queryexpr}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2278
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2282
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2288
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2292
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2298
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2302
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2308
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2312
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2318
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2322
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2328
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2332
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2338
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2342
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2348
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2352
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 432:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:2358
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, ValuesList: yyDollar[6].queryexprs}
		}
	case 433:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:2362
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 434:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2366
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 435:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:2370
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 436:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:2376
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2382
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2388
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2392
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 440:
		yyDollar = yyS[yypt-10 : yypt+1]
//line parser.y:2398
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Keys: yyDollar[7].queryexprs, ValuesList: yyDollar[10].queryexprs}
		}
	case 441:
		yyDollar = yyS[yypt-13 : yypt+1]
//line parser.y:2402
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Keys: yyDollar[10].queryexprs, ValuesList: yyDollar[13].queryexprs}
		}
	case 442:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:2406
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Keys: yyDollar[7].queryexprs, Query: yyDollar[9].queryexpr.(SelectQuery)}
		}
	case 443:
		yyDollar = yyS[yypt-12 : yypt+1]
//line parser.y:2410
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Keys: yyDollar[10].queryexprs, Query: yyDollar[12].queryexpr.(SelectQuery)}
		}
	case 444:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:2414
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Keys: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 445:
		yyDollar = yyS[yypt-12 : yypt+1]
//line parser.y:2418
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Fields: yyDollar[5].queryexprs, Keys: yyDollar[9].queryexprs, ValuesList: yyDollar[12].queryexprs}
		}
	case 446:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:2422
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Keys: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 447:
		yyDollar = yyS[yypt-11 : yypt+1]
//line parser.y:2426
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Fields: yyDollar[5].queryexprs, Keys: yyDollar[9].queryexprs, Query: yyDollar[11].queryexpr.(SelectQuery)}
		}
	case 448:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2432
		{
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: FromClause{Tables: yyDollar[4].queryexprs}, WhereClause: yyDollar[5].queryexpr}
		}
	case 449:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:2436
		{
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: FromClause{Tables: yyDollar[5].queryexprs}, WhereClause: yyDollar[6].queryexpr}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2442
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 451:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2446
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2452
		{
			yyVAL.elseexpr = Else{}
		}
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2456
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2462
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 455:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2466
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2472
		{
			yyVAL.elseexpr = Else{}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2476
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2482
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2486
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2492
		{
			yyVAL.elseexpr = Else{}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2496
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2502
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 463:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2506
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 464:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2512
		{
			yyVAL.elseexpr = Else{}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2516
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2522
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 467:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2526
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2532
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2536
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2542
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2546
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2552
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2556
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2562
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2566
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2572
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2576
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2582
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 479:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2586
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2592
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2596
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2602
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2606
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2610
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2614
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2618
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2622
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2626
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2630
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2636
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2642
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2646
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2652
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2658
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2662
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2668
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2672
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2678
		{
			yyVAL.envvar = EnvironmentVariable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2684
		{
			yyVAL.queryexpr = RuntimeInformation{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2690
		{
			yyVAL.flag = Flag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2696
		{
			yyVAL.token = Token{}
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2700
		{
			yyVAL.token = yyDollar[1].token
		}
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2706
		{
			yyVAL.token = Token{}
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2710
		{
			yyVAL.token = yyDollar[1].token
		}
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2716
		{
			yyVAL.token = Token{}
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2720
		{
			yyVAL.token = yyDollar[1].token
		}
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2726
		{
			yyVAL.token = Token{}
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2730
		{
			yyVAL.token = yyDollar[1].token
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2736
		{
			yyVAL.token = yyDollar[1].token
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2740
		{
			yyVAL.token = yyDollar[1].token
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2744
		{
			yyVAL.token = yyDollar[1].token
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2750
		{
			yyVAL.token = Token{}
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2754
		{
			yyVAL.token = yyDollar[1].token
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2760
		{
			yyVAL.token = Token{}
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2764
		{
			yyVAL.token = yyDollar[1].token
		}
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2770
		{
			yyVAL.token = Token{}
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2774
		{
			yyVAL.token = yyDollar[1].token
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2780
		{
			yyVAL.token = yyDollar[1].token
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2784
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
