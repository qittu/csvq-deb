// Code generated by goyacc -o parser.go -v parser.output parser.y. DO NOT EDIT.

//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2

import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	table       Table
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	envvar      EnvironmentVariable
	flag        Flag
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	replaceval  ReplaceValue
	replacevals []ReplaceValue
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const ENVIRONMENT_VARIABLE = 57355
const RUNTIME_INFORMATION = 57356
const EXTERNAL_COMMAND = 57357
const PLACEHOLDER = 57358
const SELECT = 57359
const FROM = 57360
const UPDATE = 57361
const SET = 57362
const UNSET = 57363
const DELETE = 57364
const WHERE = 57365
const INSERT = 57366
const INTO = 57367
const VALUES = 57368
const REPLACE = 57369
const AS = 57370
const DUAL = 57371
const STDIN = 57372
const RECURSIVE = 57373
const CREATE = 57374
const ADD = 57375
const DROP = 57376
const ALTER = 57377
const TABLE = 57378
const FIRST = 57379
const LAST = 57380
const AFTER = 57381
const BEFORE = 57382
const DEFAULT = 57383
const RENAME = 57384
const TO = 57385
const VIEW = 57386
const ORDER = 57387
const GROUP = 57388
const HAVING = 57389
const BY = 57390
const ASC = 57391
const DESC = 57392
const LIMIT = 57393
const OFFSET = 57394
const PERCENT = 57395
const JOIN = 57396
const INNER = 57397
const OUTER = 57398
const LEFT = 57399
const RIGHT = 57400
const FULL = 57401
const CROSS = 57402
const ON = 57403
const USING = 57404
const NATURAL = 57405
const LATERAL = 57406
const UNION = 57407
const INTERSECT = 57408
const EXCEPT = 57409
const ALL = 57410
const ANY = 57411
const EXISTS = 57412
const IN = 57413
const AND = 57414
const OR = 57415
const NOT = 57416
const BETWEEN = 57417
const LIKE = 57418
const IS = 57419
const NULL = 57420
const DISTINCT = 57421
const WITH = 57422
const RANGE = 57423
const UNBOUNDED = 57424
const PRECEDING = 57425
const FOLLOWING = 57426
const CURRENT = 57427
const ROW = 57428
const CASE = 57429
const IF = 57430
const ELSEIF = 57431
const WHILE = 57432
const WHEN = 57433
const THEN = 57434
const ELSE = 57435
const DO = 57436
const END = 57437
const DECLARE = 57438
const CURSOR = 57439
const FOR = 57440
const FETCH = 57441
const OPEN = 57442
const CLOSE = 57443
const DISPOSE = 57444
const PREPARE = 57445
const NEXT = 57446
const PRIOR = 57447
const ABSOLUTE = 57448
const RELATIVE = 57449
const SEPARATOR = 57450
const PARTITION = 57451
const OVER = 57452
const COMMIT = 57453
const ROLLBACK = 57454
const CONTINUE = 57455
const BREAK = 57456
const EXIT = 57457
const ECHO = 57458
const PRINT = 57459
const PRINTF = 57460
const SOURCE = 57461
const EXECUTE = 57462
const CHDIR = 57463
const PWD = 57464
const RELOAD = 57465
const REMOVE = 57466
const SYNTAX = 57467
const TRIGGER = 57468
const FUNCTION = 57469
const AGGREGATE = 57470
const BEGIN = 57471
const RETURN = 57472
const IGNORE = 57473
const WITHIN = 57474
const VAR = 57475
const SHOW = 57476
const TIES = 57477
const NULLS = 57478
const ROWS = 57479
const ONLY = 57480
const CSV = 57481
const JSON = 57482
const FIXED = 57483
const LTSV = 57484
const CSV_INLINE = 57485
const JSON_INLINE = 57486
const JSON_TABLE = 57487
const JSON_ROW = 57488
const SUBSTRING = 57489
const COUNT = 57490
const JSON_OBJECT = 57491
const AGGREGATE_FUNCTION = 57492
const LIST_FUNCTION = 57493
const ANALYTIC_FUNCTION = 57494
const FUNCTION_NTH = 57495
const FUNCTION_WITH_INS = 57496
const COMPARISON_OP = 57497
const STRING_OP = 57498
const SUBSTITUTION_OP = 57499
const UMINUS = 57500
const UPLUS = 57501

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"ENVIRONMENT_VARIABLE",
	"RUNTIME_INFORMATION",
	"EXTERNAL_COMMAND",
	"PLACEHOLDER",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"UNSET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"REPLACE",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"LATERAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"PREPARE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"ECHO",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"EXECUTE",
	"CHDIR",
	"PWD",
	"RELOAD",
	"REMOVE",
	"SYNTAX",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"ROWS",
	"ONLY",
	"CSV",
	"JSON",
	"FIXED",
	"LTSV",
	"CSV_INLINE",
	"JSON_INLINE",
	"JSON_TABLE",
	"JSON_ROW",
	"SUBSTRING",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LIST_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'='",
	"'-'",
	"'+'",
	"'*'",
	"'/'",
	"'%'",
	"'!'",
	"'('",
	"')'",
	"','",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2741

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string, forPrepared bool, ansiQuotes bool) ([]Statement, int, error) {
	l := new(Lexer)
	l.Init(s, sourceFile, forPrepared, ansiQuotes)
	yyParse(l)
	return l.program, l.HolderNumber(), l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 216,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 21,
	1, 26,
	89, 26,
	91, 26,
	93, 26,
	95, 26,
	160, 26,
	-2, 235,
	-1, 33,
	1, 78,
	89, 78,
	91, 78,
	93, 78,
	95, 78,
	160, 78,
	-2, 247,
	-1, 112,
	17, 216,
	19, 216,
	22, 216,
	24, 216,
	-2, 1,
	-1, 114,
	169, 306,
	-2, 216,
	-1, 123,
	65, 184,
	66, 184,
	67, 184,
	-2, 196,
	-1, 161,
	1, 122,
	89, 122,
	91, 122,
	93, 122,
	95, 122,
	160, 122,
	-2, 229,
	-1, 162,
	1, 163,
	89, 163,
	91, 163,
	93, 163,
	95, 163,
	160, 163,
	-2, 235,
	-1, 167,
	1, 156,
	89, 156,
	91, 156,
	93, 156,
	95, 156,
	160, 156,
	-2, 235,
	-1, 168,
	1, 157,
	89, 157,
	91, 157,
	93, 157,
	95, 157,
	160, 157,
	-2, 235,
	-1, 169,
	1, 158,
	89, 158,
	91, 158,
	93, 158,
	95, 158,
	160, 158,
	-2, 235,
	-1, 170,
	1, 161,
	89, 161,
	91, 161,
	93, 161,
	95, 161,
	160, 161,
	-2, 229,
	-1, 171,
	1, 162,
	89, 162,
	91, 162,
	93, 162,
	95, 162,
	160, 162,
	-2, 235,
	-1, 174,
	1, 169,
	89, 169,
	91, 169,
	93, 169,
	95, 169,
	160, 169,
	-2, 229,
	-1, 175,
	1, 170,
	89, 170,
	91, 170,
	93, 170,
	95, 170,
	160, 170,
	-2, 235,
	-1, 232,
	89, 1,
	93, 1,
	95, 1,
	-2, 216,
	-1, 254,
	168, 355,
	-2, 482,
	-1, 255,
	168, 356,
	-2, 483,
	-1, 256,
	168, 357,
	-2, 484,
	-1, 257,
	168, 358,
	-2, 485,
	-1, 289,
	4, 144,
	135, 144,
	136, 144,
	137, 144,
	139, 144,
	140, 144,
	141, 144,
	142, 144,
	-2, 235,
	-1, 290,
	4, 145,
	135, 145,
	136, 145,
	137, 145,
	139, 145,
	140, 145,
	141, 145,
	142, 145,
	-2, 235,
	-1, 300,
	1, 174,
	89, 174,
	91, 174,
	93, 174,
	95, 174,
	160, 174,
	-2, 235,
	-1, 308,
	95, 4,
	-2, 216,
	-1, 317,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	155, 0,
	161, 0,
	-2, 276,
	-1, 318,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	155, 0,
	161, 0,
	-2, 278,
	-1, 327,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	155, 0,
	161, 0,
	-2, 288,
	-1, 377,
	95, 1,
	-2, 216,
	-1, 393,
	54, 501,
	-2, 418,
	-1, 437,
	1, 80,
	89, 80,
	91, 80,
	93, 80,
	95, 80,
	160, 80,
	-2, 235,
	-1, 438,
	1, 81,
	89, 81,
	91, 81,
	93, 81,
	95, 81,
	160, 81,
	-2, 229,
	-1, 439,
	1, 82,
	89, 82,
	91, 82,
	93, 82,
	95, 82,
	160, 82,
	-2, 235,
	-1, 440,
	1, 83,
	89, 83,
	91, 83,
	93, 83,
	95, 83,
	160, 83,
	-2, 229,
	-1, 441,
	1, 149,
	89, 149,
	91, 149,
	93, 149,
	95, 149,
	160, 149,
	-2, 229,
	-1, 442,
	1, 150,
	89, 150,
	91, 150,
	93, 150,
	95, 150,
	160, 150,
	-2, 235,
	-1, 443,
	1, 151,
	89, 151,
	91, 151,
	93, 151,
	95, 151,
	160, 151,
	-2, 229,
	-1, 444,
	1, 152,
	89, 152,
	91, 152,
	93, 152,
	95, 152,
	160, 152,
	-2, 235,
	-1, 447,
	1, 117,
	89, 117,
	91, 117,
	93, 117,
	95, 117,
	160, 117,
	170, 117,
	-2, 235,
	-1, 452,
	1, 416,
	89, 416,
	91, 416,
	93, 416,
	95, 416,
	160, 416,
	-2, 235,
	-1, 459,
	1, 175,
	89, 175,
	91, 175,
	93, 175,
	95, 175,
	160, 175,
	-2, 235,
	-1, 484,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	155, 0,
	161, 0,
	-2, 289,
	-1, 517,
	95, 1,
	-2, 216,
	-1, 524,
	91, 1,
	93, 1,
	95, 1,
	-2, 216,
	-1, 527,
	1, 206,
	52, 206,
	80, 206,
	89, 206,
	91, 206,
	93, 206,
	95, 206,
	98, 206,
	138, 206,
	160, 206,
	169, 206,
	-2, 235,
	-1, 528,
	1, 211,
	89, 211,
	91, 211,
	93, 211,
	95, 211,
	98, 211,
	99, 211,
	160, 211,
	169, 211,
	-2, 235,
	-1, 563,
	169, 353,
	170, 353,
	-2, 229,
	-1, 605,
	89, 4,
	91, 4,
	93, 4,
	95, 4,
	-2, 216,
	-1, 608,
	95, 4,
	-2, 216,
	-1, 609,
	95, 4,
	-2, 216,
	-1, 674,
	54, 501,
	-2, 377,
	-1, 695,
	17, 512,
	80, 512,
	168, 512,
	-2, 87,
	-1, 721,
	89, 4,
	93, 4,
	95, 4,
	-2, 216,
	-1, 726,
	95, 4,
	-2, 216,
	-1, 727,
	95, 4,
	-2, 216,
	-1, 752,
	89, 1,
	93, 1,
	95, 1,
	-2, 216,
	-1, 795,
	1, 95,
	89, 95,
	91, 95,
	93, 95,
	95, 95,
	160, 95,
	-2, 229,
	-1, 796,
	1, 96,
	89, 96,
	91, 96,
	93, 96,
	95, 96,
	160, 96,
	-2, 235,
	-1, 798,
	95, 6,
	-2, 216,
	-1, 804,
	169, 128,
	170, 128,
	-2, 235,
	-1, 809,
	95, 4,
	-2, 216,
	-1, 880,
	95, 6,
	-2, 216,
	-1, 881,
	95, 6,
	-2, 216,
	-1, 885,
	95, 4,
	-2, 216,
	-1, 889,
	91, 4,
	93, 4,
	95, 4,
	-2, 216,
	-1, 934,
	89, 6,
	91, 6,
	93, 6,
	95, 6,
	-2, 216,
	-1, 941,
	160, 62,
	-2, 235,
	-1, 983,
	89, 6,
	93, 6,
	95, 6,
	-2, 216,
	-1, 986,
	95, 8,
	-2, 216,
	-1, 993,
	95, 6,
	-2, 216,
	-1, 996,
	89, 4,
	93, 4,
	95, 4,
	-2, 216,
	-1, 1025,
	95, 6,
	-2, 216,
	-1, 1058,
	95, 6,
	-2, 216,
	-1, 1062,
	91, 6,
	93, 6,
	95, 6,
	-2, 216,
	-1, 1064,
	89, 8,
	91, 8,
	93, 8,
	95, 8,
	-2, 216,
	-1, 1067,
	95, 8,
	-2, 216,
	-1, 1068,
	95, 8,
	-2, 216,
	-1, 1085,
	89, 8,
	93, 8,
	95, 8,
	-2, 216,
	-1, 1090,
	95, 8,
	-2, 216,
	-1, 1091,
	95, 8,
	-2, 216,
	-1, 1096,
	89, 6,
	93, 6,
	95, 6,
	-2, 216,
	-1, 1101,
	95, 8,
	-2, 216,
	-1, 1116,
	95, 8,
	-2, 216,
	-1, 1120,
	91, 8,
	93, 8,
	95, 8,
	-2, 216,
	-1, 1149,
	89, 8,
	93, 8,
	95, 8,
	-2, 216,
}

const yyPrivate = 57344

const yyLast = 3878

var yyAct = [...]int{

	122, 21, 1115, 1086, 1127, 1057, 1114, 349, 89, 529,
	956, 984, 1056, 633, 115, 33, 954, 120, 955, 722,
	268, 27, 460, 186, 113, 382, 1001, 187, 577, 884,
	883, 516, 673, 702, 652, 757, 697, 383, 423, 467,
	26, 593, 162, 596, 669, 163, 164, 388, 167, 168,
	169, 171, 595, 175, 249, 556, 664, 347, 451, 466,
	25, 238, 237, 843, 535, 445, 65, 344, 1, 243,
	540, 180, 172, 184, 515, 539, 129, 462, 3, 393,
	234, 260, 703, 392, 221, 68, 79, 78, 247, 191,
	575, 181, 183, 292, 506, 397, 137, 414, 140, 140,
	214, 143, 230, 213, 494, 571, 1038, 213, 399, 987,
	309, 213, 490, 21, 474, 180, 214, 922, 923, 213,
	543, 149, 544, 545, 546, 538, 852, 33, 541, 141,
	924, 925, 165, 123, 298, 233, 183, 236, 468, 185,
	859, 860, 101, 791, 100, 774, 130, 773, 126, 745,
	240, 128, 26, 125, 183, 712, 127, 714, 715, 289,
	290, 686, 687, 711, 696, 201, 210, 209, 200, 199,
	202, 198, 25, 1034, 694, 688, 684, 659, 300, 603,
	600, 231, 265, 261, 93, 553, 310, 492, 413, 543,
	3, 544, 545, 546, 538, 178, 178, 541, 1027, 214,
	280, 1075, 213, 408, 314, 310, 273, 685, 310, 310,
	324, 313, 195, 310, 267, 74, 110, 1074, 205, 204,
	206, 207, 208, 205, 204, 206, 207, 208, 361, 362,
	93, 1050, 1049, 21, 678, 248, 1048, 1047, 325, 74,
	381, 134, 297, 269, 1046, 271, 1045, 33, 1020, 196,
	195, 1019, 1018, 1017, 312, 197, 205, 204, 206, 207,
	208, 1015, 1013, 130, 299, 1011, 1010, 1000, 390, 999,
	981, 978, 26, 102, 103, 104, 882, 105, 106, 107,
	108, 110, 861, 319, 437, 439, 442, 444, 447, 123,
	858, 1033, 25, 447, 452, 339, 341, 132, 452, 452,
	824, 373, 459, 325, 542, 823, 581, 870, 822, 21,
	3, 391, 387, 821, 820, 819, 815, 793, 790, 783,
	458, 272, 782, 33, 775, 744, 742, 554, 565, 741,
	740, 483, 733, 418, 472, 729, 710, 485, 486, 708,
	140, 695, 592, 411, 693, 638, 181, 183, 631, 630,
	629, 616, 587, 429, 509, 406, 456, 457, 450, 491,
	489, 416, 417, 487, 420, 477, 434, 410, 419, 374,
	430, 305, 505, 306, 304, 1014, 507, 391, 21, 1012,
	453, 454, 424, 132, 133, 527, 528, 138, 963, 962,
	961, 960, 33, 959, 533, 958, 930, 340, 914, 909,
	359, 360, 906, 904, 476, 455, 480, 479, 903, 896,
	562, 369, 101, 894, 132, 865, 689, 26, 504, 201,
	183, 488, 200, 199, 202, 198, 635, 612, 183, 574,
	552, 501, 500, 499, 566, 534, 498, 25, 111, 497,
	502, 503, 496, 495, 436, 183, 520, 206, 207, 208,
	513, 1064, 512, 435, 183, 3, 183, 409, 138, 567,
	510, 511, 590, 133, 561, 606, 235, 229, 261, 228,
	421, 218, 602, 217, 216, 215, 286, 934, 549, 284,
	605, 112, 274, 607, 178, 5, 657, 223, 1093, 907,
	837, 570, 367, 572, 573, 569, 568, 560, 905, 761,
	759, 748, 598, 196, 195, 478, 433, 613, 580, 197,
	205, 204, 206, 207, 208, 391, 634, 248, 21, 643,
	902, 653, 422, 101, 993, 21, 881, 880, 798, 183,
	276, 96, 33, 969, 828, 967, 901, 658, 900, 33,
	826, 899, 748, 102, 103, 104, 957, 105, 106, 107,
	108, 898, 558, 680, 654, 829, 182, 26, 758, 101,
	618, 827, 634, 368, 26, 897, 576, 681, 219, 825,
	818, 583, 585, 259, 220, 620, 584, 25, 637, 649,
	626, 627, 628, 275, 25, 252, 642, 526, 972, 525,
	432, 641, 1148, 646, 285, 3, 1134, 283, 1124, 663,
	182, 447, 3, 1123, 452, 655, 21, 636, 1118, 21,
	21, 1104, 672, 277, 278, 1103, 691, 671, 182, 1095,
	33, 1077, 674, 33, 33, 1071, 683, 1063, 720, 1060,
	995, 724, 725, 992, 183, 991, 945, 1091, 676, 933,
	893, 743, 892, 887, 812, 682, 650, 811, 751, 756,
	1149, 640, 604, 93, 102, 103, 104, 690, 105, 106,
	107, 108, 718, 521, 519, 692, 716, 533, 1117, 760,
	1090, 1068, 1116, 1120, 1067, 705, 986, 621, 622, 623,
	624, 625, 738, 727, 1059, 886, 145, 764, 1058, 885,
	102, 103, 104, 726, 105, 106, 107, 108, 609, 576,
	608, 308, 734, 735, 736, 737, 739, 753, 796, 754,
	1116, 576, 518, 1101, 804, 1058, 517, 771, 1025, 576,
	762, 885, 21, 101, 810, 787, 809, 21, 21, 576,
	93, 776, 517, 379, 786, 1096, 33, 377, 1085, 144,
	777, 33, 33, 780, 807, 146, 1062, 765, 767, 813,
	814, 996, 983, 21, 634, 800, 381, 806, 889, 830,
	752, 721, 524, 232, 801, 802, 1151, 33, 779, 147,
	1098, 772, 1087, 156, 157, 855, 998, 985, 598, 803,
	781, 755, 598, 723, 375, 785, 239, 1141, 1140, 841,
	1122, 835, 26, 1121, 1083, 836, 952, 183, 951, 21,
	891, 890, 719, 1117, 203, 183, 853, 1059, 183, 886,
	21, 182, 25, 33, 518, 1155, 1147, 1112, 1094, 183,
	1041, 834, 1110, 994, 33, 868, 833, 867, 750, 558,
	3, 1138, 888, 1081, 576, 949, 644, 1146, 1132, 576,
	154, 155, 158, 159, 1157, 788, 789, 1128, 1128, 847,
	849, 1144, 1145, 674, 102, 103, 104, 1143, 105, 106,
	107, 108, 842, 1131, 846, 634, 910, 912, 1130, 676,
	926, 911, 634, 747, 1053, 935, 872, 931, 74, 937,
	941, 21, 21, 183, 182, 921, 21, 948, 266, 223,
	21, 1108, 555, 936, 222, 33, 33, 1021, 1109, 928,
	33, 1111, 939, 863, 33, 1142, 940, 856, 947, 579,
	915, 916, 950, 415, 965, 946, 183, 965, 588, 98,
	591, 966, 964, 1153, 1126, 968, 1129, 1129, 74, 322,
	1039, 919, 674, 321, 323, 21, 971, 634, 632, 988,
	475, 927, 979, 973, 917, 938, 918, 311, 676, 33,
	364, 74, 263, 74, 363, 862, 932, 74, 872, 872,
	784, 74, 366, 365, 990, 329, 328, 262, 263, 264,
	997, 293, 877, 287, 965, 1004, 1005, 1006, 1007, 1008,
	670, 974, 1009, 851, 21, 770, 1026, 21, 99, 844,
	845, 769, 668, 182, 21, 667, 385, 21, 33, 810,
	1043, 33, 1003, 183, 976, 666, 977, 989, 33, 386,
	576, 33, 872, 384, 385, 543, 975, 544, 545, 1042,
	832, 980, 661, 662, 1044, 965, 21, 665, 536, 1051,
	634, 241, 1065, 1052, 543, 1055, 544, 545, 546, 1002,
	33, 80, 183, 707, 706, 101, 294, 372, 713, 704,
	1066, 533, 136, 1073, 877, 877, 839, 840, 135, 21,
	1080, 872, 634, 21, 1029, 21, 121, 1076, 21, 21,
	1078, 872, 1072, 33, 194, 576, 944, 33, 816, 33,
	805, 799, 33, 33, 797, 424, 21, 709, 1102, 601,
	876, 21, 21, 173, 1097, 493, 448, 21, 728, 1026,
	33, 258, 21, 872, 307, 33, 33, 245, 877, 246,
	389, 33, 179, 407, 244, 428, 33, 21, 1137, 1133,
	1016, 21, 1135, 211, 212, 1035, 647, 245, 425, 426,
	412, 33, 124, 225, 226, 33, 872, 427, 296, 295,
	872, 291, 1029, 1150, 94, 1029, 1029, 1154, 96, 94,
	21, 96, 1102, 93, 190, 449, 179, 877, 193, 1158,
	66, 121, 67, 1029, 33, 139, 1100, 877, 1029, 1029,
	1024, 808, 876, 876, 872, 173, 102, 103, 104, 1029,
	105, 106, 107, 108, 698, 699, 700, 701, 942, 943,
	376, 101, 10, 9, 1029, 557, 148, 150, 1029, 877,
	8, 7, 378, 1035, 62, 345, 1035, 1035, 346, 395,
	543, 394, 544, 545, 546, 538, 396, 252, 541, 400,
	302, 402, 250, 253, 1035, 1152, 876, 1029, 1125, 1035,
	1035, 1107, 877, 1092, 88, 61, 877, 316, 317, 318,
	1035, 320, 982, 60, 327, 64, 330, 331, 332, 333,
	334, 335, 336, 57, 63, 1035, 173, 342, 348, 1035,
	101, 857, 58, 1084, 838, 660, 1088, 1089, 531, 864,
	877, 370, 866, 530, 56, 876, 192, 173, 656, 651,
	648, 380, 242, 869, 1099, 876, 111, 6, 1035, 1105,
	1106, 1023, 20, 19, 69, 153, 17, 597, 594, 16,
	1119, 1040, 446, 15, 14, 11, 18, 348, 13, 12,
	101, 1030, 873, 1028, 173, 1136, 431, 876, 871, 1139,
	463, 461, 102, 103, 104, 4, 254, 255, 256, 257,
	403, 404, 405, 1061, 2, 396, 252, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 0, 929, 1156, 59,
	876, 0, 0, 0, 876, 398, 0, 0, 0, 0,
	0, 0, 0, 482, 101, 484, 1079, 173, 0, 0,
	1082, 0, 0, 0, 0, 0, 0, 131, 0, 0,
	953, 0, 173, 0, 0, 0, 74, 0, 876, 396,
	252, 102, 103, 104, 0, 105, 106, 107, 108, 0,
	0, 173, 173, 0, 1113, 0, 0, 0, 0, 0,
	0, 173, 0, 0, 0, 0, 0, 380, 0, 0,
	0, 522, 0, 0, 675, 0, 0, 0, 532, 0,
	0, 537, 0, 0, 0, 0, 0, 83, 0, 0,
	224, 102, 103, 104, 0, 254, 255, 256, 257, 403,
	404, 405, 0, 0, 201, 210, 209, 200, 199, 202,
	198, 0, 0, 0, 0, 0, 0, 1022, 0, 0,
	142, 0, 0, 0, 398, 151, 152, 0, 160, 161,
	0, 0, 0, 0, 166, 0, 0, 0, 170, 0,
	174, 101, 176, 177, 0, 102, 103, 104, 0, 254,
	255, 256, 257, 403, 404, 405, 1054, 121, 201, 210,
	209, 200, 199, 202, 198, 0, 0, 252, 0, 0,
	0, 201, 210, 614, 200, 199, 202, 198, 398, 0,
	0, 0, 617, 131, 348, 227, 173, 0, 196, 195,
	0, 173, 173, 173, 197, 205, 204, 206, 207, 208,
	0, 326, 303, 299, 0, 543, 639, 544, 545, 546,
	538, 844, 845, 541, 251, 645, 251, 0, 0, 326,
	326, 0, 251, 270, 251, 0, 0, 0, 0, 0,
	0, 0, 279, 251, 281, 282, 0, 0, 0, 0,
	0, 288, 196, 195, 0, 401, 0, 0, 197, 205,
	204, 206, 207, 208, 101, 196, 195, 831, 0, 401,
	0, 197, 205, 204, 206, 207, 208, 0, 0, 0,
	101, 0, 102, 103, 104, 0, 105, 106, 107, 108,
	252, 315, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 396, 252, 0, 0, 0,
	0, 337, 0, 0, 351, 101, 0, 730, 0, 0,
	0, 0, 0, 173, 173, 173, 173, 173, 371, 101,
	0, 0, 326, 0, 0, 0, 0, 746, 326, 326,
	920, 0, 0, 251, 251, 201, 210, 209, 200, 199,
	202, 198, 0, 551, 0, 0, 251, 251, 0, 0,
	0, 532, 0, 351, 0, 0, 0, 763, 173, 0,
	0, 0, 732, 326, 508, 508, 508, 0, 0, 0,
	0, 438, 440, 441, 443, 0, 0, 778, 0, 173,
	0, 74, 0, 0, 251, 102, 103, 104, 0, 254,
	255, 256, 257, 0, 0, 0, 792, 471, 401, 473,
	0, 102, 103, 104, 0, 254, 255, 256, 257, 403,
	404, 405, 401, 0, 131, 380, 131, 131, 0, 196,
	195, 0, 0, 0, 817, 197, 205, 204, 206, 207,
	208, 0, 0, 731, 398, 0, 102, 103, 104, 101,
	105, 106, 107, 108, 0, 0, 0, 0, 0, 0,
	102, 103, 104, 0, 105, 106, 107, 108, 0, 0,
	0, 101, 75, 76, 77, 0, 98, 0, 93, 96,
	94, 95, 0, 71, 351, 0, 0, 0, 0, 0,
	0, 0, 547, 0, 117, 0, 251, 111, 0, 550,
	0, 0, 0, 0, 0, 559, 251, 563, 0, 0,
	251, 251, 0, 0, 0, 0, 0, 326, 0, 559,
	578, 0, 0, 582, 559, 559, 586, 0, 0, 0,
	589, 578, 0, 908, 599, 0, 0, 90, 101, 0,
	338, 91, 0, 0, 0, 99, 913, 0, 0, 0,
	0, 0, 401, 0, 119, 116, 0, 0, 0, 0,
	0, 0, 173, 326, 97, 0, 0, 0, 0, 0,
	0, 101, 610, 611, 0, 0, 578, 121, 0, 0,
	102, 103, 104, 0, 105, 106, 107, 108, 0, 0,
	351, 619, 0, 0, 0, 548, 0, 0, 0, 0,
	353, 0, 102, 103, 104, 0, 105, 106, 107, 108,
	0, 0, 0, 110, 84, 354, 85, 352, 355, 356,
	357, 358, 0, 0, 0, 173, 0, 173, 0, 81,
	82, 350, 0, 0, 92, 70, 343, 0, 0, 0,
	251, 0, 326, 0, 0, 0, 677, 0, 0, 679,
	0, 0, 559, 0, 0, 0, 0, 201, 210, 209,
	200, 199, 202, 198, 559, 0, 0, 0, 0, 102,
	103, 104, 559, 105, 106, 107, 108, 401, 401, 582,
	0, 0, 559, 0, 0, 401, 0, 380, 101, 75,
	76, 77, 0, 98, 0, 93, 96, 94, 95, 717,
	71, 0, 102, 103, 104, 173, 105, 106, 107, 108,
	0, 117, 0, 0, 111, 0, 201, 210, 209, 200,
	199, 202, 198, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 121, 0, 0, 0, 0, 0,
	0, 196, 195, 0, 0, 532, 0, 197, 205, 204,
	206, 207, 208, 0, 90, 326, 514, 351, 91, 0,
	0, 0, 99, 0, 0, 251, 251, 0, 0, 0,
	0, 119, 116, 0, 0, 0, 401, 0, 401, 401,
	401, 97, 559, 401, 0, 0, 251, 559, 0, 380,
	0, 0, 559, 0, 578, 0, 0, 0, 559, 559,
	196, 195, 0, 0, 794, 795, 197, 205, 204, 206,
	207, 208, 0, 0, 0, 299, 0, 353, 0, 102,
	103, 104, 0, 105, 106, 107, 108, 0, 0, 0,
	110, 84, 354, 85, 352, 355, 356, 357, 358, 0,
	0, 0, 0, 0, 0, 0, 81, 82, 350, 0,
	0, 92, 70, 0, 0, 0, 0, 0, 401, 0,
	401, 401, 401, 0, 0, 0, 326, 251, 251, 0,
	0, 251, 854, 326, 201, 210, 209, 200, 199, 202,
	198, 0, 0, 0, 0, 0, 0, 0, 0, 582,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 0, 0, 326, 0,
	0, 0, 201, 210, 209, 200, 199, 202, 198, 251,
	251, 0, 0, 0, 0, 0, 0, 0, 196, 195,
	0, 0, 0, 559, 197, 205, 204, 206, 207, 208,
	0, 0, 970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 101, 75, 76, 77, 0,
	98, 0, 93, 96, 94, 95, 22, 71, 0, 0,
	0, 35, 36, 0, 0, 0, 0, 0, 28, 0,
	0, 111, 578, 29, 44, 0, 30, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 196, 195, 559, 0,
	0, 326, 197, 205, 204, 206, 207, 208, 0, 0,
	895, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 90, 0, 0, 0, 91, 0, 0, 0, 99,
	0, 74, 0, 326, 101, 0, 0, 0, 1032, 1031,
	0, 878, 0, 0, 0, 0, 0, 32, 97, 0,
	39, 37, 38, 34, 40, 1036, 1037, 0, 0, 396,
	252, 0, 42, 43, 469, 470, 0, 47, 48, 49,
	50, 41, 52, 53, 54, 45, 51, 55, 0, 0,
	0, 879, 0, 0, 31, 46, 102, 103, 104, 0,
	105, 106, 107, 108, 850, 0, 0, 110, 84, 87,
	85, 86, 109, 0, 0, 0, 1069, 1070, 0, 0,
	0, 351, 0, 81, 82, 0, 0, 0, 92, 70,
	101, 75, 76, 77, 0, 98, 0, 93, 96, 94,
	95, 22, 71, 0, 0, 0, 35, 36, 0, 0,
	0, 0, 0, 28, 0, 0, 111, 0, 29, 44,
	0, 30, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 102, 103, 104, 0, 254,
	255, 256, 257, 403, 404, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 90, 0, 0, 0,
	91, 0, 0, 0, 99, 0, 74, 0, 398, 101,
	0, 0, 0, 465, 464, 0, 72, 0, 0, 0,
	0, 0, 32, 97, 0, 39, 37, 38, 34, 40,
	0, 0, 0, 0, 396, 252, 0, 42, 43, 469,
	470, 73, 47, 48, 49, 50, 41, 52, 53, 54,
	45, 51, 55, 0, 0, 0, 0, 0, 0, 31,
	46, 102, 103, 104, 0, 105, 106, 107, 108, 848,
	0, 0, 110, 84, 87, 85, 86, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 82,
	0, 0, 0, 92, 70, 101, 75, 76, 77, 0,
	98, 0, 93, 96, 94, 95, 22, 71, 0, 0,
	0, 35, 36, 0, 0, 0, 0, 0, 28, 0,
	0, 111, 0, 29, 44, 0, 30, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	102, 103, 104, 0, 254, 255, 256, 257, 403, 404,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 90, 0, 0, 0, 91, 0, 0, 0, 99,
	0, 74, 0, 398, 101, 0, 0, 0, 875, 874,
	0, 878, 0, 0, 0, 0, 0, 32, 97, 0,
	39, 37, 38, 34, 40, 0, 0, 0, 0, 396,
	252, 0, 42, 43, 0, 0, 0, 47, 48, 49,
	50, 41, 52, 53, 54, 45, 51, 55, 0, 0,
	0, 879, 0, 0, 31, 46, 102, 103, 104, 0,
	105, 106, 107, 108, 768, 0, 0, 110, 84, 87,
	85, 86, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 81, 82, 0, 0, 0, 92, 70,
	101, 75, 76, 77, 0, 98, 0, 93, 96, 94,
	95, 22, 71, 0, 0, 0, 35, 36, 0, 0,
	0, 0, 0, 28, 0, 0, 111, 0, 29, 44,
	0, 30, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 102, 103, 104, 0, 254,
	255, 256, 257, 403, 404, 405, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 90, 0, 0, 0,
	91, 0, 0, 0, 99, 0, 74, 0, 398, 101,
	0, 0, 0, 24, 23, 0, 72, 0, 0, 0,
	0, 0, 32, 97, 0, 39, 37, 38, 34, 40,
	0, 0, 0, 0, 396, 252, 0, 42, 43, 0,
	0, 73, 47, 48, 49, 50, 41, 52, 53, 54,
	45, 51, 55, 0, 0, 0, 0, 0, 0, 31,
	46, 102, 103, 104, 0, 105, 106, 107, 108, 766,
	0, 0, 110, 84, 87, 85, 86, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 81, 82,
	0, 0, 0, 92, 70, 101, 75, 76, 77, 0,
	98, 0, 93, 96, 94, 95, 0, 71, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 117, 0,
	0, 111, 201, 210, 209, 200, 199, 202, 198, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	102, 103, 104, 0, 254, 255, 256, 257, 403, 404,
	405, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 90, 0, 0, 0, 91, 0, 0, 0, 99,
	0, 0, 0, 398, 0, 0, 0, 0, 119, 116,
	0, 0, 101, 75, 76, 77, 0, 98, 97, 93,
	96, 94, 95, 0, 71, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 117, 196, 195, 111, 0,
	0, 0, 197, 205, 204, 206, 207, 208, 0, 0,
	749, 0, 0, 0, 353, 0, 102, 103, 104, 0,
	105, 106, 107, 108, 0, 0, 0, 110, 84, 354,
	85, 352, 355, 356, 357, 358, 0, 0, 90, 0,
	0, 0, 91, 81, 82, 0, 99, 0, 92, 70,
	0, 0, 0, 0, 0, 119, 116, 0, 0, 0,
	0, 0, 0, 0, 189, 97, 0, 101, 75, 76,
	77, 0, 98, 0, 93, 96, 94, 95, 0, 71,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 0, 0, 111, 0, 0, 0, 0, 0, 0,
	0, 188, 0, 102, 103, 104, 0, 105, 106, 107,
	108, 0, 0, 0, 110, 84, 87, 85, 86, 109,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	81, 82, 0, 90, 0, 92, 70, 91, 0, 0,
	0, 99, 0, 0, 0, 0, 0, 0, 0, 0,
	119, 116, 0, 0, 101, 75, 76, 77, 0, 98,
	97, 93, 96, 94, 95, 0, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 117, 0, 0,
	111, 0, 0, 0, 0, 0, 201, 210, 209, 200,
	199, 202, 198, 0, 0, 0, 118, 0, 102, 103,
	104, 0, 105, 106, 107, 108, 375, 0, 0, 110,
	84, 87, 85, 86, 109, 0, 0, 0, 0, 0,
	90, 0, 0, 0, 91, 81, 82, 350, 99, 266,
	92, 70, 0, 0, 0, 0, 0, 119, 116, 0,
	0, 0, 0, 0, 0, 0, 0, 97, 0, 101,
	75, 76, 77, 0, 98, 0, 93, 96, 94, 95,
	0, 71, 0, 0, 0, 0, 0, 0, 0, 0,
	196, 195, 117, 0, 0, 111, 197, 205, 204, 206,
	207, 208, 0, 118, 0, 102, 103, 104, 0, 105,
	106, 107, 108, 0, 0, 0, 110, 84, 87, 85,
	86, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 81, 82, 0, 90, 0, 92, 70, 91,
	0, 0, 0, 99, 0, 74, 0, 0, 0, 0,
	0, 0, 119, 116, 0, 0, 101, 75, 76, 77,
	0, 98, 97, 93, 96, 94, 95, 0, 71, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 117,
	0, 0, 111, 0, 0, 0, 0, 201, 210, 209,
	200, 199, 202, 198, 0, 0, 0, 0, 118, 0,
	102, 103, 104, 0, 105, 106, 107, 108, 523, 0,
	0, 110, 84, 87, 85, 86, 109, 0, 0, 0,
	0, 0, 90, 0, 0, 0, 91, 81, 82, 0,
	99, 0, 92, 70, 0, 0, 0, 0, 0, 119,
	116, 0, 0, 101, 75, 76, 77, 0, 98, 97,
	93, 96, 94, 95, 0, 71, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 117, 0, 0, 111,
	0, 196, 195, 0, 0, 0, 0, 197, 205, 204,
	206, 207, 208, 0, 0, 118, 0, 102, 103, 104,
	0, 105, 106, 107, 108, 0, 0, 0, 110, 84,
	87, 85, 86, 109, 0, 0, 0, 0, 0, 90,
	0, 0, 0, 91, 81, 82, 0, 99, 0, 92,
	70, 0, 0, 0, 0, 0, 119, 116, 0, 0,
	101, 75, 76, 77, 0, 98, 97, 93, 96, 94,
	95, 0, 71, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 117, 0, 0, 564, 201, 210, 209,
	200, 199, 202, 198, 0, 0, 0, 0, 0, 0,
	0, 0, 118, 0, 102, 103, 104, 0, 105, 106,
	107, 108, 0, 0, 0, 110, 84, 87, 85, 86,
	109, 0, 0, 0, 0, 0, 90, 0, 0, 0,
	91, 81, 82, 0, 99, 0, 92, 114, 0, 0,
	0, 0, 0, 119, 116, 0, 0, 101, 75, 301,
	77, 0, 98, 97, 93, 96, 94, 95, 0, 71,
	201, 615, 209, 200, 199, 202, 198, 0, 0, 0,
	117, 196, 195, 111, 0, 0, 0, 197, 205, 204,
	206, 207, 208, 0, 0, 0, 0, 0, 0, 118,
	0, 102, 103, 104, 0, 105, 106, 107, 108, 0,
	0, 0, 110, 84, 87, 85, 86, 109, 0, 0,
	0, 0, 0, 90, 0, 0, 0, 91, 81, 82,
	0, 99, 0, 92, 70, 0, 0, 0, 0, 0,
	119, 116, 201, 481, 209, 200, 199, 202, 198, 0,
	97, 0, 0, 0, 196, 195, 0, 0, 0, 0,
	197, 205, 204, 206, 207, 208, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 118, 0, 102, 103,
	104, 0, 105, 106, 107, 108, 0, 0, 0, 110,
	84, 87, 85, 86, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 81, 82, 0, 0, 0,
	92, 70, 0, 0, 0, 0, 196, 195, 0, 0,
	0, 0, 197, 205, 204, 206, 207, 208,
}
var yyPact = [...]int{

	2816, -1000, 321, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3519, 3432, -1000, -1000, 129, 216, 1022,
	1016, 219, 719, -1000, 642, 1136, 1131, 1785, 1785, 736,
	1785, 3432, -1000, -1000, 3432, 3432, 519, 3432, 3432, 3432,
	3432, 3432, 3432, -1000, 1785, 1785, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 327, -1000, -1000, -1000, -1000,
	3345, -1000, 3068, 1148, 1043, -1000, -1000, -1000, -1000, -1000,
	3566, 3432, 3432, -68, 307, 306, 305, 303, -1000, 413,
	215, 3432, 3432, -1000, -1000, -1000, -1000, 1785, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 301,
	299, -69, 2816, 671, 3345, -1000, 298, 295, 290, 3432,
	695, 3566, -1000, 986, 1089, 1084, 1600, 1076, 555, 902,
	809, -1000, 798, 3432, 1600, 1785, 1600, -1000, 809, 36,
	325, -1000, 486, -1000, 1785, 1487, 1785, 1785, 436, 433,
	-1000, 911, -1000, 1785, -1000, -1000, -1000, -1000, 3432, 3432,
	1123, 31, 909, 1003, 1121, -1000, 1120, -1000, -1000, 72,
	-68, -1000, -1000, 1985, -68, -1000, -1000, 3693, 3432, 1383,
	205, 202, 204, 246, 607, 39, 876, 1142, 290, -1000,
	-1000, -1000, 34, 1785, -1000, 3432, 3432, 3432, 815, 3432,
	858, 70, 3432, 897, 3432, 3432, 3432, 3432, 3432, 3432,
	3432, -1000, -1000, 1874, 3250, 3432, 1807, 809, 809, 70,
	70, 879, 894, -1000, -1000, 348, -1000, 415, 809, 3432,
	1041, -1000, 2816, 202, 200, 3432, 693, 644, 640, 3432,
	962, 961, 1109, 1087, 1142, 1187, 1600, 1093, 33, -1000,
	-1000, -1000, -1000, 289, -1000, -1000, -1000, -1000, 1600, 1187,
	1112, 18, 845, 845, 845, 2024, -1000, 199, -1000, 302,
	354, 1095, 3432, 1142, 3432, 492, 338, 285, 276, -1000,
	-1000, -1000, -1000, 3432, 3432, 3432, 3432, 3432, 1071, -1000,
	-1000, 1150, 3432, 3432, 1139, 1139, 1600, 3432, 3432, 3432,
	-1000, 3432, 3566, -1000, -1000, -1000, -1000, 1109, 2486, 1785,
	1142, 1785, 43, 869, 1043, 337, 61, 56, 56, 910,
	3711, 3432, 70, 3432, -1000, 3345, -1000, 56, 70, 70,
	283, 283, -1000, -1000, -1000, 1450, 348, -1000, -1000, 194,
	3432, 191, 94, -1000, 190, 17, 1067, -1000, 3566, -1000,
	-1000, -64, 275, 274, 271, 268, 265, 264, 263, 3432,
	3163, -1000, -1000, 70, 208, 208, 208, 815, -1000, 3432,
	1926, -1000, -1000, 623, -1000, 3432, 569, 2816, 568, 3432,
	3396, 670, 491, 488, 3432, 3432, 2981, 1087, 982, 3432,
	-1000, 16, -1000, 134, 1907, -1000, -1000, -1000, 1306, -1000,
	-1000, 1665, 262, -1000, -1000, -1000, 159, 1256, 1600, 3606,
	266, 1087, 1187, 1487, 246, -1000, 246, 246, -1000, -1000,
	261, 1256, 1785, 798, -1000, 138, 408, 1256, 1785, 183,
	-1000, 3566, 1651, 1785, 798, 173, 1785, -1000, -68, -1000,
	-68, -68, -1000, -68, -1000, -1000, 10, 1061, 1142, -1000,
	-1000, -1000, 9, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	557, 320, -1000, -1000, 3519, 3432, -1000, -1000, -1000, -1000,
	-1000, 606, -1000, 604, 1785, 1785, -1000, 259, 1785, -1000,
	-1000, 3432, 3639, -1000, 56, -1000, -1000, -1000, 182, -1000,
	3432, -1000, 2024, 1785, 3250, 809, 809, 809, 809, 3432,
	3432, 3432, 181, 180, 179, 866, -1000, 135, -1000, 258,
	-1000, -1000, 507, 176, 3432, 556, 639, 2816, 3432, 749,
	-1000, -1000, 3566, 3432, 2816, 1107, 542, 468, 400, -1000,
	7, 973, 3566, -1000, 982, 980, 957, 3566, 941, 938,
	924, 979, 1360, -1000, -1000, -1000, -1000, -1000, 1785, 65,
	-1000, 1785, 3432, 70, 1256, -1000, 1109, 6, 46, -60,
	-1000, -8, 5, -68, -69, 248, 1256, -1000, 1087, -1000,
	886, -1000, -1000, 886, 1256, 175, 4, 172, -6, -1000,
	1147, 1785, 1008, -1000, 1256, 1001, 1000, -1000, -1000, -1000,
	170, -1000, 1059, 167, -7, -1000, -1000, -15, 1007, -12,
	3432, 1785, -1000, 3432, 712, 2486, 669, 692, 2486, 2486,
	599, 589, 798, 166, 348, 3432, -1000, 1614, -1000, -1000,
	163, 3432, 3432, 3432, 3163, 3432, 161, 160, 157, -1000,
	-1000, -1000, 70, 156, -21, 3432, -1000, 792, 369, 2941,
	740, 553, -1000, 668, -1000, 3215, 690, -1000, 3432, -1000,
	-1000, 420, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2981,
	363, -1000, -1000, 980, -1000, 3432, 3432, 2895, 2730, 937,
	-1000, 931, 924, -1000, 1155, 215, -23, -1000, -1000, -1000,
	-25, -1000, 155, 1087, 1256, 3432, -1000, 3432, 1487, 1256,
	153, -1000, 150, 898, 1256, 1057, 1785, -1000, -1000, -1000,
	1256, 1256, 149, -27, 3432, 148, 1785, 3432, 1056, 399,
	1053, 1142, 1142, 3432, 1052, 1142, -1000, -1000, -1000, -1000,
	-1000, 2486, 633, 3432, 552, 549, 2486, 2486, 147, 1050,
	348, -1000, 3432, 460, 146, 145, 144, 139, 136, 131,
	459, 430, 424, -1000, -1000, 70, 1437, -1000, 974, -1000,
	-1000, 738, 2816, -1000, -1000, 3432, 468, 944, -1000, 355,
	-1000, 1019, 986, 3566, -1000, 960, 215, 1500, 215, 2565,
	2400, 929, -44, 1360, 3432, 881, -1000, -1000, 3566, 121,
	-29, 113, 893, 877, 247, -1000, 798, -1000, -1000, -1000,
	1147, 1785, 3566, -1000, -1000, -68, -1000, 798, 2651, 398,
	-1000, -1000, -1000, 1007, -1000, 397, 107, 596, 548, 2486,
	666, 711, 710, 547, 545, -1000, 245, 2211, 241, 455,
	441, 431, 428, 426, 410, 240, 235, 362, 234, 353,
	-1000, 3432, 231, -1000, 725, 420, -1000, -1000, -1000, -1000,
	-1000, 962, -1000, -1000, 3432, 230, 928, 1500, 215, 960,
	215, 1616, 1360, -1000, -52, -39, 70, -1000, -1000, -1000,
	3432, 873, 228, 70, -1000, 1256, -1000, -1000, -1000, -1000,
	544, 317, -1000, -1000, 3519, 3432, -1000, -1000, 3068, 3432,
	2651, 2651, 1048, 541, 628, 2486, 3432, 748, -1000, 2486,
	-1000, -1000, 708, 706, 798, -1000, 437, 227, 225, 223,
	222, 221, 220, 437, 437, 425, 437, 423, 2143, 986,
	-1000, -1000, 490, 3566, 1785, -1000, -1000, 928, -1000, 960,
	215, -1000, -1000, 3432, -1000, 3432, -1000, 102, 70, -1000,
	1256, -1000, 101, -1000, 2651, 660, 686, 582, 38, 868,
	1142, -1000, 540, 538, 395, 735, 535, -1000, 659, -1000,
	685, -1000, -1000, 100, 98, -1000, 994, 954, 437, 437,
	437, 437, 437, 437, 97, 986, 96, 211, 93, 207,
	-1000, 92, 1101, 84, -1000, -1000, 83, 82, -1000, -1000,
	79, 871, -1000, 2651, 625, 3432, 2321, 1785, 1785, 35,
	859, -1000, -1000, 2651, -1000, 732, 2486, -1000, 3432, -1000,
	-1000, -1000, 952, 3432, 77, 75, 68, 67, 63, 62,
	-1000, -1000, 437, -1000, 437, -1000, -1000, -1000, -1000, -1000,
	848, 70, -1000, 595, 534, 2651, 654, 532, 291, -1000,
	-1000, 3519, 3432, -1000, -1000, -1000, 580, 577, 1785, 1785,
	530, -1000, 720, 2981, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 48, 32, 70, -1000, -1000, 526, 622, 2651, 3432,
	746, -1000, 2651, 704, 2321, 646, 681, 2321, 2321, 576,
	543, -1000, -1000, 351, -1000, -1000, -1000, 730, 524, -1000,
	643, -1000, 679, -1000, -1000, 2321, 620, 3432, 520, 516,
	2321, 2321, -1000, 816, -1000, 729, 2651, -1000, 3432, 579,
	513, 2321, 581, 703, 700, 508, 503, -1000, 842, 785,
	780, 752, -1000, 718, 501, 617, 2321, 3432, 744, -1000,
	2321, -1000, -1000, 698, 697, 833, 774, -1000, 768, 751,
	-1000, -1000, -1000, -1000, 728, 497, -1000, 558, -1000, 675,
	-1000, -1000, 841, -1000, -1000, -1000, -1000, -1000, 727, 2321,
	-1000, 3432, -1000, 760, -1000, -1000, 714, -1000, -1000,
}
var yyPgo = [...]int{

	0, 68, 22, 307, 198, 77, 138, 1334, 59, 27,
	39, 1325, 1321, 1320, 1318, 291, 173, 1313, 1312, 1311,
	1309, 1308, 1306, 1305, 82, 33, 36, 1304, 1303, 1302,
	65, 1299, 43, 1298, 1297, 52, 41, 1296, 1295, 1294,
	1293, 1292, 485, 1287, 105, 76, 1104, 1282, 69, 47,
	64, 56, 26, 25, 35, 1280, 1279, 34, 1278, 37,
	21, 1276, 89, 1274, 87, 86, 144, 1041, 0, 57,
	8, 13, 9, 1273, 1268, 1265, 1264, 1349, 1262, 94,
	1254, 1253, 1245, 80, 1243, 1235, 1234, 7, 18, 16,
	10, 1233, 1231, 4, 1228, 1225, 54, 1223, 1222, 1221,
	1219, 108, 81, 88, 1211, 95, 32, 79, 1209, 63,
	1208, 1205, 1204, 17, 61, 1202, 90, 20, 58, 83,
	28, 67, 1201, 1200, 1195, 55, 1193, 1192, 31, 74,
	29, 30, 5, 12, 2, 6, 62, 1190, 19, 1171,
	11, 1170, 3, 1166, 1437, 66, 23, 14, 1165, 96,
	1160, 1162, 85, 182, 84, 75, 44, 70, 97, 1158,
	38, 804,
}
var yyR1 = [...]int{

	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 6, 6,
	7, 7, 8, 8, 8, 8, 8, 9, 9, 10,
	10, 12, 12, 11, 11, 11, 11, 11, 13, 13,
	13, 13, 13, 13, 14, 14, 15, 15, 15, 15,
	15, 16, 16, 17, 17, 18, 18, 18, 18, 18,
	19, 19, 19, 19, 19, 19, 20, 20, 20, 20,
	21, 21, 21, 21, 21, 22, 22, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 24, 24, 25,
	25, 26, 26, 26, 26, 26, 27, 27, 27, 27,
	27, 27, 27, 28, 28, 28, 28, 29, 29, 30,
	30, 31, 31, 31, 31, 32, 33, 33, 34, 35,
	35, 36, 36, 36, 37, 37, 37, 37, 37, 38,
	38, 38, 38, 38, 38, 38, 39, 39, 39, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 41, 41, 41, 42, 42, 43, 43,
	44, 44, 44, 44, 45, 45, 46, 47, 48, 48,
	49, 49, 50, 50, 51, 51, 52, 52, 53, 53,
	53, 54, 54, 54, 55, 55, 56, 56, 57, 57,
	57, 58, 58, 58, 59, 59, 60, 60, 61, 61,
	62, 62, 63, 63, 63, 63, 63, 64, 65, 66,
	66, 66, 66, 66, 67, 67, 67, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 69, 70, 70, 70, 71, 71,
	72, 72, 73, 73, 74, 74, 75, 75, 75, 76,
	76, 77, 78, 79, 79, 79, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 81, 81, 81, 81, 81,
	81, 81, 82, 82, 82, 82, 83, 83, 84, 84,
	84, 84, 84, 84, 84, 84, 85, 85, 85, 85,
	85, 85, 86, 86, 87, 87, 87, 87, 87, 87,
	87, 87, 87, 87, 87, 87, 88, 89, 89, 90,
	90, 91, 91, 92, 92, 92, 93, 93, 93, 94,
	94, 95, 95, 96, 96, 97, 97, 97, 97, 99,
	99, 99, 98, 98, 98, 98, 100, 100, 100, 100,
	101, 101, 104, 104, 105, 105, 105, 106, 106, 106,
	106, 107, 107, 107, 107, 107, 107, 107, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 109, 109,
	110, 110, 111, 111, 111, 112, 113, 113, 114, 114,
	115, 115, 116, 116, 117, 117, 118, 118, 119, 119,
	102, 102, 103, 103, 120, 120, 121, 121, 122, 122,
	122, 122, 123, 124, 125, 125, 126, 126, 126, 126,
	126, 126, 126, 126, 127, 127, 128, 128, 129, 129,
	130, 130, 131, 131, 132, 132, 133, 133, 134, 134,
	135, 135, 136, 136, 137, 137, 138, 138, 139, 139,
	140, 140, 141, 141, 142, 142, 143, 143, 144, 144,
	144, 144, 144, 144, 144, 144, 145, 146, 146, 147,
	148, 148, 149, 149, 150, 151, 152, 153, 153, 154,
	154, 155, 155, 156, 156, 157, 157, 157, 158, 158,
	159, 159, 160, 160, 161, 161,
}
var yyR2 = [...]int{

	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 8, 8, 9, 9, 1, 1, 1,
	2, 1, 1, 7, 8, 6, 1, 1, 7, 8,
	6, 1, 1, 1, 1, 1, 6, 8, 8, 9,
	9, 1, 2, 1, 1, 7, 8, 6, 1, 1,
	7, 8, 6, 1, 1, 1, 2, 2, 1, 2,
	4, 4, 4, 4, 2, 1, 1, 6, 8, 5,
	6, 8, 5, 7, 7, 7, 7, 1, 3, 1,
	3, 0, 1, 1, 2, 2, 5, 5, 2, 4,
	2, 3, 5, 6, 8, 5, 3, 1, 3, 1,
	3, 4, 2, 4, 3, 1, 1, 3, 3, 1,
	3, 1, 1, 3, 9, 10, 10, 12, 3, 0,
	1, 1, 1, 1, 2, 2, 5, 6, 3, 4,
	4, 4, 4, 4, 4, 2, 2, 2, 2, 4,
	4, 2, 2, 2, 4, 1, 2, 2, 4, 2,
	2, 1, 2, 2, 3, 4, 4, 6, 9, 11,
	5, 4, 4, 4, 1, 1, 3, 2, 0, 2,
	0, 2, 0, 3, 0, 2, 0, 3, 1, 6,
	5, 0, 1, 2, 1, 1, 0, 1, 1, 1,
	1, 0, 1, 1, 0, 3, 0, 2, 6, 9,
	1, 3, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 1, 3, 1, 6, 1, 3,
	1, 3, 2, 4, 1, 1, 0, 1, 1, 1,
	1, 3, 3, 3, 1, 6, 3, 3, 3, 3,
	4, 4, 5, 6, 6, 3, 4, 4, 3, 4,
	4, 4, 4, 4, 2, 3, 3, 3, 3, 3,
	2, 2, 3, 3, 2, 2, 0, 1, 4, 4,
	6, 8, 3, 4, 4, 4, 5, 5, 5, 5,
	5, 1, 5, 10, 8, 9, 9, 9, 9, 9,
	9, 8, 8, 10, 8, 10, 2, 1, 5, 0,
	3, 2, 5, 2, 2, 2, 2, 2, 2, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 6, 6, 8, 6, 8, 6, 8,
	1, 1, 1, 1, 1, 2, 3, 1, 2, 3,
	4, 1, 2, 3, 1, 1, 1, 3, 4, 5,
	6, 5, 6, 5, 6, 7, 6, 7, 2, 4,
	1, 1, 1, 3, 1, 5, 0, 1, 4, 5,
	0, 2, 1, 3, 1, 3, 1, 3, 1, 3,
	1, 3, 1, 3, 1, 3, 1, 3, 6, 9,
	5, 8, 7, 3, 1, 3, 10, 13, 9, 12,
	9, 12, 8, 11, 5, 6, 4, 5, 0, 2,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 4, 5, 0, 2, 4, 5, 0, 2,
	4, 5, 0, 2, 4, 5, 0, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 3,
	1, 3, 1, 3, 1, 1, 1, 0, 1, 0,
	1, 0, 1, 0, 1, 1, 1, 1, 0, 1,
	0, 1, 0, 1, 1, 1,
}
var yyChk = [...]int{

	-1000, -1, -7, -5, -11, -42, -43, -122, -123, -126,
	-127, -23, -20, -21, -27, -28, -31, -37, -22, -40,
	-41, -68, 15, 88, 87, -8, -10, -60, 27, 32,
	35, 133, 96, -147, 102, 20, 21, 100, 101, 99,
	103, 120, 111, 112, 33, 124, 134, 116, 117, 118,
	119, 125, 121, 122, 123, 126, -63, -81, -78, -77,
	-84, -85, -112, -80, -82, -145, -150, -151, -152, -39,
	168, 16, 90, 115, 80, 5, 6, 7, -64, -65,
	-67, 162, 163, -144, 147, 149, 150, 148, -86, -70,
	70, 74, 167, 11, 13, 14, 12, 97, 9, 78,
	-66, 4, 135, 136, 137, 139, 140, 141, 142, 151,
	146, 30, 160, -68, 168, -147, 88, 27, 133, 87,
	-113, -67, -68, -44, -46, 24, 19, 27, 22, -45,
	17, -77, 168, 168, 25, 36, 36, -149, 168, -148,
	-145, -149, -144, -145, 97, 44, 103, 127, -150, -152,
	-150, -144, -144, -38, 104, 105, 37, 38, 106, 107,
	-144, -144, -68, -68, -68, -152, -144, -68, -68, -68,
	-144, -68, -117, -67, -144, -68, -144, -144, 157, -67,
	-68, -117, -42, -60, -68, -145, -146, -9, 133, 96,
	6, -62, -61, -159, 31, 156, 155, 161, 77, 75,
	74, 71, 76, -161, 163, 162, 164, 165, 166, 73,
	72, -67, -67, 171, 168, 168, 168, 168, 168, 155,
	161, -154, -161, 74, -77, -67, -67, -144, 168, 168,
	171, -1, 92, -117, -83, 168, -113, -136, -114, 91,
	-52, 45, -47, -48, 25, 18, 25, -103, -101, -96,
	-98, -144, 30, -97, 139, 140, 141, 142, 25, 18,
	-102, -96, 65, 66, 67, -153, 79, -83, -117, -101,
	-144, -101, -153, 170, 157, 97, 44, 127, 128, -144,
	-96, -144, -144, 161, 43, 161, 43, 62, -144, -68,
	-68, 18, 62, 62, 43, 18, 18, 170, 62, 170,
	-68, 6, -67, 169, 169, 169, 169, -46, 94, 71,
	170, 71, -145, -146, 170, -144, -67, -67, -67, -154,
	-67, 75, 71, 76, -70, 168, -77, -67, 69, 68,
	-67, -67, -67, -67, -67, -67, -67, -144, 6, -83,
	-153, -83, -67, 169, -121, -111, -110, -69, -67, -87,
	164, -144, 150, 133, 148, 151, 152, 153, 154, -153,
	-153, -70, -70, 75, 71, 69, 68, 77, 148, -153,
	-67, -144, 6, -1, 169, 91, -137, 93, -115, 93,
	-67, -68, -53, -59, 51, 52, 48, -48, -49, 23,
	-146, -145, -119, -107, -104, -108, 29, -105, 168, -101,
	-100, -77, -99, 143, 144, 145, -101, 20, 170, 168,
	-101, -119, 18, 170, -158, 68, -158, -158, -121, 169,
	62, 168, 168, -160, 28, 33, 34, 42, 20, -83,
	-149, -67, 98, 168, 28, 168, 168, -68, -144, -68,
	-144, -144, -68, -144, -68, -30, -29, -68, 25, 5,
	-30, -118, -68, -152, -152, -101, -118, -118, -117, -68,
	-2, -12, -5, -13, 88, 87, -8, -10, -6, 113,
	114, -144, -146, -144, 71, 71, -62, 28, 168, -64,
	-65, 72, -67, -70, -67, -70, -70, 169, -83, 169,
	18, 169, 170, 28, 168, 168, 168, 168, 168, 168,
	168, 168, -83, -83, -69, -70, -79, 168, -77, 146,
	-79, -79, -154, -83, 170, -129, -128, 93, 89, 95,
	-1, 95, -67, 92, 92, 98, 99, -68, -68, -72,
	-73, -74, -67, -87, -49, -50, 46, -67, 60, -155,
	-157, 63, 170, 55, 57, 58, 59, -144, 28, -107,
	-144, 28, 168, 26, 168, -42, -125, -124, -66, -144,
	-103, -96, -68, -144, 30, 62, 168, -49, -119, -102,
	-45, -44, -45, -45, 168, -116, -66, -120, -144, -42,
	-24, 168, -144, -66, 168, -66, -144, 169, -42, -144,
	-120, -42, 169, -36, -33, -35, -32, -34, -145, -144,
	170, 28, -146, 170, 95, 160, -68, -113, 94, 94,
	-144, -144, 168, -120, -67, 72, 169, -67, -121, -144,
	-83, -153, -153, -153, -153, -153, -83, -83, -83, 169,
	169, 169, 72, -71, -70, 168, 100, 71, 169, -67,
	95, -129, -1, -68, 87, -67, -1, 19, -55, 37,
	104, -56, -57, 53, 86, 137, -58, 86, 137, 170,
	-75, 49, 50, -50, -51, 47, 48, 54, 54, -156,
	56, -155, -157, -106, -107, 64, -105, -144, 169, -144,
	-68, -71, -116, -48, 170, 161, 169, 170, 170, 168,
	-116, -49, -116, 169, 170, 169, 170, -26, 37, 38,
	39, 40, -25, -24, 41, -116, 43, 43, 169, 28,
	169, 170, 170, 41, 169, 170, -30, -144, -118, 90,
	-2, 92, -138, 91, -2, -2, 94, 94, -42, 169,
	-67, 169, 98, 169, -83, -83, -83, -83, -69, -83,
	169, 169, 169, -70, 169, 170, -67, 81, 132, 169,
	88, 95, 92, -114, -136, 91, -68, -54, 138, 80,
	-72, 136, -51, -67, -117, -107, 64, -107, 64, 54,
	54, -156, -105, 170, 170, 169, -49, -125, -67, -83,
	-96, -116, 169, 169, 62, -116, -160, -120, -66, -66,
	169, 170, -67, 169, -144, -144, -68, 28, 129, 28,
	-32, -35, -35, -145, -68, 28, -36, -2, -139, 93,
	-68, 95, 95, -2, -2, 169, 28, -67, 110, 169,
	169, 169, 169, 169, 169, 110, 110, 131, 110, 131,
	-71, 170, 46, 88, -1, -57, -59, 135, -76, 37,
	38, -52, -105, -109, 61, 62, -105, -107, 64, -107,
	64, 54, 170, -106, -144, -68, 26, -42, 169, 169,
	170, 169, 62, 26, -42, 168, -42, -26, -25, -42,
	-3, -14, -5, -18, 88, 87, -15, -16, 90, 130,
	129, 129, 169, -131, -130, 93, 89, 95, -2, 92,
	90, 90, 95, 95, 168, 169, 168, 110, 110, 110,
	110, 110, 110, 168, 168, 136, 168, 136, -67, 168,
	-128, -54, -53, -67, 168, -109, -109, -105, -105, -107,
	64, -106, 169, 170, 169, 170, -71, -83, 26, -42,
	168, -71, -116, 95, 160, -68, -113, -68, -145, -146,
	-9, -68, -3, -3, 28, 95, -131, -2, -68, 87,
	-2, 90, 90, -42, -89, -88, -90, 109, 168, 168,
	168, 168, 168, 168, -88, -90, -89, 110, -88, 110,
	169, -52, 98, -120, -109, -105, -83, -83, 169, -71,
	-116, 169, -3, 92, -140, 91, 94, 71, 71, -145,
	-146, 95, 95, 129, 88, 95, 92, -138, 91, 169,
	169, -52, 45, 48, -89, -89, -89, -89, -89, -88,
	169, 169, 168, 169, 168, 169, 19, 169, 169, 169,
	169, 26, -42, -3, -141, 93, -68, -4, -17, -5,
	-19, 88, 87, -15, -16, -6, -144, -144, 71, 71,
	-3, 88, -2, 48, -117, 169, 169, 169, 169, 169,
	169, -89, -88, 26, -42, -71, -133, -132, 93, 89,
	95, -3, 92, 95, 160, -68, -113, 94, 94, -144,
	-144, 95, -130, -72, 169, 169, -71, 95, -133, -3,
	-68, 87, -3, 90, -4, 92, -142, 91, -4, -4,
	94, 94, -91, 137, 88, 95, 92, -140, 91, -4,
	-143, 93, -68, 95, 95, -4, -4, -92, 75, 82,
	6, 85, 88, -3, -135, -134, 93, 89, 95, -4,
	92, 90, 90, 95, 95, -94, 82, -93, 6, 85,
	83, 83, 86, -132, 95, -135, -4, -68, 87, -4,
	90, 90, 72, 83, 83, 84, 86, 88, 95, 92,
	-142, 91, -95, 82, -93, 88, -4, 84, -134,
}
var yyDef = [...]int{

	-2, -2, 2, 30, 31, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
	25, -2, 27, 0, 406, 46, 47, 0, 0, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 139,
	0, 0, 85, 86, 0, 0, 0, 0, 0, 0,
	0, 165, 0, 171, 0, 0, 237, 238, 239, 240,
	241, 242, 243, 244, 245, 246, 248, 249, 250, 251,
	216, 253, 0, 39, 510, 222, 223, 224, 225, 226,
	0, 0, 0, 229, 0, 0, 0, 0, 321, 499,
	0, 0, 0, 486, 494, 495, 496, 0, 227, 228,
	234, 478, 479, 480, 481, 482, 483, 484, 485, 0,
	0, 0, -2, 235, -2, 247, 0, 0, 0, 406,
	0, 407, 235, -2, 188, 0, 0, 0, 0, 0,
	497, 185, 216, 306, 0, 0, 0, 76, 497, 492,
	490, 77, 0, 79, 0, 0, 0, 0, 0, 0,
	84, 108, 110, 0, 140, 141, 142, 143, 0, 0,
	0, -2, -2, 235, 235, 155, 167, -2, -2, -2,
	-2, -2, 166, 414, -2, -2, 172, 173, 0, 0,
	235, 0, 0, 0, 235, 246, 0, 0, 37, 38,
	40, 217, 220, 0, 511, 0, 514, 515, 499, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 300, 301, 0, 306, 306, 0, 497, 497, 514,
	515, 0, 0, 500, 294, 304, 305, 0, 497, 0,
	0, 3, -2, 0, 0, 306, 0, 464, 410, 0,
	214, 0, 188, 190, 0, 0, 0, 0, 422, 370,
	371, 353, 354, 0, -2, -2, -2, -2, 0, 0,
	0, 420, 508, 508, 508, 0, 498, 0, 307, 0,
	512, 0, 306, 0, 0, 0, 0, 0, 0, 111,
	116, 124, 138, 0, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	-2, 223, 489, 236, 252, 255, 271, 188, -2, 0,
	0, 0, 0, 0, 510, 0, 272, -2, -2, 0,
	0, 0, 0, 0, 285, 216, 256, -2, 0, 0,
	295, 296, 297, 298, 299, 302, 303, 230, 232, 0,
	306, 0, 414, 312, 0, 426, 402, 404, 400, 401,
	254, 229, 0, 0, 0, 0, 0, 0, 0, 306,
	306, 277, 279, 0, 0, 0, 0, 499, 148, 306,
	0, 231, 233, 448, 314, 0, 0, -2, 0, 0,
	0, 235, 176, 198, 0, 0, 0, 190, 192, 0,
	187, 487, 189, -2, 381, 384, 385, 386, 216, 372,
	373, 374, 0, 359, 360, 361, 216, 0, 0, 0,
	0, 190, 0, 0, 0, 509, 0, 0, 186, 315,
	0, 0, 0, 216, 513, 0, 0, 0, 0, 0,
	493, 491, 216, 0, 216, 0, 0, -2, -2, -2,
	-2, -2, -2, -2, -2, 109, 119, -2, 0, 121,
	123, 164, -2, 153, 154, 168, 159, 160, 415, -2,
	0, 0, 41, 42, 0, 406, 51, 52, 53, 28,
	29, 0, 488, 0, 0, 0, 221, 0, 0, 280,
	281, 0, 0, 286, -2, 290, 292, 308, 0, 309,
	0, 313, 0, 0, 306, 497, 497, 497, 497, 306,
	306, 306, 0, 0, 0, 0, 287, 216, 274, 0,
	291, 293, 0, 0, 0, 0, 448, -2, 0, 0,
	465, 405, 411, 0, -2, 0, 0, -2, -2, 197,
	260, 266, 264, 265, 192, 194, 0, 191, 0, 0,
	503, 501, 0, 502, 505, 506, 507, 382, 0, 501,
	375, 0, 0, 0, 0, 430, 188, 434, 0, 229,
	423, 0, 235, -2, 354, 0, 0, 444, 190, 421,
	181, 184, 182, 183, 0, 0, 412, 0, 424, 89,
	101, 0, 97, 92, 0, 0, 0, 318, 106, 107,
	0, 115, 0, 0, 131, 132, 126, 129, 125, 0,
	0, 0, 112, 0, 0, -2, 235, 0, -2, -2,
	0, 0, 216, 0, 282, 0, 316, 0, 427, 403,
	0, 306, 306, 306, 306, 306, 0, 0, 0, 317,
	319, 320, 0, 0, 258, 0, 146, 0, 322, 0,
	0, 0, 449, 235, 45, 408, 462, 177, 0, 204,
	205, 201, 207, 208, 209, 210, 215, 212, 213, 0,
	262, 267, 268, 194, 180, 0, 0, 0, 0, 0,
	504, 0, 503, 419, -2, 0, 386, 383, 387, 376,
	235, 428, 0, 190, 0, 0, 362, 306, 0, 0,
	0, 445, 0, 0, 0, -2, 0, 90, 102, 103,
	0, 0, 0, 99, 0, 0, 0, 0, 113, 0,
	0, 0, 0, 0, 0, 0, 120, 118, 417, 32,
	5, -2, 468, 0, 0, 0, -2, -2, 0, 0,
	283, 310, 0, 308, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 273, 0, 0, 147, 0, 257,
	43, 0, -2, 409, 463, 0, 235, 214, 202, 0,
	261, 0, 196, 195, 193, 388, 0, 501, 0, 0,
	0, 0, 378, 0, 0, 216, 432, 435, 433, 0,
	0, 0, 0, 216, 0, 413, 216, 425, 104, 105,
	101, 0, 98, 93, 94, -2, -2, 216, -2, 0,
	127, 133, 130, 0, -2, 0, 0, 452, 0, -2,
	235, 0, 0, 0, 0, 218, 0, 0, 0, 316,
	317, 318, 319, 320, 322, 0, 0, 0, 0, 0,
	259, 0, 0, 44, 446, 201, 200, 203, 263, 269,
	270, 214, 393, 389, 0, 0, 0, 501, 0, 391,
	0, 0, 0, 379, 229, 235, 0, 431, 363, 364,
	306, 216, 0, 0, 442, 0, 88, 91, 100, 114,
	0, 0, 54, 55, 0, 406, 68, 69, 0, 61,
	-2, -2, 0, 0, 452, -2, 0, 0, 469, -2,
	33, 34, 0, 0, 216, 311, 339, 0, 0, 0,
	0, 0, 0, 339, 339, 0, 339, 0, 0, 196,
	447, 199, 178, 398, 0, 394, 390, 0, 396, 392,
	0, 380, 366, 306, 368, 306, 429, 0, 0, 438,
	0, 440, 0, 134, -2, 235, 0, 235, 246, 0,
	0, -2, 0, 0, 0, 0, 0, 453, 235, 50,
	466, 35, 36, 0, 0, 337, 196, 0, 339, 339,
	339, 339, 339, 339, 0, 196, 0, 0, 0, 0,
	275, 0, 0, 0, 395, 397, 0, 0, 365, 436,
	0, 216, 7, -2, 472, 0, -2, 0, 0, 0,
	0, 135, 136, -2, 48, 0, -2, 467, 0, 219,
	324, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 332, 339, 334, 339, 323, 179, 399, 367, 369,
	216, 0, 443, 456, 0, -2, 235, 0, 0, 63,
	64, 0, 406, 73, 74, 75, 0, 0, 0, 0,
	0, 49, 450, 0, 340, 325, 326, 327, 328, 329,
	330, 0, 0, 0, 439, 441, 0, 456, -2, 0,
	0, 473, -2, 0, -2, 235, 0, -2, -2, 0,
	0, 137, 451, 197, 333, 335, 437, 0, 0, 457,
	235, 67, 470, 56, 9, -2, 476, 0, 0, 0,
	-2, -2, 338, 0, 65, 0, -2, 471, 0, 460,
	0, -2, 235, 0, 0, 0, 0, 341, 0, 0,
	0, 0, 66, 454, 0, 460, -2, 0, 0, 477,
	-2, 57, 58, 0, 0, 0, 0, 350, 0, 0,
	343, 344, 345, 455, 0, 0, 461, 235, 72, 474,
	59, 60, 0, 349, 346, 347, 348, 70, 0, -2,
	475, 0, 342, 0, 352, 71, 458, 351, 459,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 167, 3, 3, 3, 166, 3, 3,
	168, 169, 164, 163, 170, 162, 171, 165, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 160,
	3, 161,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:251
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:256
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:261
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:268
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:272
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:278
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:282
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:288
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:292
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:298
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:302
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:306
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:310
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:314
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:318
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:322
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:326
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:330
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:334
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:338
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:342
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:346
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:350
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:354
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:358
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:362
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:366
		{
			yyVAL.statement = ExternalCommand{BaseExpr: NewBaseExpr(yyDollar[1].token), Command: yyDollar[1].token.Literal}
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:372
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:376
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:382
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:386
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 32:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:392
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 33:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:396
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 34:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:400
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 35:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:404
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 36:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:408
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:414
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:418
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:424
		{
			yyVAL.statement = Exit{}
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:428
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:434
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:438
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:444
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:448
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:452
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:456
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:460
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 48:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:466
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 49:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:470
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 50:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:474
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:478
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:482
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:486
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:492
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:496
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 56:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:502
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:506
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 58:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:510
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 59:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:514
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 60:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:518
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:524
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:528
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:534
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:538
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:544
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 66:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:548
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 67:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:552
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:556
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:560
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 70:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:566
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 71:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:570
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 72:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:574
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:578
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:582
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:586
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:592
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:596
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:600
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:604
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:610
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 81:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:614
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:618
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:622
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:626
		{
			yyVAL.statement = UnsetEnvVar{EnvVar: yyDollar[2].envvar}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:632
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:636
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 87:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:642
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:646
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 89:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:650
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 90:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:654
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:658
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:662
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:666
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 94:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:670
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 95:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:674
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].identifier}
		}
	case 96:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:678
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].queryexpr}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:684
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:688
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:694
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:698
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:704
		{
			yyVAL.expression = nil
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:708
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:712
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:716
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:720
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:726
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 107:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:730
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Statement: yyDollar[5].identifier}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:734
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 109:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:738
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:742
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:746
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 112:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:750
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:756
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 114:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:760
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 115:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:764
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:768
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].queryexpr}
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:774
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:778
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr, Name: yyDollar[3].identifier}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:784
		{
			yyVAL.replacevals = []ReplaceValue{yyDollar[1].replaceval}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:788
		{
			yyVAL.replacevals = append([]ReplaceValue{yyDollar[1].replaceval}, yyDollar[3].replacevals...)
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:794
		{
			yyVAL.statement = StatementPreparation{Name: yyDollar[2].identifier, Statement: value.NewString(yyDollar[4].token.Literal)}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:798
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier}
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:802
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:806
		{
			yyVAL.statement = DisposeStatement{Name: yyDollar[3].identifier}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:812
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:818
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:822
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:828
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:834
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:838
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:844
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:848
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:852
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 134:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:858
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 135:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:862
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 136:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:866
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 137:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:870
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:874
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:880
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:884
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:888
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:892
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:896
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:900
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:904
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:910
		{
			yyVAL.queryexpr = CursorStatus{Cursor: yyDollar[2].identifier, Negation: yyDollar[4].token, Type: yyDollar[5].token}
		}
	case 147:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:914
		{
			yyVAL.queryexpr = CursorStatus{Cursor: yyDollar[2].identifier, Negation: yyDollar[4].token, Type: yyDollar[6].token}
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:918
		{
			yyVAL.queryexpr = CursorAttrebute{Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:924
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:928
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:932
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:936
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:940
		{
			yyVAL.statement = AddFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:944
		{
			yyVAL.statement = RemoveFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:948
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:952
		{
			yyVAL.statement = Echo{Value: yyDollar[2].queryexpr}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:956
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:960
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:964
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:968
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:972
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].identifier}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:976
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:980
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr}
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:984
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:988
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:992
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token), Keywords: yyDollar[2].queryexprs}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:996
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1000
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier, Table: yyDollar[4].queryexpr}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1004
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].identifier}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1008
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].queryexpr}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1012
		{
			yyVAL.statement = Pwd{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1016
		{
			yyVAL.statement = Reload{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1022
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1026
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[3].queryexpr}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1030
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 176:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1036
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
			}
		}
	case 177:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1045
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				Context:       yyDollar[6].token,
			}
		}
	case 178:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1057
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause: yyDollar[1].queryexpr,
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[2].queryexpr,
					IntoClause:    yyDollar[3].queryexpr,
					FromClause:    yyDollar[4].queryexpr,
					WhereClause:   yyDollar[5].queryexpr,
					GroupByClause: yyDollar[6].queryexpr,
					HavingClause:  yyDollar[7].queryexpr,
				},
				OrderByClause: yyDollar[8].queryexpr,
				LimitClause:   yyDollar[9].queryexpr,
			}
		}
	case 179:
		yyDollar = yyS[yypt-11 : yypt+1]
		//line parser.y:1073
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause: yyDollar[1].queryexpr,
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[2].queryexpr,
					IntoClause:    yyDollar[3].queryexpr,
					FromClause:    yyDollar[4].queryexpr,
					WhereClause:   yyDollar[5].queryexpr,
					GroupByClause: yyDollar[6].queryexpr,
					HavingClause:  yyDollar[7].queryexpr,
				},
				OrderByClause: yyDollar[8].queryexpr,
				LimitClause:   yyDollar[9].queryexpr,
				Context:       yyDollar[11].token,
			}
		}
	case 180:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1092
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 181:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1102
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 182:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1111
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1120
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1131
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1135
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1141
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 187:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1147
		{
			yyVAL.queryexpr = IntoClause{Variables: yyDollar[2].variables}
		}
	case 188:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1153
		{
			yyVAL.queryexpr = nil
		}
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1157
		{
			yyVAL.queryexpr = FromClause{Tables: yyDollar[2].queryexprs}
		}
	case 190:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1163
		{
			yyVAL.queryexpr = nil
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1167
		{
			yyVAL.queryexpr = WhereClause{Filter: yyDollar[2].queryexpr}
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1173
		{
			yyVAL.queryexpr = nil
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1177
		{
			yyVAL.queryexpr = GroupByClause{Items: yyDollar[3].queryexprs}
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1183
		{
			yyVAL.queryexpr = nil
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1187
		{
			yyVAL.queryexpr = HavingClause{Filter: yyDollar[2].queryexpr}
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1193
		{
			yyVAL.queryexpr = nil
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1197
		{
			yyVAL.queryexpr = OrderByClause{Items: yyDollar[3].queryexprs}
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1203
		{
			if yyDollar[1].queryexpr == nil {
				yyVAL.queryexpr = yyDollar[1].queryexpr
			} else {
				yyVAL.queryexpr = LimitClause{BaseExpr: yyDollar[1].queryexpr.(OffsetClause).BaseExpr, OffsetClause: yyDollar[1].queryexpr}
			}
		}
	case 199:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1211
		{
			var base *BaseExpr
			if yyDollar[1].queryexpr == nil {
				base = NewBaseExpr(yyDollar[2].token)
			} else {
				base = yyDollar[1].queryexpr.(OffsetClause).BaseExpr
			}
			yyVAL.queryexpr = LimitClause{BaseExpr: base, Type: yyDollar[2].token, Position: yyDollar[3].token, Value: yyDollar[4].queryexpr, Unit: yyDollar[5].token, Restriction: yyDollar[6].token, OffsetClause: yyDollar[1].queryexpr}
		}
	case 200:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1221
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, Value: yyDollar[2].queryexpr, Unit: yyDollar[3].token, Restriction: yyDollar[4].token, OffsetClause: yyDollar[5].queryexpr}
		}
	case 201:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1227
		{
			yyVAL.token = Token{}
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1231
		{
			yyVAL.token = yyDollar[1].token
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1235
		{
			yyVAL.token = yyDollar[2].token
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1241
		{
			yyVAL.token = yyDollar[1].token
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1245
		{
			yyVAL.token = yyDollar[1].token
		}
	case 206:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1251
		{
			yyVAL.token = Token{}
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1255
		{
			yyVAL.token = yyDollar[1].token
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1261
		{
			yyVAL.token = yyDollar[1].token
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1265
		{
			yyVAL.token = yyDollar[1].token
		}
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1269
		{
			yyVAL.token = yyDollar[1].token
		}
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1275
		{
			yyVAL.token = Token{}
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1279
		{
			yyVAL.token = yyDollar[1].token
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1283
		{
			yyVAL.token = yyDollar[1].token
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1289
		{
			yyVAL.queryexpr = nil
		}
	case 215:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1293
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: yyDollar[2].queryexpr, Unit: yyDollar[3].token}
		}
	case 216:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1299
		{
			yyVAL.queryexpr = nil
		}
	case 217:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1303
		{
			yyVAL.queryexpr = WithClause{InlineTables: yyDollar[2].queryexprs}
		}
	case 218:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1309
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 219:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1313
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1319
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1323
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1329
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1333
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1337
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1341
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1345
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1351
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1357
		{
			yyVAL.queryexpr = NewNullValue()
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1363
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 230:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1367
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1371
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 232:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1375
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1379
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1385
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1389
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1393
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1399
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1403
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1407
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1411
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1415
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1419
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1423
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1427
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1431
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1435
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1439
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1443
		{
			yyVAL.queryexpr = yyDollar[1].envvar
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1447
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1451
		{
			yyVAL.queryexpr = yyDollar[1].flag
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1455
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 252:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1459
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1463
		{
			name := ""
			if yyDollar[1].token.Literal[0] == ':' {
				name = yyDollar[1].token.Literal[1:]
			}
			yyVAL.queryexpr = Placeholder{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Ordinal: yyDollar[1].token.HolderOrdinal, Name: name}
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1473
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1479
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1483
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 257:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1487
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1493
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1497
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1503
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1507
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 262:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1513
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 263:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1517
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, NullsPosition: yyDollar[4].token}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1523
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1527
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 266:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1533
		{
			yyVAL.token = Token{}
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1537
		{
			yyVAL.token = yyDollar[1].token
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1541
		{
			yyVAL.token = yyDollar[1].token
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1547
		{
			yyVAL.token = yyDollar[1].token
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1551
		{
			yyVAL.token = yyDollar[1].token
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1557
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1563
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1586
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1590
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 275:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1594
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1600
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1604
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1608
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1612
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 280:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1616
		{
			yyVAL.queryexpr = Is{LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1620
		{
			yyVAL.queryexpr = Is{LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 282:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1624
		{
			yyVAL.queryexpr = Between{LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 283:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1628
		{
			yyVAL.queryexpr = Between{LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 284:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1632
		{
			yyVAL.queryexpr = Between{LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 285:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1636
		{
			yyVAL.queryexpr = In{LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1640
		{
			yyVAL.queryexpr = In{LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1644
		{
			yyVAL.queryexpr = In{LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1648
		{
			yyVAL.queryexpr = Like{LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 289:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1652
		{
			yyVAL.queryexpr = Like{LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 290:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1656
		{
			yyVAL.queryexpr = Any{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 291:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1660
		{
			yyVAL.queryexpr = Any{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 292:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1664
		{
			yyVAL.queryexpr = All{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 293:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1668
		{
			yyVAL.queryexpr = All{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1672
		{
			yyVAL.queryexpr = Exists{Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1678
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1682
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 297:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1686
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1690
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1694
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1698
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 301:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1702
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1708
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1712
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1716
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1720
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 306:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1726
		{
			yyVAL.queryexprs = nil
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1730
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1736
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1740
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 310:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1744
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: []QueryExpression{yyDollar[3].queryexpr, yyDollar[5].queryexpr}, From: yyDollar[4].token}
		}
	case 311:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1748
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: []QueryExpression{yyDollar[3].queryexpr, yyDollar[5].queryexpr, yyDollar[7].queryexpr}, From: yyDollar[4].token, For: yyDollar[6].token}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1752
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1756
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1760
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1764
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 316:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1771
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 317:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1775
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 318:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1779
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 319:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1783
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 320:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1787
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1791
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1797
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 323:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1801
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, OrderBy: yyDollar[9].queryexpr}
		}
	case 324:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1807
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 325:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1811
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 326:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1815
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 327:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1819
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 328:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1823
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 329:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1827
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 330:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:1831
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 331:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1835
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 332:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1839
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 333:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1843
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreType: yyDollar[6].token, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 334:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1847
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 335:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:1851
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreType: yyDollar[6].token, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1857
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1863
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 338:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1867
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: OrderByClause{Items: yyDollar[4].queryexprs}, WindowingClause: yyDollar[5].queryexpr}
		}
	case 339:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:1873
		{
			yyVAL.queryexpr = nil
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:1877
		{
			yyVAL.queryexpr = PartitionClause{Values: yyDollar[3].queryexprs}
		}
	case 341:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1883
		{
			yyVAL.queryexpr = WindowingClause{FrameLow: yyDollar[2].queryexpr}
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:1887
		{
			yyVAL.queryexpr = WindowingClause{FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr}
		}
	case 343:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1893
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Unbounded: yyDollar[1].token}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1897
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Offset: i}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1902
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1908
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Offset: i}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1913
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Offset: i}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1918
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1924
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Unbounded: yyDollar[1].token}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1928
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:1934
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Unbounded: yyDollar[1].token}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1938
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1944
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1948
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1954
		{
			yyVAL.token = yyDollar[1].token
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1958
		{
			yyVAL.token = yyDollar[1].token
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1962
		{
			yyVAL.token = yyDollar[1].token
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1966
		{
			yyVAL.token = yyDollar[1].token
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1972
		{
			yyVAL.token = yyDollar[1].token
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1976
		{
			yyVAL.token = yyDollar[1].token
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:1980
		{
			yyVAL.token = yyDollar[1].token
		}
	case 362:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:1986
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, Path: yyDollar[3].queryexpr, Args: nil}
		}
	case 363:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1990
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, Path: yyDollar[3].queryexpr, Args: yyDollar[5].queryexprs}
		}
	case 364:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:1994
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: nil}
		}
	case 365:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:1998
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: yyDollar[7].queryexprs}
		}
	case 366:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2004
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: nil}
		}
	case 367:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:2008
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: yyDollar[7].queryexprs}
		}
	case 368:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2012
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: nil}
		}
	case 369:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:2016
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: yyDollar[7].queryexprs}
		}
	case 370:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2022
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2026
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 372:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2032
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2036
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2042
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr}
		}
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2046
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2050
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token, Alias: yyDollar[3].identifier}
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2056
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2060
		{
			yyDollar[2].table.Lateral = yyDollar[1].token
			yyDollar[2].table.BaseExpr = NewBaseExpr(yyDollar[1].token)
			yyVAL.queryexprs = []QueryExpression{yyDollar[2].table}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2066
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].table}, yyDollar[3].queryexprs...)
		}
	case 380:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2070
		{
			yyDollar[2].table.Lateral = yyDollar[1].token
			yyDollar[2].table.BaseExpr = NewBaseExpr(yyDollar[1].token)
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[2].table}, yyDollar[4].queryexprs...)
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2078
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2082
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2086
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token, Alias: yyDollar[3].identifier}
		}
	case 384:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2090
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2094
		{
			yyVAL.queryexpr = Table{Object: Dual{}}
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2098
		{
			yyVAL.queryexpr = yyDollar[1].table
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2102
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 388:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2108
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 389:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2112
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 390:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2116
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 391:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2120
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 392:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2124
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 393:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2128
		{
			yyDollar[5].table.Lateral = yyDollar[4].token
			yyDollar[5].table.BaseExpr = NewBaseExpr(yyDollar[4].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].table, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 394:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2134
		{
			yyDollar[5].table.Lateral = yyDollar[4].token
			yyDollar[5].table.BaseExpr = NewBaseExpr(yyDollar[4].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].table, JoinType: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 395:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:2140
		{
			yyDollar[6].table.Lateral = yyDollar[5].token
			yyDollar[6].table.BaseExpr = NewBaseExpr(yyDollar[5].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].table, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[7].queryexpr}
		}
	case 396:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2146
		{
			yyDollar[6].table.Lateral = yyDollar[5].token
			yyDollar[6].table.BaseExpr = NewBaseExpr(yyDollar[5].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].table, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 397:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:2152
		{
			yyDollar[7].table.Lateral = yyDollar[6].token
			yyDollar[7].table.BaseExpr = NewBaseExpr(yyDollar[6].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[7].table, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 398:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2160
		{
			yyVAL.queryexpr = JoinCondition{On: yyDollar[2].queryexpr}
		}
	case 399:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2164
		{
			yyVAL.queryexpr = JoinCondition{Using: yyDollar[3].queryexprs}
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2170
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2174
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2180
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2184
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token, Alias: yyDollar[3].identifier}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2188
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 405:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2194
		{
			yyVAL.queryexpr = CaseExpr{Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2200
		{
			yyVAL.queryexpr = nil
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2204
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 408:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2210
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 409:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2214
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2220
		{
			yyVAL.queryexpr = nil
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2224
		{
			yyVAL.queryexpr = CaseExprElse{Result: yyDollar[2].queryexpr}
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2230
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2234
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2240
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2244
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2250
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2254
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2260
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2264
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2270
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2274
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2280
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2284
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2290
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2294
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2300
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2304
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 428:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2310
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, ValuesList: yyDollar[6].queryexprs}
		}
	case 429:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:2314
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 430:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2318
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 431:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:2322
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		//line parser.y:2328
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2334
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2340
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 435:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2344
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 436:
		yyDollar = yyS[yypt-10 : yypt+1]
		//line parser.y:2350
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Keys: yyDollar[7].queryexprs, ValuesList: yyDollar[10].queryexprs}
		}
	case 437:
		yyDollar = yyS[yypt-13 : yypt+1]
		//line parser.y:2354
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Keys: yyDollar[10].queryexprs, ValuesList: yyDollar[13].queryexprs}
		}
	case 438:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:2358
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Keys: yyDollar[7].queryexprs, Query: yyDollar[9].queryexpr.(SelectQuery)}
		}
	case 439:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:2362
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Keys: yyDollar[10].queryexprs, Query: yyDollar[12].queryexpr.(SelectQuery)}
		}
	case 440:
		yyDollar = yyS[yypt-9 : yypt+1]
		//line parser.y:2366
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Keys: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 441:
		yyDollar = yyS[yypt-12 : yypt+1]
		//line parser.y:2370
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Fields: yyDollar[5].queryexprs, Keys: yyDollar[9].queryexprs, ValuesList: yyDollar[12].queryexprs}
		}
	case 442:
		yyDollar = yyS[yypt-8 : yypt+1]
		//line parser.y:2374
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Keys: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 443:
		yyDollar = yyS[yypt-11 : yypt+1]
		//line parser.y:2378
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Fields: yyDollar[5].queryexprs, Keys: yyDollar[9].queryexprs, Query: yyDollar[11].queryexpr.(SelectQuery)}
		}
	case 444:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2384
		{
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: FromClause{Tables: yyDollar[4].queryexprs}, WhereClause: yyDollar[5].queryexpr}
		}
	case 445:
		yyDollar = yyS[yypt-6 : yypt+1]
		//line parser.y:2388
		{
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: FromClause{Tables: yyDollar[5].queryexprs}, WhereClause: yyDollar[6].queryexpr}
		}
	case 446:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2394
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 447:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2398
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 448:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2404
		{
			yyVAL.elseexpr = Else{}
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2408
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2414
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 451:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2418
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2424
		{
			yyVAL.elseexpr = Else{}
		}
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2428
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2434
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 455:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2438
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2444
		{
			yyVAL.elseexpr = Else{}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2448
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2454
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2458
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2464
		{
			yyVAL.elseexpr = Else{}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2468
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2474
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 463:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2478
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 464:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2484
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2488
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2494
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 467:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2498
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2504
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2508
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2514
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2518
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2524
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2528
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
		//line parser.y:2534
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
		//line parser.y:2538
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2544
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
		//line parser.y:2548
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2554
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2558
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 480:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2562
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2566
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2570
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2574
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2578
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2582
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2588
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2594
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2598
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2604
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2610
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2614
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2620
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		//line parser.y:2624
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2630
		{
			yyVAL.envvar = EnvironmentVariable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2636
		{
			yyVAL.queryexpr = RuntimeInformation{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2642
		{
			yyVAL.flag = Flag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2648
		{
			yyVAL.token = Token{}
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2652
		{
			yyVAL.token = yyDollar[1].token
		}
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2658
		{
			yyVAL.token = Token{}
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2662
		{
			yyVAL.token = yyDollar[1].token
		}
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2668
		{
			yyVAL.token = Token{}
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2672
		{
			yyVAL.token = yyDollar[1].token
		}
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2678
		{
			yyVAL.token = Token{}
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2682
		{
			yyVAL.token = yyDollar[1].token
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2688
		{
			yyVAL.token = yyDollar[1].token
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2692
		{
			yyVAL.token = yyDollar[1].token
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2696
		{
			yyVAL.token = yyDollar[1].token
		}
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2702
		{
			yyVAL.token = Token{}
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2706
		{
			yyVAL.token = yyDollar[1].token
		}
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2712
		{
			yyVAL.token = Token{}
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2716
		{
			yyVAL.token = yyDollar[1].token
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
		//line parser.y:2722
		{
			yyVAL.token = Token{}
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2726
		{
			yyVAL.token = yyDollar[1].token
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2732
		{
			yyVAL.token = yyDollar[1].token
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		//line parser.y:2736
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
