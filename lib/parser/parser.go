// Code generated by goyacc -o lib/parser/parser.go -v lib/parser/parser.output lib/parser/parser.y. DO NOT EDIT.

//line lib/parser/parser.y:2
package parser

import __yyfmt__ "fmt"

//line lib/parser/parser.y:2

import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line lib/parser/parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	table       Table
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	envvar      EnvironmentVariable
	flag        Flag
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	replaceval  ReplaceValue
	replacevals []ReplaceValue
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const ENVIRONMENT_VARIABLE = 57355
const RUNTIME_INFORMATION = 57356
const EXTERNAL_COMMAND = 57357
const PLACEHOLDER = 57358
const SELECT = 57359
const FROM = 57360
const UPDATE = 57361
const SET = 57362
const UNSET = 57363
const DELETE = 57364
const WHERE = 57365
const INSERT = 57366
const INTO = 57367
const VALUES = 57368
const REPLACE = 57369
const AS = 57370
const DUAL = 57371
const STDIN = 57372
const RECURSIVE = 57373
const CREATE = 57374
const ADD = 57375
const DROP = 57376
const ALTER = 57377
const TABLE = 57378
const FIRST = 57379
const LAST = 57380
const AFTER = 57381
const BEFORE = 57382
const DEFAULT = 57383
const RENAME = 57384
const TO = 57385
const VIEW = 57386
const ORDER = 57387
const GROUP = 57388
const HAVING = 57389
const BY = 57390
const ASC = 57391
const DESC = 57392
const LIMIT = 57393
const OFFSET = 57394
const PERCENT = 57395
const JOIN = 57396
const INNER = 57397
const OUTER = 57398
const LEFT = 57399
const RIGHT = 57400
const FULL = 57401
const CROSS = 57402
const ON = 57403
const USING = 57404
const NATURAL = 57405
const LATERAL = 57406
const UNION = 57407
const INTERSECT = 57408
const EXCEPT = 57409
const ALL = 57410
const ANY = 57411
const EXISTS = 57412
const IN = 57413
const AND = 57414
const OR = 57415
const NOT = 57416
const BETWEEN = 57417
const LIKE = 57418
const IS = 57419
const NULL = 57420
const DISTINCT = 57421
const WITH = 57422
const RANGE = 57423
const UNBOUNDED = 57424
const PRECEDING = 57425
const FOLLOWING = 57426
const CURRENT = 57427
const ROW = 57428
const CASE = 57429
const IF = 57430
const ELSEIF = 57431
const WHILE = 57432
const WHEN = 57433
const THEN = 57434
const ELSE = 57435
const DO = 57436
const END = 57437
const DECLARE = 57438
const CURSOR = 57439
const FOR = 57440
const FETCH = 57441
const OPEN = 57442
const CLOSE = 57443
const DISPOSE = 57444
const PREPARE = 57445
const NEXT = 57446
const PRIOR = 57447
const ABSOLUTE = 57448
const RELATIVE = 57449
const SEPARATOR = 57450
const PARTITION = 57451
const OVER = 57452
const COMMIT = 57453
const ROLLBACK = 57454
const CONTINUE = 57455
const BREAK = 57456
const EXIT = 57457
const ECHO = 57458
const PRINT = 57459
const PRINTF = 57460
const SOURCE = 57461
const EXECUTE = 57462
const CHDIR = 57463
const PWD = 57464
const RELOAD = 57465
const REMOVE = 57466
const SYNTAX = 57467
const TRIGGER = 57468
const FUNCTION = 57469
const AGGREGATE = 57470
const BEGIN = 57471
const RETURN = 57472
const IGNORE = 57473
const WITHIN = 57474
const VAR = 57475
const SHOW = 57476
const TIES = 57477
const NULLS = 57478
const ROWS = 57479
const ONLY = 57480
const CSV = 57481
const JSON = 57482
const JSONL = 57483
const FIXED = 57484
const LTSV = 57485
const CSV_INLINE = 57486
const JSON_INLINE = 57487
const JSON_TABLE = 57488
const JSON_ROW = 57489
const SUBSTRING = 57490
const COUNT = 57491
const JSON_OBJECT = 57492
const AGGREGATE_FUNCTION = 57493
const LIST_FUNCTION = 57494
const ANALYTIC_FUNCTION = 57495
const FUNCTION_NTH = 57496
const FUNCTION_WITH_INS = 57497
const COMPARISON_OP = 57498
const STRING_OP = 57499
const SUBSTITUTION_OP = 57500
const UMINUS = 57501
const UPLUS = 57502

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"ENVIRONMENT_VARIABLE",
	"RUNTIME_INFORMATION",
	"EXTERNAL_COMMAND",
	"PLACEHOLDER",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"UNSET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"REPLACE",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"LATERAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"PREPARE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"ECHO",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"EXECUTE",
	"CHDIR",
	"PWD",
	"RELOAD",
	"REMOVE",
	"SYNTAX",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"ROWS",
	"ONLY",
	"CSV",
	"JSON",
	"JSONL",
	"FIXED",
	"LTSV",
	"CSV_INLINE",
	"JSON_INLINE",
	"JSON_TABLE",
	"JSON_ROW",
	"SUBSTRING",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LIST_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'='",
	"'-'",
	"'+'",
	"'*'",
	"'/'",
	"'%'",
	"'!'",
	"'('",
	"')'",
	"','",
	"'.'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line lib/parser/parser.y:2797

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string, forPrepared bool, ansiQuotes bool) ([]Statement, int, error) {
	l := new(Lexer)
	l.Init(s, sourceFile, forPrepared, ansiQuotes)
	yyParse(l)
	return l.program, l.HolderNumber(), l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 220,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 21,
	1, 26,
	89, 26,
	91, 26,
	93, 26,
	95, 26,
	161, 26,
	-2, 239,
	-1, 27,
	65, 188,
	66, 188,
	67, 188,
	-2, 200,
	-1, 35,
	1, 78,
	89, 78,
	91, 78,
	93, 78,
	95, 78,
	161, 78,
	-2, 251,
	-1, 61,
	65, 189,
	66, 189,
	67, 189,
	-2, 244,
	-1, 117,
	19, 220,
	22, 220,
	24, 220,
	-2, 1,
	-1, 131,
	65, 188,
	66, 188,
	67, 188,
	-2, 200,
	-1, 171,
	1, 122,
	89, 122,
	91, 122,
	93, 122,
	95, 122,
	161, 122,
	-2, 233,
	-1, 172,
	1, 163,
	89, 163,
	91, 163,
	93, 163,
	95, 163,
	161, 163,
	-2, 239,
	-1, 177,
	1, 156,
	89, 156,
	91, 156,
	93, 156,
	95, 156,
	161, 156,
	-2, 239,
	-1, 178,
	1, 157,
	89, 157,
	91, 157,
	93, 157,
	95, 157,
	161, 157,
	-2, 239,
	-1, 179,
	1, 158,
	89, 158,
	91, 158,
	93, 158,
	95, 158,
	161, 158,
	-2, 239,
	-1, 180,
	1, 161,
	89, 161,
	91, 161,
	93, 161,
	95, 161,
	161, 161,
	-2, 233,
	-1, 181,
	1, 162,
	89, 162,
	91, 162,
	93, 162,
	95, 162,
	161, 162,
	-2, 239,
	-1, 184,
	1, 169,
	89, 169,
	91, 169,
	93, 169,
	95, 169,
	161, 169,
	-2, 233,
	-1, 185,
	1, 170,
	89, 170,
	91, 170,
	93, 170,
	95, 170,
	161, 170,
	-2, 239,
	-1, 248,
	89, 1,
	93, 1,
	95, 1,
	-2, 220,
	-1, 271,
	169, 359,
	-2, 487,
	-1, 272,
	169, 360,
	-2, 488,
	-1, 273,
	169, 361,
	-2, 489,
	-1, 274,
	169, 362,
	-2, 490,
	-1, 275,
	169, 363,
	-2, 491,
	-1, 286,
	54, 507,
	-2, 423,
	-1, 321,
	4, 144,
	135, 144,
	136, 144,
	137, 144,
	139, 144,
	140, 144,
	141, 144,
	142, 144,
	143, 144,
	-2, 239,
	-1, 322,
	4, 145,
	135, 145,
	136, 145,
	137, 145,
	139, 145,
	140, 145,
	141, 145,
	142, 145,
	143, 145,
	-2, 239,
	-1, 332,
	1, 174,
	89, 174,
	91, 174,
	93, 174,
	95, 174,
	161, 174,
	-2, 239,
	-1, 339,
	95, 4,
	-2, 220,
	-1, 367,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	156, 0,
	162, 0,
	-2, 280,
	-1, 368,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	156, 0,
	162, 0,
	-2, 282,
	-1, 377,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	156, 0,
	162, 0,
	-2, 292,
	-1, 413,
	95, 1,
	-2, 220,
	-1, 420,
	1, 210,
	52, 210,
	80, 210,
	89, 210,
	91, 210,
	93, 210,
	95, 210,
	98, 210,
	138, 210,
	161, 210,
	170, 210,
	-2, 239,
	-1, 421,
	1, 215,
	89, 215,
	91, 215,
	93, 215,
	95, 215,
	98, 215,
	99, 215,
	161, 215,
	170, 215,
	-2, 239,
	-1, 453,
	65, 189,
	66, 189,
	67, 189,
	-2, 379,
	-1, 475,
	1, 80,
	89, 80,
	91, 80,
	93, 80,
	95, 80,
	161, 80,
	-2, 239,
	-1, 476,
	1, 81,
	89, 81,
	91, 81,
	93, 81,
	95, 81,
	161, 81,
	-2, 233,
	-1, 477,
	1, 82,
	89, 82,
	91, 82,
	93, 82,
	95, 82,
	161, 82,
	-2, 239,
	-1, 478,
	1, 83,
	89, 83,
	91, 83,
	93, 83,
	95, 83,
	161, 83,
	-2, 233,
	-1, 479,
	1, 149,
	89, 149,
	91, 149,
	93, 149,
	95, 149,
	161, 149,
	-2, 233,
	-1, 480,
	1, 150,
	89, 150,
	91, 150,
	93, 150,
	95, 150,
	161, 150,
	-2, 239,
	-1, 481,
	1, 151,
	89, 151,
	91, 151,
	93, 151,
	95, 151,
	161, 151,
	-2, 233,
	-1, 482,
	1, 152,
	89, 152,
	91, 152,
	93, 152,
	95, 152,
	161, 152,
	-2, 239,
	-1, 485,
	1, 117,
	89, 117,
	91, 117,
	93, 117,
	95, 117,
	161, 117,
	171, 117,
	-2, 239,
	-1, 490,
	1, 421,
	89, 421,
	91, 421,
	93, 421,
	95, 421,
	161, 421,
	-2, 239,
	-1, 497,
	1, 175,
	89, 175,
	91, 175,
	93, 175,
	95, 175,
	161, 175,
	-2, 239,
	-1, 536,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	156, 0,
	162, 0,
	-2, 293,
	-1, 559,
	95, 1,
	-2, 220,
	-1, 566,
	91, 1,
	93, 1,
	95, 1,
	-2, 220,
	-1, 595,
	170, 357,
	171, 357,
	-2, 233,
	-1, 613,
	54, 507,
	-2, 382,
	-1, 651,
	19, 220,
	22, 220,
	24, 220,
	-2, 4,
	-1, 654,
	95, 4,
	-2, 220,
	-1, 655,
	95, 4,
	-2, 220,
	-1, 681,
	170, 260,
	171, 260,
	-2, 189,
	-1, 729,
	17, 518,
	80, 518,
	169, 518,
	-2, 87,
	-1, 755,
	89, 4,
	93, 4,
	95, 4,
	-2, 220,
	-1, 760,
	95, 4,
	-2, 220,
	-1, 761,
	95, 4,
	-2, 220,
	-1, 786,
	89, 1,
	93, 1,
	95, 1,
	-2, 220,
	-1, 832,
	1, 95,
	89, 95,
	91, 95,
	93, 95,
	95, 95,
	161, 95,
	-2, 233,
	-1, 833,
	1, 96,
	89, 96,
	91, 96,
	93, 96,
	95, 96,
	161, 96,
	-2, 239,
	-1, 835,
	95, 6,
	-2, 220,
	-1, 841,
	170, 128,
	171, 128,
	-2, 239,
	-1, 846,
	95, 4,
	-2, 220,
	-1, 912,
	95, 6,
	-2, 220,
	-1, 913,
	95, 6,
	-2, 220,
	-1, 917,
	95, 4,
	-2, 220,
	-1, 921,
	91, 4,
	93, 4,
	95, 4,
	-2, 220,
	-1, 958,
	19, 220,
	22, 220,
	24, 220,
	-2, 6,
	-1, 965,
	161, 62,
	-2, 239,
	-1, 1006,
	89, 6,
	93, 6,
	95, 6,
	-2, 220,
	-1, 1009,
	95, 8,
	-2, 220,
	-1, 1016,
	95, 6,
	-2, 220,
	-1, 1019,
	89, 4,
	93, 4,
	95, 4,
	-2, 220,
	-1, 1045,
	95, 6,
	-2, 220,
	-1, 1078,
	95, 6,
	-2, 220,
	-1, 1082,
	91, 6,
	93, 6,
	95, 6,
	-2, 220,
	-1, 1084,
	19, 220,
	22, 220,
	24, 220,
	-2, 8,
	-1, 1087,
	95, 8,
	-2, 220,
	-1, 1088,
	95, 8,
	-2, 220,
	-1, 1105,
	89, 8,
	93, 8,
	95, 8,
	-2, 220,
	-1, 1110,
	95, 8,
	-2, 220,
	-1, 1111,
	95, 8,
	-2, 220,
	-1, 1116,
	89, 6,
	93, 6,
	95, 6,
	-2, 220,
	-1, 1121,
	95, 8,
	-2, 220,
	-1, 1136,
	95, 8,
	-2, 220,
	-1, 1140,
	91, 8,
	93, 8,
	95, 8,
	-2, 220,
	-1, 1169,
	89, 8,
	93, 8,
	95, 8,
	-2, 220,
}

const yyPrivate = 57344

const yyLast = 4355

var yyAct = [...]int{
	120, 61, 1147, 1135, 1106, 356, 1134, 1054, 916, 1047,
	1077, 422, 756, 1007, 1076, 126, 980, 290, 979, 915,
	300, 198, 250, 197, 612, 256, 1053, 736, 558, 137,
	731, 902, 1024, 642, 695, 505, 26, 807, 639, 603,
	281, 266, 253, 641, 621, 978, 461, 588, 257, 483,
	121, 35, 1, 679, 623, 572, 608, 354, 498, 254,
	129, 557, 351, 504, 25, 737, 443, 489, 140, 442,
	506, 278, 83, 61, 182, 438, 285, 264, 237, 205,
	82, 548, 246, 70, 345, 27, 292, 147, 230, 76,
	229, 229, 324, 191, 330, 240, 78, 217, 226, 225,
	216, 215, 218, 214, 446, 1073, 447, 448, 449, 441,
	209, 828, 444, 523, 131, 1095, 229, 104, 61, 1010,
	61, 159, 151, 78, 776, 105, 67, 230, 891, 892,
	229, 816, 175, 779, 1058, 893, 894, 877, 878, 137,
	249, 252, 78, 294, 134, 340, 78, 136, 746, 133,
	745, 116, 135, 26, 730, 1041, 748, 749, 542, 77,
	150, 150, 728, 153, 261, 283, 299, 512, 35, 725,
	247, 446, 724, 447, 448, 449, 441, 709, 279, 444,
	78, 25, 212, 211, 707, 708, 77, 705, 213, 221,
	220, 222, 223, 224, 137, 649, 775, 312, 646, 230,
	97, 196, 229, 329, 579, 521, 188, 341, 280, 77,
	436, 217, 226, 225, 216, 215, 218, 214, 376, 341,
	445, 265, 344, 217, 226, 225, 216, 215, 218, 214,
	431, 301, 188, 303, 341, 349, 376, 376, 305, 1094,
	500, 3, 1070, 77, 1037, 341, 1069, 115, 138, 61,
	1068, 1067, 1066, 389, 391, 1065, 106, 107, 108, 304,
	109, 110, 111, 112, 113, 78, 426, 341, 284, 375,
	1035, 78, 1040, 1038, 946, 138, 706, 1036, 294, 131,
	895, 1034, 1033, 1023, 26, 1022, 617, 427, 347, 348,
	630, 987, 453, 369, 138, 394, 212, 211, 138, 35,
	1004, 409, 213, 221, 220, 222, 223, 224, 212, 211,
	115, 331, 25, 1003, 213, 221, 220, 222, 223, 224,
	78, 437, 335, 331, 1002, 343, 1001, 467, 77, 874,
	997, 428, 375, 597, 77, 221, 220, 222, 223, 224,
	61, 390, 78, 914, 395, 396, 137, 879, 137, 137,
	429, 585, 496, 876, 434, 405, 860, 859, 3, 638,
	93, 211, 858, 433, 857, 510, 856, 221, 220, 222,
	223, 224, 855, 376, 488, 852, 61, 830, 827, 376,
	376, 820, 804, 77, 797, 778, 773, 772, 771, 764,
	35, 763, 744, 468, 742, 729, 191, 494, 495, 105,
	376, 550, 550, 550, 727, 77, 685, 677, 676, 675,
	491, 492, 673, 540, 61, 493, 633, 138, 544, 545,
	543, 551, 541, 138, 289, 269, 539, 519, 555, 518,
	137, 515, 150, 515, 515, 514, 294, 516, 517, 472,
	598, 78, 532, 549, 318, 457, 294, 462, 458, 26,
	531, 410, 128, 21, 546, 337, 338, 336, 97, 614,
	144, 986, 137, 615, 35, 985, 562, 984, 284, 584,
	983, 137, 138, 137, 593, 599, 118, 25, 279, 982,
	138, 948, 554, 552, 553, 941, 937, 935, 934, 3,
	927, 926, 897, 883, 586, 710, 172, 682, 658, 173,
	174, 620, 177, 178, 179, 181, 530, 185, 601, 592,
	648, 611, 600, 602, 610, 222, 223, 224, 265, 653,
	529, 528, 527, 526, 525, 190, 636, 195, 524, 626,
	106, 107, 108, 474, 271, 272, 273, 274, 275, 296,
	297, 298, 473, 456, 432, 148, 662, 143, 590, 251,
	681, 668, 669, 670, 245, 459, 244, 234, 233, 232,
	61, 231, 239, 317, 291, 316, 1084, 61, 520, 958,
	21, 651, 190, 117, 306, 659, 188, 622, 374, 403,
	471, 1113, 629, 631, 660, 426, 376, 137, 460, 286,
	697, 698, 573, 138, 577, 26, 397, 398, 938, 936,
	644, 699, 26, 792, 143, 933, 782, 294, 294, 308,
	35, 1016, 689, 284, 139, 294, 148, 35, 913, 693,
	688, 321, 322, 25, 993, 574, 715, 782, 864, 912,
	25, 703, 723, 835, 663, 664, 665, 666, 667, 702,
	332, 712, 713, 711, 235, 578, 862, 991, 696, 865,
	236, 404, 61, 932, 3, 61, 61, 704, 931, 137,
	701, 930, 307, 929, 928, 726, 861, 863, 722, 854,
	981, 684, 419, 996, 949, 739, 575, 583, 470, 376,
	418, 1168, 1154, 1144, 315, 1143, 765, 766, 767, 768,
	770, 1138, 309, 310, 1124, 1111, 750, 166, 167, 1123,
	683, 21, 35, 1115, 622, 35, 35, 569, 417, 1097,
	754, 420, 421, 758, 759, 1091, 622, 752, 294, 1083,
	294, 294, 294, 1080, 769, 294, 1018, 1015, 1014, 969,
	957, 801, 105, 535, 925, 806, 788, 810, 622, 537,
	538, 796, 615, 924, 791, 798, 805, 262, 622, 817,
	790, 802, 787, 799, 919, 803, 61, 849, 116, 848,
	547, 61, 61, 785, 164, 165, 168, 169, 475, 477,
	480, 482, 485, 822, 570, 687, 823, 485, 490, 837,
	376, 650, 490, 490, 563, 824, 497, 61, 843, 838,
	839, 561, 21, 1137, 1110, 1088, 1087, 1136, 137, 1079,
	3, 1009, 761, 1078, 918, 760, 35, 3, 917, 219,
	655, 35, 35, 294, 844, 294, 294, 294, 654, 850,
	851, 137, 26, 590, 137, 872, 339, 1136, 622, 873,
	886, 881, 887, 867, 615, 137, 61, 35, 560, 871,
	1121, 890, 559, 909, 1078, 97, 622, 61, 884, 885,
	25, 1045, 825, 826, 917, 846, 900, 559, 899, 415,
	413, 1169, 908, 106, 107, 108, 21, 109, 110, 111,
	112, 113, 644, 840, 1140, 376, 644, 1116, 155, 1105,
	137, 452, 1082, 1019, 1006, 594, 35, 921, 786, 755,
	294, 566, 248, 1171, 1118, 1107, 376, 35, 1021, 943,
	942, 945, 1008, 238, 789, 920, 757, 952, 411, 619,
	680, 255, 1161, 61, 61, 953, 1160, 954, 61, 1142,
	909, 909, 61, 960, 951, 1141, 1103, 137, 944, 976,
	975, 154, 964, 923, 963, 922, 970, 156, 950, 908,
	908, 753, 956, 1137, 966, 967, 680, 376, 1079, 955,
	918, 989, 560, 988, 989, 652, 992, 1175, 1167, 61,
	1132, 157, 1114, 35, 35, 1061, 909, 1017, 35, 870,
	784, 1158, 35, 1148, 995, 1101, 971, 973, 691, 1166,
	974, 990, 1130, 1148, 1152, 908, 1177, 1020, 1013, 1163,
	1005, 1164, 1165, 999, 1151, 1150, 781, 210, 372, 239,
	998, 1162, 371, 373, 989, 137, 1032, 61, 678, 35,
	61, 1059, 21, 690, 909, 622, 1011, 61, 102, 21,
	61, 694, 400, 513, 909, 342, 399, 3, 1027, 1028,
	1029, 1030, 1031, 908, 346, 613, 203, 962, 1043, 777,
	880, 137, 376, 908, 808, 809, 61, 1064, 1060, 1173,
	821, 1128, 1149, 909, 989, 325, 1072, 35, 1129, 1146,
	35, 1131, 1149, 402, 401, 319, 622, 35, 1086, 426,
	35, 1092, 908, 609, 376, 1093, 904, 1081, 1062, 61,
	1055, 1071, 815, 61, 721, 61, 909, 103, 61, 61,
	909, 1012, 1098, 720, 1104, 1075, 35, 1108, 1109, 485,
	379, 378, 490, 607, 21, 908, 61, 21, 21, 908,
	1099, 61, 61, 606, 1102, 1119, 1117, 61, 258, 259,
	1125, 1126, 61, 446, 909, 447, 448, 1096, 105, 35,
	259, 1139, 1063, 35, 1026, 35, 605, 61, 35, 35,
	680, 61, 1155, 908, 1153, 260, 1156, 604, 1133, 869,
	1159, 581, 582, 904, 904, 1055, 35, 439, 1055, 1055,
	130, 35, 35, 1025, 1170, 1174, 741, 35, 740, 326,
	61, 466, 35, 202, 203, 204, 1055, 747, 819, 1176,
	1178, 1055, 1055, 738, 463, 464, 446, 35, 447, 448,
	449, 35, 1055, 465, 833, 68, 716, 718, 146, 904,
	841, 145, 105, 208, 84, 794, 795, 1055, 21, 968,
	847, 1055, 853, 21, 21, 78, 732, 733, 734, 735,
	35, 842, 836, 834, 462, 743, 486, 289, 269, 127,
	647, 522, 276, 158, 160, 680, 263, 282, 430, 21,
	1055, 446, 417, 447, 448, 449, 441, 904, 142, 444,
	1049, 1039, 1000, 700, 567, 141, 680, 904, 183, 106,
	107, 108, 142, 109, 110, 111, 112, 113, 446, 435,
	447, 448, 449, 441, 808, 809, 444, 189, 77, 328,
	327, 323, 100, 98, 98, 100, 904, 97, 21, 201,
	227, 228, 487, 627, 207, 69, 149, 1120, 1044, 21,
	241, 242, 29, 845, 412, 10, 9, 680, 589, 8,
	811, 813, 7, 414, 613, 64, 105, 352, 408, 904,
	353, 288, 287, 904, 189, 1049, 293, 295, 1049, 1049,
	127, 132, 267, 106, 107, 108, 270, 271, 272, 273,
	274, 275, 296, 297, 298, 1172, 1049, 1145, 183, 1127,
	1112, 1049, 1049, 92, 63, 62, 66, 904, 59, 959,
	65, 60, 1049, 961, 965, 21, 21, 291, 793, 580,
	21, 972, 424, 28, 21, 194, 423, 1049, 58, 206,
	576, 1049, 571, 568, 6, 217, 226, 225, 216, 215,
	218, 214, 20, 334, 19, 71, 163, 17, 643, 640,
	16, 484, 680, 15, 14, 888, 613, 11, 18, 13,
	1049, 21, 12, 1050, 355, 905, 366, 367, 368, 1048,
	370, 903, 194, 377, 501, 380, 381, 382, 383, 384,
	385, 386, 499, 4, 680, 183, 392, 355, 2, 0,
	0, 194, 0, 0, 0, 0, 193, 106, 107, 108,
	406, 109, 110, 111, 112, 113, 183, 0, 0, 21,
	416, 1046, 21, 0, 0, 425, 0, 0, 0, 21,
	212, 211, 21, 0, 847, 0, 213, 221, 220, 222,
	223, 224, 0, 0, 0, 868, 0, 440, 0, 0,
	0, 0, 0, 193, 0, 0, 194, 0, 21, 0,
	0, 0, 0, 0, 1085, 0, 0, 0, 105, 183,
	0, 469, 193, 217, 226, 225, 216, 215, 218, 214,
	0, 0, 277, 105, 0, 0, 0, 0, 0, 0,
	0, 21, 1100, 0, 269, 21, 183, 21, 0, 0,
	21, 21, 217, 226, 225, 216, 215, 218, 214, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 21, 0,
	1122, 0, 0, 21, 21, 0, 0, 0, 105, 21,
	0, 1046, 0, 0, 21, 0, 534, 0, 536, 0,
	183, 217, 226, 225, 216, 215, 218, 214, 0, 21,
	1157, 0, 455, 21, 194, 183, 0, 0, 212, 211,
	183, 183, 0, 0, 213, 221, 220, 222, 223, 224,
	183, 0, 0, 556, 0, 0, 416, 0, 0, 0,
	564, 0, 21, 0, 1122, 0, 0, 212, 211, 0,
	0, 0, 0, 213, 221, 220, 222, 223, 224, 106,
	107, 108, 331, 109, 110, 111, 112, 113, 194, 5,
	194, 194, 0, 0, 106, 107, 108, 0, 109, 110,
	111, 112, 113, 0, 0, 193, 212, 211, 0, 0,
	0, 0, 213, 221, 220, 222, 223, 224, 194, 0,
	994, 0, 0, 0, 0, 105, 217, 226, 225, 216,
	215, 218, 214, 0, 0, 0, 0, 0, 0, 106,
	107, 108, 87, 109, 110, 111, 112, 113, 127, 0,
	289, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 0, 0, 0, 355, 0, 183, 0,
	0, 0, 194, 183, 183, 183, 0, 152, 671, 0,
	0, 0, 161, 162, 0, 170, 171, 674, 0, 193,
	0, 176, 0, 0, 0, 180, 0, 184, 0, 186,
	187, 686, 0, 0, 194, 0, 0, 0, 0, 192,
	692, 212, 211, 194, 0, 194, 0, 213, 221, 220,
	222, 223, 224, 0, 425, 939, 0, 0, 192, 217,
	226, 225, 216, 215, 218, 214, 0, 0, 0, 0,
	0, 0, 0, 193, 243, 0, 0, 0, 217, 714,
	183, 216, 215, 218, 214, 0, 106, 107, 108, 0,
	271, 272, 273, 274, 275, 296, 297, 298, 0, 0,
	0, 0, 0, 0, 0, 193, 105, 268, 0, 268,
	0, 0, 0, 0, 193, 268, 193, 268, 302, 268,
	291, 0, 194, 0, 0, 0, 0, 311, 268, 313,
	314, 289, 269, 0, 0, 0, 320, 0, 183, 183,
	183, 183, 183, 0, 212, 211, 0, 774, 0, 0,
	213, 221, 220, 222, 223, 224, 0, 780, 783, 194,
	0, 0, 0, 212, 211, 0, 889, 0, 0, 213,
	221, 220, 222, 223, 224, 0, 0, 0, 0, 0,
	350, 800, 358, 183, 217, 226, 225, 216, 215, 218,
	214, 0, 105, 193, 0, 0, 0, 0, 0, 0,
	0, 0, 387, 0, 411, 358, 0, 0, 0, 105,
	0, 192, 0, 829, 0, 0, 0, 289, 269, 407,
	0, 0, 78, 0, 0, 0, 0, 0, 0, 0,
	193, 194, 416, 358, 0, 116, 268, 106, 107, 108,
	105, 271, 272, 273, 274, 275, 296, 297, 298, 268,
	268, 866, 814, 0, 0, 0, 0, 0, 0, 0,
	450, 0, 0, 0, 268, 0, 269, 454, 0, 212,
	211, 291, 0, 0, 0, 213, 221, 220, 222, 223,
	224, 0, 0, 882, 105, 77, 0, 0, 476, 478,
	479, 481, 0, 0, 0, 192, 0, 78, 0, 0,
	0, 268, 193, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 509, 0, 511, 0, 0, 0, 0,
	0, 0, 0, 106, 107, 108, 0, 271, 272, 273,
	274, 275, 296, 297, 298, 0, 0, 0, 0, 0,
	106, 107, 108, 940, 109, 110, 111, 112, 113, 587,
	0, 0, 0, 183, 0, 0, 0, 291, 0, 0,
	77, 0, 0, 0, 0, 0, 0, 183, 0, 183,
	194, 106, 107, 108, 138, 271, 272, 273, 274, 275,
	0, 625, 127, 0, 0, 0, 0, 0, 0, 0,
	634, 0, 637, 194, 0, 0, 194, 0, 0, 0,
	0, 0, 0, 591, 268, 595, 0, 194, 268, 268,
	0, 0, 0, 0, 0, 106, 107, 108, 268, 109,
	110, 111, 112, 113, 616, 0, 454, 0, 618, 105,
	0, 0, 591, 624, 0, 0, 628, 591, 591, 632,
	0, 193, 0, 635, 624, 0, 0, 645, 0, 138,
	0, 0, 194, 451, 0, 0, 0, 0, 0, 105,
	0, 388, 0, 0, 193, 0, 0, 193, 0, 192,
	0, 0, 0, 105, 0, 0, 0, 0, 193, 0,
	0, 100, 0, 416, 0, 656, 657, 0, 0, 0,
	105, 0, 0, 624, 358, 661, 0, 0, 0, 194,
	0, 183, 0, 105, 0, 0, 192, 0, 0, 0,
	0, 0, 0, 0, 0, 289, 269, 0, 0, 0,
	0, 105, 0, 193, 0, 0, 0, 127, 289, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 425, 0,
	0, 0, 0, 0, 0, 0, 289, 269, 0, 0,
	812, 0, 358, 0, 0, 0, 0, 0, 0, 591,
	106, 107, 108, 719, 109, 110, 111, 112, 113, 0,
	193, 591, 0, 0, 0, 0, 0, 194, 762, 268,
	268, 717, 416, 0, 0, 0, 0, 0, 0, 0,
	106, 107, 108, 591, 109, 110, 111, 112, 113, 0,
	628, 0, 0, 591, 106, 107, 108, 0, 109, 110,
	111, 112, 113, 194, 105, 0, 0, 0, 0, 0,
	751, 106, 107, 108, 0, 271, 272, 273, 274, 275,
	296, 297, 298, 0, 106, 107, 108, 0, 271, 272,
	273, 274, 275, 296, 297, 298, 0, 0, 193, 0,
	0, 0, 106, 107, 108, 291, 271, 272, 273, 274,
	275, 296, 297, 298, 0, 0, 0, 0, 291, 0,
	217, 226, 225, 216, 215, 218, 214, 0, 591, 0,
	0, 0, 268, 591, 193, 0, 291, 0, 0, 0,
	0, 565, 0, 268, 268, 0, 0, 268, 818, 0,
	0, 591, 0, 624, 0, 0, 0, 591, 591, 0,
	0, 0, 0, 831, 832, 0, 0, 875, 217, 226,
	225, 216, 215, 218, 214, 0, 0, 0, 0, 0,
	217, 672, 225, 216, 215, 218, 214, 0, 0, 0,
	896, 0, 0, 898, 0, 106, 107, 108, 0, 109,
	110, 111, 112, 113, 901, 212, 211, 0, 0, 0,
	0, 213, 221, 220, 222, 223, 224, 105, 79, 80,
	81, 0, 102, 0, 97, 100, 98, 99, 22, 73,
	78, 0, 0, 37, 38, 0, 0, 0, 268, 268,
	30, 0, 0, 116, 0, 31, 46, 0, 32, 947,
	0, 628, 0, 212, 211, 0, 0, 0, 0, 213,
	221, 220, 222, 223, 224, 212, 211, 0, 0, 0,
	0, 213, 221, 220, 222, 223, 224, 0, 0, 0,
	0, 0, 0, 94, 0, 0, 0, 95, 0, 0,
	0, 103, 0, 77, 0, 0, 977, 0, 0, 0,
	1052, 1051, 0, 910, 105, 0, 624, 0, 0, 34,
	101, 97, 41, 39, 40, 36, 42, 0, 0, 0,
	591, 0, 0, 0, 44, 45, 507, 508, 0, 49,
	50, 51, 52, 43, 54, 55, 56, 47, 53, 57,
	0, 0, 0, 911, 0, 0, 33, 48, 106, 107,
	108, 0, 109, 110, 111, 112, 113, 0, 0, 0,
	115, 88, 91, 89, 90, 114, 0, 0, 0, 0,
	0, 591, 0, 0, 1042, 0, 85, 86, 0, 0,
	0, 96, 72, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 105, 79, 80, 81, 0, 102, 0, 97,
	100, 98, 99, 22, 73, 78, 0, 0, 37, 38,
	1074, 0, 0, 0, 0, 30, 0, 0, 116, 0,
	31, 46, 0, 32, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1056, 1057, 106, 107, 108, 0, 109,
	110, 111, 112, 113, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 94, 0,
	0, 0, 95, 0, 0, 0, 103, 0, 77, 0,
	0, 0, 0, 0, 0, 503, 502, 0, 74, 0,
	0, 1089, 1090, 0, 34, 101, 358, 41, 39, 40,
	36, 42, 0, 0, 0, 0, 0, 0, 0, 44,
	45, 507, 508, 75, 49, 50, 51, 52, 43, 54,
	55, 56, 47, 53, 57, 0, 0, 0, 0, 0,
	0, 33, 48, 106, 107, 108, 0, 109, 110, 111,
	112, 113, 0, 0, 0, 115, 88, 91, 89, 90,
	114, 0, 0, 0, 217, 533, 225, 216, 215, 218,
	214, 85, 86, 0, 0, 0, 96, 72, 105, 79,
	80, 81, 0, 102, 0, 97, 100, 98, 99, 22,
	73, 78, 0, 0, 37, 38, 0, 0, 0, 0,
	0, 30, 0, 0, 116, 0, 31, 46, 0, 32,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 94, 0, 0, 0, 95, 212,
	211, 0, 103, 0, 77, 213, 221, 220, 222, 223,
	224, 907, 906, 0, 910, 0, 0, 0, 0, 0,
	34, 101, 0, 41, 39, 40, 36, 42, 0, 0,
	0, 0, 0, 0, 0, 44, 45, 0, 0, 0,
	49, 50, 51, 52, 43, 54, 55, 56, 47, 53,
	57, 0, 0, 0, 911, 0, 0, 33, 48, 106,
	107, 108, 0, 109, 110, 111, 112, 113, 0, 0,
	0, 115, 88, 91, 89, 90, 114, 0, 0, 0,
	217, 226, 0, 216, 215, 218, 214, 85, 86, 0,
	0, 0, 96, 72, 105, 79, 80, 81, 0, 102,
	0, 97, 100, 98, 99, 22, 73, 78, 0, 0,
	37, 38, 0, 0, 0, 0, 0, 30, 0, 0,
	116, 0, 31, 46, 0, 32, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	94, 0, 0, 0, 95, 212, 211, 0, 103, 0,
	77, 213, 221, 220, 222, 223, 224, 24, 23, 0,
	74, 0, 0, 0, 0, 0, 34, 101, 0, 41,
	39, 40, 36, 42, 0, 0, 0, 0, 0, 0,
	0, 44, 45, 0, 0, 75, 49, 50, 51, 52,
	43, 54, 55, 56, 47, 53, 57, 0, 0, 0,
	0, 0, 0, 33, 48, 106, 107, 108, 0, 109,
	110, 111, 112, 113, 0, 0, 0, 115, 88, 91,
	89, 90, 114, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 86, 0, 0, 0, 96, 72,
	105, 79, 80, 81, 0, 102, 0, 97, 100, 98,
	99, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 0, 0, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 105, 79, 80, 81, 0, 102, 0, 97, 100,
	98, 99, 0, 73, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 123, 0, 94, 116, 0, 0,
	95, 0, 0, 0, 103, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 122, 0, 0, 0, 0, 0,
	0, 0, 0, 101, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 94, 0, 0,
	0, 95, 0, 0, 0, 103, 0, 0, 0, 0,
	0, 0, 0, 0, 125, 122, 0, 0, 0, 360,
	0, 106, 107, 108, 101, 109, 110, 111, 112, 113,
	0, 0, 0, 115, 88, 361, 89, 359, 362, 363,
	364, 365, 0, 0, 0, 0, 0, 0, 0, 85,
	86, 357, 0, 0, 96, 72, 393, 0, 0, 0,
	360, 0, 106, 107, 108, 0, 109, 110, 111, 112,
	113, 0, 0, 0, 115, 88, 361, 89, 359, 362,
	363, 364, 365, 0, 0, 0, 0, 0, 0, 0,
	85, 86, 357, 0, 0, 96, 72, 105, 79, 80,
	81, 0, 102, 0, 97, 100, 98, 99, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	123, 0, 0, 116, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 105, 79, 80, 81, 0, 102,
	0, 97, 100, 98, 99, 0, 73, 78, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 123, 0, 0,
	116, 0, 0, 94, 0, 0, 0, 95, 0, 0,
	0, 103, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 122, 0, 0, 0, 0, 0, 0, 0, 0,
	101, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	94, 0, 0, 0, 95, 0, 0, 0, 103, 0,
	77, 0, 0, 0, 0, 0, 0, 125, 122, 0,
	0, 0, 0, 0, 0, 0, 360, 101, 106, 107,
	108, 0, 109, 110, 111, 112, 113, 0, 0, 0,
	115, 88, 361, 89, 359, 362, 363, 364, 365, 0,
	0, 0, 0, 0, 0, 0, 85, 86, 0, 0,
	0, 96, 72, 124, 0, 106, 107, 108, 0, 109,
	110, 111, 112, 113, 0, 0, 0, 115, 88, 91,
	89, 90, 114, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 86, 0, 0, 0, 96, 72,
	105, 79, 80, 81, 0, 102, 0, 97, 100, 98,
	99, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 0, 0, 116, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 105, 79, 80,
	81, 0, 102, 0, 97, 100, 98, 99, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	123, 0, 0, 116, 0, 0, 94, 0, 0, 0,
	95, 0, 0, 0, 103, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 122, 0, 0, 0, 0, 0,
	0, 0, 200, 101, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 94, 0, 0, 0, 95, 0, 0,
	0, 103, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 122, 0, 0, 0, 0, 0, 0, 0, 199,
	101, 106, 107, 108, 0, 109, 110, 111, 112, 113,
	0, 0, 0, 115, 88, 91, 89, 90, 114, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	86, 0, 0, 0, 96, 72, 124, 0, 106, 107,
	108, 0, 109, 110, 111, 112, 113, 0, 0, 0,
	115, 88, 91, 89, 90, 114, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 86, 357, 0,
	0, 96, 72, 105, 79, 80, 81, 0, 102, 0,
	97, 100, 98, 99, 0, 73, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 123, 0, 0, 116,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	105, 79, 80, 81, 0, 102, 0, 97, 100, 98,
	99, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 0, 0, 116, 0, 0, 94,
	0, 0, 0, 95, 0, 0, 0, 103, 210, 0,
	0, 0, 0, 0, 0, 0, 125, 122, 0, 0,
	0, 0, 0, 0, 0, 0, 101, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 94, 0, 0, 0,
	95, 0, 0, 0, 103, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 122, 0, 0, 0, 0, 0,
	0, 0, 124, 101, 106, 107, 108, 0, 109, 110,
	111, 112, 113, 0, 0, 0, 115, 88, 91, 89,
	90, 114, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 86, 0, 0, 0, 96, 72, 124,
	0, 106, 107, 108, 0, 109, 110, 111, 112, 113,
	0, 0, 0, 115, 88, 91, 89, 90, 114, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	86, 0, 0, 0, 96, 72, 105, 79, 80, 81,
	0, 102, 0, 97, 100, 98, 99, 0, 73, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 123,
	0, 0, 116, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 105, 79, 80, 81, 0, 102, 0,
	97, 100, 98, 99, 0, 73, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 123, 0, 0, 596,
	0, 0, 94, 0, 0, 0, 95, 0, 0, 0,
	103, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	122, 0, 0, 0, 0, 0, 0, 0, 0, 101,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 94,
	0, 0, 0, 95, 0, 0, 0, 103, 0, 0,
	0, 0, 0, 0, 0, 0, 125, 122, 0, 0,
	0, 0, 0, 0, 0, 124, 101, 106, 107, 108,
	0, 109, 110, 111, 112, 113, 0, 0, 0, 115,
	88, 91, 89, 90, 114, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 86, 0, 0, 0,
	96, 119, 124, 0, 106, 107, 108, 0, 109, 110,
	111, 112, 113, 0, 0, 0, 115, 88, 91, 89,
	90, 114, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 85, 86, 0, 0, 0, 96, 72, 105,
	79, 333, 81, 0, 102, 0, 97, 100, 98, 99,
	0, 73, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 123, 0, 0, 116, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 94, 0, 0, 0, 95,
	0, 0, 0, 103, 0, 0, 0, 0, 0, 0,
	0, 0, 125, 122, 0, 0, 0, 0, 0, 0,
	0, 0, 101, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 124, 0,
	106, 107, 108, 0, 109, 110, 111, 112, 113, 0,
	0, 0, 115, 88, 91, 89, 90, 114, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 85, 86,
	0, 0, 0, 96, 72,
}

var yyPact = [...]int{
	3000, -1000, 412, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3982, 3816, -1000, -1000, 1115, 125, 1230,
	435, 1165, 1162, 447, 2580, -1000, 834, 1270, 1271, 2340,
	2340, 660, 2340, 3816, -1000, -1000, 3816, 3816, 2199, 3816,
	3816, 3816, 3816, 3816, 3816, -1000, 2340, 2340, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 418, -1000, -1000,
	-1000, -1000, 3410, -1000, 3576, 1283, 1108, 1172, 918, -1000,
	-1000, -1000, -1000, -1000, 2377, 3816, 3816, -81, 392, 390,
	389, 388, -1000, 488, 311, 3816, 3816, -1000, -1000, -1000,
	-1000, 2340, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 387, 385, -90, 3000, 800, 3410,
	-1000, -1000, 380, 378, 376, 3816, 820, 2377, -1000, 1067,
	1097, 1115, 1230, 1211, 1966, 1207, 1504, -1000, 106, 1244,
	1214, 1276, 1681, 3816, 1966, 2340, 1966, -1000, 918, 67,
	416, -1000, 565, -1000, 2340, 1519, 2340, 2340, 522, 401,
	-1000, 1003, -1000, 2340, -1000, -1000, -1000, -1000, 3816, 3816,
	1263, 30, 993, 1126, 1262, -1000, 1261, -1000, -1000, 32,
	-81, -1000, -1000, 1471, -81, -1000, -1000, 4185, 3816, 152,
	287, 285, 286, 424, 1244, 732, 74, 954, 1276, 376,
	-1000, -1000, 966, 966, 966, -1000, 64, 2340, -1000, 3207,
	-1000, 3816, 3816, 3816, 925, 3816, 927, 100, 3816, 1032,
	3816, 3816, 3816, 3816, 3816, 3816, 3816, -1000, -1000, 2185,
	3779, 3816, 3166, 918, 918, 100, 100, 951, 995, -1000,
	-1000, 1737, -1000, 502, 918, 3816, 1312, -1000, 3000, 285,
	281, 3816, 817, 767, 766, 3816, 582, 573, 3816, 3816,
	3373, 1067, 1244, 1966, 1218, 59, -1000, -1000, -1000, -1000,
	375, -1000, -1000, -1000, -1000, -1000, 1966, 1681, 1251, 39,
	1214, 1111, 3816, -1000, 36, -1000, 49, 2155, -1000, -1000,
	-1000, 1198, -1000, -1000, 1564, 374, -1000, -1000, -1000, 275,
	-1000, 386, 419, 1151, 3816, 1276, 3816, 580, 411, 373,
	364, -1000, -1000, -1000, -1000, 3816, 3816, 3816, 3816, 3816,
	1201, -1000, -1000, 1287, 3816, 3816, 1273, 1273, 1966, 3816,
	3816, 3816, -1000, 3816, 2377, -1000, -1000, -1000, -1000, 2668,
	2340, 1276, 2340, 96, 952, 424, -1000, 424, 424, 1172,
	399, -1000, 34, 1203, -1000, 2377, -1000, -1000, -56, 359,
	355, 354, 353, 352, 351, 337, 172, 204, 204, 1009,
	2753, 3816, 100, 3816, -1000, 3410, -1000, 204, 100, 100,
	350, 350, -1000, -1000, -1000, 2919, 1737, -1000, -1000, 256,
	3816, 252, 140, -1000, 250, 3816, 3613, -1000, -1000, 100,
	274, 274, 274, 925, -1000, 3816, 1442, -1000, -1000, 749,
	-1000, 3816, 696, 3000, 689, 3816, 2329, 799, 1235, 670,
	539, 508, -1000, 33, 1102, 2377, -1000, 579, 1214, 325,
	728, 1966, 4019, 271, 1214, 1681, 1519, 1111, 1100, 1088,
	2377, 1059, 1049, 1017, 1131, 395, -1000, -1000, -1000, -1000,
	-1000, 2340, 116, 1564, -1000, 2340, 3816, -1000, 332, 728,
	2340, 106, -1000, 1124, 121, 728, 2340, 246, -1000, 2377,
	2010, 2340, 106, 189, 2340, -1000, -81, -1000, -81, -81,
	-1000, -81, -1000, -1000, 27, 1202, 1276, -1000, -1000, -1000,
	24, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 686, 410,
	-1000, -1000, 3982, 3816, -1000, -1000, -1000, -1000, -1000, 724,
	-1000, 716, 2340, 2340, 970, -1000, -1000, 970, -1000, 329,
	2340, 3207, 2340, 3779, 918, 918, 918, 918, 3816, 3816,
	3816, -1000, -1000, 3816, 2389, -1000, 204, -1000, -1000, -1000,
	242, -1000, 3816, -1000, 239, 238, 237, 936, -1000, 163,
	-1000, 328, -1000, -1000, 600, 236, 3816, 680, 764, 3000,
	3816, 891, -1000, -1000, 2377, 3816, 3000, -1000, 3816, -1000,
	-1000, 510, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3373,
	465, -1000, -1000, 1234, 1111, 100, 1935, -1000, 1244, 16,
	114, -82, -1000, 14, 6, -81, -90, 326, 728, -1000,
	1214, -1000, 1100, -1000, 3816, 3816, 2247, 2229, 1039, -1000,
	1030, 1017, -1000, 1186, 311, 1, -1000, -1000, -1000, -2,
	728, 234, -9, 225, -17, -1000, 1179, 2340, 1142, -1000,
	728, 1125, 1123, -1000, -1000, -1000, 224, -1000, 1197, 222,
	-21, -1000, -1000, -23, 1136, -14, 3816, 2340, -1000, 3816,
	851, 2668, 797, 815, 2668, 2668, 711, 708, 106, 221,
	-1000, -1000, 219, 3816, 3816, 3816, 3613, 3816, 218, 217,
	216, 1737, 3816, -1000, 26, -1000, -1000, -1000, 100, 215,
	-38, -1000, 3816, -1000, 915, 474, 1718, 882, 668, -1000,
	796, -1000, 1843, 813, 539, 1078, -1000, 468, -1000, 1168,
	-1000, 1100, -1000, 214, 1214, 728, 3816, -1000, 3816, 1519,
	728, 212, -1000, 1115, 2377, -1000, 1068, 311, 1213, 311,
	2216, 1918, 1028, -40, 395, 3816, 211, 988, 728, 1196,
	2340, -1000, -1000, -1000, 728, 728, 208, -60, 3816, 207,
	2340, 3816, 1195, 504, 1194, 1276, 1276, 3816, 1193, 1276,
	-1000, -1000, -1000, -1000, -1000, 2668, 762, 3816, 664, 662,
	2668, 2668, 205, 1184, 559, 202, 196, 194, 192, 187,
	186, 556, 536, 518, 1737, -1000, 3816, -1000, -1000, 100,
	1314, -1000, 1103, -1000, -1000, 881, 3000, -1000, -1000, 3816,
	510, -1000, -1000, -1000, -1000, -1000, 1115, 303, -1000, -1000,
	2377, 183, -33, 177, 978, 1067, -1000, -1000, 3816, 324,
	983, 1213, 311, 1068, 311, 1832, 395, -1000, -42, -35,
	254, 323, -1000, 106, -1000, -1000, -1000, 1179, 2340, 2377,
	-1000, -1000, -81, -1000, 106, 2834, 500, -1000, -1000, -1000,
	1136, -1000, 489, 173, 715, 659, 2668, 795, 845, 843,
	648, 639, -1000, 322, 321, 554, 553, 551, 548, 543,
	495, 319, 318, 463, 317, 462, 1615, -1000, 3816, 316,
	-1000, 863, -1000, 1067, 100, -1000, -1000, -1000, 3816, 248,
	312, 576, 2377, 2340, -1000, -1000, 983, -1000, 1068, 311,
	-1000, -1000, 3816, -1000, 3816, 100, -1000, 728, -1000, -1000,
	-1000, -1000, 635, 408, -1000, -1000, 3982, 3816, -1000, -1000,
	3576, 3816, 2834, 2834, 1181, 634, 761, 2668, 3816, 890,
	-1000, 2668, -1000, -1000, 840, 839, 106, 561, 310, 301,
	298, 296, 292, 122, 561, 561, 537, 561, 514, -1000,
	1510, 1115, -1000, 575, -1000, 160, 100, -1000, 728, 1233,
	156, -1000, -1000, 154, 143, -1000, 130, -1000, 2834, 792,
	811, 707, 48, 945, 1276, -1000, 633, 632, 482, 879,
	631, -1000, 791, -1000, 807, -1000, -1000, 115, 113, -1000,
	1118, 1086, 561, 561, 561, 561, 561, 561, 112, 1115,
	111, 101, 107, 75, -1000, 103, 1232, -1000, -1000, 102,
	-1000, -1000, -1000, -1000, 129, -1000, 2834, 758, 3816, 2493,
	2340, 2340, 63, 940, -1000, -1000, 2834, -1000, 877, 2668,
	-1000, 3816, -1000, -1000, -1000, 1084, 3816, 85, 82, 81,
	80, 76, 72, -1000, -1000, 561, -1000, 561, -1000, -1000,
	79, 100, -1000, 710, 628, 2834, 790, 624, 405, -1000,
	-1000, 3982, 3816, -1000, -1000, -1000, 702, 701, 2340, 2340,
	620, -1000, 861, 3373, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 69, -55, 100, -1000, -1000, 614, 751, 2834, 3816,
	888, -1000, 2834, 836, 2493, 787, 804, 2493, 2493, 700,
	601, -1000, -1000, 444, -1000, -1000, -1000, 874, 608, -1000,
	785, -1000, 803, -1000, -1000, 2493, 747, 3816, 604, 599,
	2493, 2493, -1000, 976, -1000, 872, 2834, -1000, 3816, 704,
	596, 2493, 782, 835, 829, 590, 588, -1000, 977, 912,
	911, 898, -1000, 859, 587, 734, 2493, 3816, 884, -1000,
	2493, -1000, -1000, 826, 822, 929, 906, -1000, 908, 893,
	-1000, -1000, -1000, -1000, 870, 586, -1000, 769, -1000, 802,
	-1000, -1000, 967, -1000, -1000, -1000, -1000, -1000, 869, 2493,
	-1000, 3816, -1000, 902, -1000, -1000, 854, -1000, -1000,
}

var yyPgo = [...]int{
	0, 52, 58, 31, 9, 240, 70, 1438, 63, 21,
	35, 1433, 1432, 1424, 1421, 26, 7, 1419, 1415, 1413,
	1412, 1409, 1408, 1407, 65, 27, 30, 1404, 1403, 1401,
	49, 1400, 33, 1399, 1398, 43, 38, 1397, 1396, 1395,
	1394, 1392, 1649, 1384, 85, 89, 1302, 614, 68, 40,
	75, 39, 32, 25, 34, 1383, 1382, 55, 1380, 48,
	1373, 1379, 79, 1378, 80, 72, 117, 1204, 452, 57,
	360, 53, 11, 1376, 1372, 1369, 1368, 0, 1361, 81,
	1360, 1358, 1356, 22, 1355, 1354, 1353, 5, 18, 45,
	16, 1350, 1349, 2, 1347, 1345, 41, 1336, 1332, 1327,
	1326, 86, 71, 77, 1322, 17, 24, 589, 1321, 37,
	1320, 1317, 1315, 15, 59, 1313, 44, 20, 67, 76,
	54, 62, 1312, 1309, 1308, 47, 1306, 1305, 28, 61,
	8, 19, 10, 14, 3, 6, 42, 1304, 12, 1303,
	13, 1298, 4, 1297, 1702, 126, 23, 50, 1296, 87,
	1195, 1295, 83, 110, 78, 69, 56, 66, 84, 1294,
	46, 809,
}

var yyR1 = [...]int{
	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 6, 6,
	7, 7, 8, 8, 8, 8, 8, 9, 9, 10,
	10, 12, 12, 11, 11, 11, 11, 11, 13, 13,
	13, 13, 13, 13, 14, 14, 15, 15, 15, 15,
	15, 16, 16, 17, 17, 18, 18, 18, 18, 18,
	19, 19, 19, 19, 19, 19, 20, 20, 20, 20,
	21, 21, 21, 21, 21, 22, 22, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 24, 24, 25,
	25, 26, 26, 26, 26, 26, 27, 27, 27, 27,
	27, 27, 27, 28, 28, 28, 28, 29, 29, 30,
	30, 31, 31, 31, 31, 32, 33, 33, 34, 35,
	35, 36, 36, 36, 37, 37, 37, 37, 37, 38,
	38, 38, 38, 38, 38, 38, 39, 39, 39, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 41, 41, 41, 42, 42, 42, 42,
	43, 43, 43, 43, 44, 44, 44, 44, 45, 45,
	46, 47, 48, 48, 49, 49, 50, 50, 51, 51,
	52, 52, 53, 53, 53, 54, 54, 54, 55, 55,
	56, 56, 57, 57, 57, 58, 58, 58, 59, 59,
	60, 60, 61, 61, 62, 62, 63, 63, 63, 63,
	63, 64, 65, 66, 66, 66, 66, 66, 67, 67,
	67, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 69, 70,
	70, 70, 71, 71, 72, 72, 73, 73, 74, 74,
	75, 75, 75, 76, 76, 77, 78, 79, 79, 79,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 81,
	81, 81, 81, 81, 81, 81, 82, 82, 82, 82,
	83, 83, 84, 84, 84, 84, 84, 84, 84, 84,
	85, 85, 85, 85, 85, 85, 86, 86, 87, 87,
	87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
	88, 89, 89, 90, 90, 91, 91, 92, 92, 92,
	93, 93, 93, 94, 94, 95, 95, 96, 96, 97,
	97, 97, 97, 97, 99, 99, 99, 98, 98, 98,
	98, 100, 100, 100, 100, 101, 101, 104, 104, 105,
	105, 105, 106, 106, 106, 106, 107, 107, 107, 107,
	107, 107, 107, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 109, 109, 110, 110, 111, 111, 111,
	112, 113, 113, 114, 114, 115, 115, 116, 116, 117,
	117, 118, 118, 119, 119, 102, 102, 103, 103, 120,
	120, 121, 121, 122, 122, 122, 122, 123, 124, 125,
	125, 126, 126, 126, 126, 126, 126, 126, 126, 127,
	127, 128, 128, 129, 129, 130, 130, 131, 131, 132,
	132, 133, 133, 134, 134, 135, 135, 136, 136, 137,
	137, 138, 138, 139, 139, 140, 140, 141, 141, 142,
	142, 143, 143, 144, 144, 144, 144, 144, 144, 144,
	144, 144, 145, 146, 146, 147, 148, 148, 149, 149,
	150, 151, 152, 153, 153, 154, 154, 155, 155, 156,
	156, 157, 157, 157, 158, 158, 159, 159, 160, 160,
	161, 161,
}

var yyR2 = [...]int{
	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 8, 8, 9, 9, 1, 1, 1,
	2, 1, 1, 7, 8, 6, 1, 1, 7, 8,
	6, 1, 1, 1, 1, 1, 6, 8, 8, 9,
	9, 1, 2, 1, 1, 7, 8, 6, 1, 1,
	7, 8, 6, 1, 1, 1, 2, 2, 1, 2,
	4, 4, 4, 4, 2, 1, 1, 6, 8, 5,
	6, 8, 5, 7, 7, 7, 7, 1, 3, 1,
	3, 0, 1, 1, 2, 2, 5, 5, 2, 4,
	2, 3, 5, 6, 8, 5, 3, 1, 3, 1,
	3, 4, 2, 4, 3, 1, 1, 3, 3, 1,
	3, 1, 1, 3, 9, 10, 10, 12, 3, 0,
	1, 1, 1, 1, 2, 2, 5, 6, 3, 4,
	4, 4, 4, 4, 4, 2, 2, 2, 2, 4,
	4, 2, 2, 2, 4, 1, 2, 2, 4, 2,
	2, 1, 2, 2, 3, 4, 3, 5, 4, 6,
	8, 10, 9, 11, 5, 4, 4, 4, 1, 1,
	3, 2, 0, 2, 0, 2, 0, 3, 0, 2,
	0, 3, 1, 6, 5, 0, 1, 2, 1, 1,
	0, 1, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 6, 9, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 1, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 1, 3,
	1, 6, 1, 3, 1, 3, 2, 4, 1, 1,
	0, 1, 1, 1, 1, 3, 3, 3, 1, 6,
	3, 3, 3, 3, 4, 4, 5, 6, 6, 3,
	4, 4, 3, 4, 4, 4, 4, 4, 2, 3,
	3, 3, 3, 3, 2, 2, 3, 3, 2, 2,
	0, 1, 4, 4, 6, 8, 3, 4, 4, 4,
	5, 5, 5, 5, 5, 1, 5, 10, 8, 9,
	9, 9, 9, 9, 9, 8, 8, 10, 8, 10,
	2, 1, 5, 0, 3, 2, 5, 2, 2, 2,
	2, 2, 2, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 6, 6,
	8, 6, 8, 6, 8, 1, 1, 1, 1, 1,
	2, 3, 1, 2, 3, 4, 1, 2, 3, 1,
	1, 1, 3, 4, 5, 6, 5, 6, 5, 6,
	7, 6, 7, 2, 4, 1, 1, 1, 3, 1,
	5, 0, 1, 4, 5, 0, 2, 1, 3, 1,
	3, 1, 3, 1, 3, 1, 3, 1, 3, 1,
	3, 1, 3, 6, 9, 5, 8, 7, 3, 1,
	3, 10, 13, 9, 12, 9, 12, 8, 11, 5,
	6, 4, 5, 0, 2, 4, 5, 0, 2, 4,
	5, 0, 2, 4, 5, 0, 2, 4, 5, 0,
	2, 4, 5, 0, 2, 4, 5, 0, 2, 4,
	5, 0, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 1, 3, 1, 3,
	1, 1, 1, 0, 1, 0, 1, 0, 1, 0,
	1, 1, 1, 1, 0, 1, 0, 1, 0, 1,
	1, 1,
}

var yyChk = [...]int{
	-1000, -1, -7, -5, -11, -42, -43, -122, -123, -126,
	-127, -23, -20, -21, -27, -28, -31, -37, -22, -40,
	-41, -68, 15, 88, 87, -8, -10, -44, -60, -46,
	27, 32, 35, 133, 96, -147, 102, 20, 21, 100,
	101, 99, 103, 120, 111, 112, 33, 124, 134, 116,
	117, 118, 119, 125, 121, 122, 123, 126, -63, -81,
	-78, -77, -84, -85, -112, -80, -82, -145, -150, -151,
	-152, -39, 169, 16, 90, 115, -45, 80, 17, 5,
	6, 7, -64, -65, -67, 163, 164, -144, 148, 150,
	151, 149, -86, -70, 70, 74, 168, 11, 13, 14,
	12, 97, 9, 78, -66, 4, 135, 136, 137, 139,
	140, 141, 142, 143, 152, 147, 30, 161, -68, 169,
	-77, -147, 88, 27, 133, 87, -113, -67, -68, -52,
	45, -44, -46, 24, 19, 27, 22, -77, 169, -47,
	-48, 25, 18, 169, 25, 36, 36, -149, 169, -148,
	-145, -149, -144, -145, 97, 44, 103, 127, -150, -152,
	-150, -144, -144, -38, 104, 105, 37, 38, 106, 107,
	-144, -144, -68, -68, -68, -152, -144, -68, -68, -68,
	-144, -68, -117, -67, -144, -68, -144, -144, 158, -67,
	-68, -117, -42, -60, -46, -68, -145, -146, -9, 133,
	96, 6, 65, 66, 67, -62, -61, -159, 31, -153,
	79, 157, 156, 162, 77, 75, 74, 71, 76, -161,
	164, 163, 165, 166, 167, 73, 72, -67, -67, 172,
	169, 169, 169, 169, 169, 156, 162, -154, -161, 74,
	-77, -67, -67, -144, 169, 169, 172, -1, 92, -117,
	-83, 169, -113, -136, -114, 91, -53, -59, 51, 52,
	48, -52, -47, 25, -103, -101, -96, -98, -144, 30,
	-97, 139, 140, 141, 142, 143, 25, 18, -102, -96,
	-48, -49, 23, -146, -145, -119, -107, -104, -108, 29,
	-105, 169, -101, -100, -77, -99, 144, 145, 146, -83,
	-117, -101, -144, -101, -153, 171, 158, 97, 44, 127,
	128, -144, -96, -144, -144, 162, 43, 162, 43, 62,
	-144, -68, -68, 18, 62, 62, 43, 18, 18, 171,
	62, 171, -68, 6, -67, 170, 170, 170, 170, 94,
	71, 171, 71, -145, -146, -158, 68, -158, -158, 171,
	-144, -121, -111, -110, -69, -67, -87, 165, -144, 151,
	133, 149, 152, 153, 154, 155, -67, -67, -67, -154,
	-67, 75, 71, 76, -70, 169, -77, -67, 69, 68,
	-67, -67, -67, -67, -67, -67, -67, -144, 6, -83,
	-153, -83, -67, 170, -121, -153, -153, -70, -70, 75,
	71, 69, 68, 77, 149, -153, -67, -144, 6, -1,
	170, 91, -137, 93, -115, 93, -67, -68, 98, 99,
	-68, -68, -72, -73, -74, -67, -87, -53, -48, -101,
	20, 171, 169, -101, -119, 18, 171, -49, -50, 46,
	-67, 60, -155, -157, 63, 171, 55, 57, 58, 59,
	-144, 28, -107, -77, -144, 28, 169, 170, 62, 169,
	169, -160, 28, 33, 34, 42, 20, -83, -149, -67,
	98, 169, 28, 169, 169, -68, -144, -68, -144, -144,
	-68, -144, -68, -30, -29, -68, 25, 5, -30, -118,
	-68, -152, -152, -101, -118, -118, -117, -68, -2, -12,
	-5, -13, 88, 87, -8, -10, -6, 113, 114, -144,
	-146, -144, 71, 71, -45, -44, -45, -45, -62, 28,
	169, 171, 28, 169, 169, 169, 169, 169, 169, 169,
	169, -64, -65, 72, -67, -70, -67, -70, -70, 170,
	-83, 170, 18, 170, -83, -83, -69, -70, -79, 169,
	-77, 147, -79, -79, -154, -83, 171, -129, -128, 93,
	89, 95, -1, 95, -67, 92, 92, 19, -55, 37,
	104, -56, -57, 53, 86, 137, -58, 86, 137, 171,
	-75, 49, 50, 98, -49, 26, 169, -42, -125, -124,
	-66, -144, -103, -96, -68, -144, 30, 62, 169, -49,
	-119, -102, -50, -51, 47, 48, 54, 54, -156, 56,
	-155, -157, -106, -107, 64, -105, -144, 170, -144, -68,
	169, -116, -66, -120, -144, -42, -24, 169, -144, -66,
	169, -66, -144, 170, -42, -144, -120, -42, 170, -36,
	-33, -35, -32, -34, -145, -144, 171, 28, -146, 171,
	95, 161, -68, -113, 94, 94, -144, -144, 169, -120,
	-121, -144, -83, -153, -153, -153, -153, -153, -83, -83,
	-83, -67, 72, 170, -67, 170, 170, 170, 72, -71,
	-70, -77, 169, 100, 71, 170, -67, 95, -129, -1,
	-68, 87, -67, -1, -68, -54, 138, 80, -72, 136,
	19, -50, -71, -116, -48, 171, 162, 170, 171, 171,
	169, -116, -49, -51, -67, -117, -107, 64, -107, 64,
	54, 54, -156, -105, 171, 171, -116, 170, 171, 170,
	171, -26, 37, 38, 39, 40, -25, -24, 41, -116,
	43, 43, 170, 28, 170, 171, 171, 41, 170, 171,
	-30, -144, -118, 90, -2, 92, -138, 91, -2, -2,
	94, 94, -42, 170, 170, -83, -83, -83, -83, -69,
	-83, 170, 170, 170, -67, 170, 98, -70, 170, 171,
	-67, 81, 132, 170, 88, 95, 92, -114, -136, 91,
	-57, -59, 135, -76, 37, 38, -51, 170, -49, -125,
	-67, -83, -96, -116, 170, -52, -105, -109, 61, 62,
	-105, -107, 64, -107, 64, 54, 171, -106, -144, -68,
	170, 62, -116, -160, -120, -66, -66, 170, 171, -67,
	170, -144, -144, -68, 28, 129, 28, -32, -35, -35,
	-145, -68, 28, -36, -2, -139, 93, -68, 95, 95,
	-2, -2, 170, 28, 110, 170, 170, 170, 170, 170,
	170, 110, 110, 131, 110, 131, -67, -71, 171, 46,
	88, -1, -54, -52, 26, -42, 170, 170, 171, 170,
	62, -53, -67, 169, -109, -109, -105, -105, -107, 64,
	-106, 170, 171, 170, 171, 26, -42, 169, -42, -26,
	-25, -42, -3, -14, -5, -18, 88, 87, -15, -16,
	90, 130, 129, 129, 170, -131, -130, 93, 89, 95,
	-2, 92, 90, 90, 95, 95, 169, 169, 110, 110,
	110, 110, 110, 110, 169, 169, 136, 169, 136, 170,
	-67, 169, -128, -53, -71, -83, 26, -42, 169, 98,
	-120, -109, -105, -83, -83, -71, -116, 95, 161, -68,
	-113, -68, -145, -146, -9, -68, -3, -3, 28, 95,
	-131, -2, -68, 87, -2, 90, 90, -42, -89, -88,
	-90, 109, 169, 169, 169, 169, 169, 169, -88, -90,
	-89, 110, -88, 110, 170, -52, 98, 170, -71, -116,
	19, 170, 170, 170, 170, -3, 92, -140, 91, 94,
	71, 71, -145, -146, 95, 95, 129, 88, 95, 92,
	-138, 91, 170, 170, -52, 45, 48, -89, -89, -89,
	-89, -89, -88, 170, 170, 169, 170, 169, 170, 19,
	170, 26, -42, -3, -141, 93, -68, -4, -17, -5,
	-19, 88, 87, -15, -16, -6, -144, -144, 71, 71,
	-3, 88, -2, 48, -117, 170, 170, 170, 170, 170,
	170, -89, -88, 26, -42, -71, -133, -132, 93, 89,
	95, -3, 92, 95, 161, -68, -113, 94, 94, -144,
	-144, 95, -130, -72, 170, 170, -71, 95, -133, -3,
	-68, 87, -3, 90, -4, 92, -142, 91, -4, -4,
	94, 94, -91, 137, 88, 95, 92, -140, 91, -4,
	-143, 93, -68, 95, 95, -4, -4, -92, 75, 82,
	6, 85, 88, -3, -135, -134, 93, 89, 95, -4,
	92, 90, 90, 95, 95, -94, 82, -93, 6, 85,
	83, 83, 86, -132, 95, -135, -4, -68, 87, -4,
	90, 90, 72, 83, 83, 84, 86, 88, 95, 92,
	-142, 91, -95, 82, -93, 88, -4, 84, -134,
}

var yyDef = [...]int{
	-2, -2, 2, 30, 31, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
	25, -2, 27, 0, 411, 46, 47, -2, 0, 192,
	0, 0, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 139, 0, 0, 85, 86, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 171, 0, 0, 241, 242,
	243, -2, 245, 246, 247, 248, 249, 250, 252, 253,
	254, 255, 0, 257, 0, 39, 0, 516, 503, 226,
	227, 228, 229, 230, 0, 0, 0, 233, 0, 0,
	0, 0, 325, 505, 0, 0, 0, 492, 500, 501,
	502, 0, 231, 232, 238, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 0, 0, -2, 239, 310,
	244, 251, 0, 0, 0, 411, 0, 412, 239, 218,
	0, -2, 192, 0, 0, 0, 0, 189, 0, 192,
	194, 0, 0, 310, 0, 0, 0, 76, 503, 498,
	496, 77, 0, 79, 0, 0, 0, 0, 0, 0,
	84, 108, 110, 0, 140, 141, 142, 143, 0, 0,
	0, -2, -2, 239, 239, 155, 167, -2, -2, -2,
	-2, -2, 166, 419, -2, -2, 172, 173, 0, 0,
	239, 0, 0, 0, 192, 239, 250, 0, 0, 37,
	38, 40, 514, 514, 514, 221, 224, 0, 517, 0,
	504, 0, 520, 521, 505, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 0,
	310, 310, 0, 503, 503, 520, 521, 0, 0, 506,
	298, 308, 309, 0, 503, 0, 0, 3, -2, 0,
	0, 310, 0, 469, 415, 0, 176, 202, 0, 0,
	0, 218, 192, 0, 0, 427, 375, 376, 357, 358,
	0, -2, -2, -2, -2, -2, 0, 0, 0, 425,
	194, 196, 0, 191, 493, 193, -2, 386, 389, 390,
	391, 0, 377, 378, 379, 0, 364, 365, 366, 0,
	311, 0, 518, 0, 310, 0, 0, 0, 0, 0,
	0, 111, 116, 124, 138, 0, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, 227, 495, 240, 256, 259, 275, -2,
	0, 0, 0, 0, 0, 0, 515, 0, 0, 516,
	0, 190, 431, 407, 409, 405, 406, 258, 233, 0,
	0, 0, 0, 0, 0, 0, 276, -2, -2, 0,
	0, 0, 0, 0, 289, 0, 260, -2, 0, 0,
	299, 300, 301, 302, 303, 306, 307, 234, 236, 0,
	310, 0, 419, 316, 0, 310, 310, 281, 283, 0,
	0, 0, 0, 505, 148, 310, 0, 235, 237, 453,
	318, 0, 0, -2, 0, 0, 0, 239, 0, 0,
	-2, -2, 201, 264, 270, 268, 269, 178, 194, 0,
	0, 0, 0, 0, 194, 0, 0, 196, 198, 0,
	195, 0, 0, 509, 507, 0, 508, 511, 512, 513,
	387, 0, 507, -2, 380, 0, 0, 319, 0, 0,
	0, 0, 519, 0, 0, 0, 0, 0, 499, 497,
	0, 0, 0, 0, 0, -2, -2, -2, -2, -2,
	-2, -2, -2, 109, 119, -2, 0, 121, 123, 164,
	-2, 153, 154, 168, 159, 160, 420, -2, 0, 0,
	41, 42, 0, 411, 51, 52, 53, 28, 29, 0,
	494, 0, 0, 0, 185, 188, 186, 187, 225, 0,
	0, 0, 0, 310, 503, 503, 503, 503, 310, 310,
	310, 284, 285, 0, 0, 290, -2, 294, 296, 312,
	0, 313, 0, 317, 0, 0, 0, 0, 291, 0,
	278, 0, 295, 297, 0, 0, 0, 0, 453, -2,
	0, 0, 470, 410, 416, 0, -2, 177, 0, 208,
	209, 205, 211, 212, 213, 214, 219, 216, 217, 0,
	266, 271, 272, 0, 196, 0, 0, 435, 192, 439,
	0, 233, 428, 0, 239, -2, 358, 0, 0, 449,
	194, 426, 198, 184, 0, 0, 0, 0, 0, 510,
	0, 509, 424, -2, 0, 391, 388, 392, 381, 239,
	0, 0, 417, 0, 429, 89, 101, 0, 97, 92,
	0, 0, 0, 322, 106, 107, 0, 115, 0, 0,
	131, 132, 126, 129, 125, 0, 0, 0, 112, 0,
	0, -2, 239, 0, -2, -2, 0, 0, 0, 0,
	432, 408, 0, 310, 310, 310, 310, 310, 0, 0,
	0, 286, 0, 320, 0, 321, 323, 324, 0, 0,
	262, -2, 0, 146, 0, 326, 0, 0, 0, 454,
	239, 45, 413, 467, 239, 218, 206, 0, 265, 0,
	179, 198, 433, 0, 194, 0, 0, 367, 310, 0,
	0, 0, 450, 200, 199, 197, 393, 0, 507, 0,
	0, 0, 0, 383, 0, 0, 0, 0, 0, -2,
	0, 90, 102, 103, 0, 0, 0, 99, 0, 0,
	0, 0, 113, 0, 0, 0, 0, 0, 0, 0,
	120, 118, 422, 32, 5, -2, 473, 0, 0, 0,
	-2, -2, 0, 0, 312, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 287, 314, 0, 288, 277, 0,
	0, 147, 0, 261, 43, 0, -2, 414, 468, 0,
	205, 204, 207, 267, 273, 274, 200, 0, 437, 440,
	438, 0, 0, 0, 0, 218, 398, 394, 0, 0,
	0, 507, 0, 396, 0, 0, 0, 384, 233, 239,
	0, 0, 418, 0, 430, 104, 105, 101, 0, 98,
	93, 94, -2, -2, 0, -2, 0, 127, 133, 130,
	0, -2, 0, 0, 457, 0, -2, 239, 0, 0,
	0, 0, 222, 0, 0, 320, 321, 322, 323, 324,
	326, 0, 0, 0, 0, 0, 0, 263, 0, 0,
	44, 451, 203, 218, 0, 436, 368, 369, 310, 0,
	0, 180, 403, 0, 399, 395, 0, 401, 397, 0,
	385, 371, 310, 373, 310, 0, 447, 0, 88, 91,
	100, 114, 0, 0, 54, 55, 0, 411, 68, 69,
	0, 61, -2, -2, 0, 0, 457, -2, 0, 0,
	474, -2, 33, 34, 0, 0, 0, 343, 0, 0,
	0, 0, 0, 0, 343, 343, 0, 343, 0, 315,
	0, 200, 452, 182, 434, 0, 0, 443, 0, 0,
	0, 400, 402, 0, 0, 445, 0, 134, -2, 239,
	0, 239, 250, 0, 0, -2, 0, 0, 0, 0,
	0, 458, 239, 50, 471, 35, 36, 0, 0, 341,
	200, 0, 343, 343, 343, 343, 343, 343, 0, 200,
	0, 0, 0, 0, 279, 0, 0, 370, 441, 0,
	181, 404, 372, 374, 0, 7, -2, 477, 0, -2,
	0, 0, 0, 0, 135, 136, -2, 48, 0, -2,
	472, 0, 223, 328, 340, 0, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 343, 338, 343, 327, 183,
	0, 0, 448, 461, 0, -2, 239, 0, 0, 63,
	64, 0, 411, 73, 74, 75, 0, 0, 0, 0,
	0, 49, 455, 0, 344, 329, 330, 331, 332, 333,
	334, 0, 0, 0, 444, 446, 0, 461, -2, 0,
	0, 478, -2, 0, -2, 239, 0, -2, -2, 0,
	0, 137, 456, 201, 337, 339, 442, 0, 0, 462,
	239, 67, 475, 56, 9, -2, 481, 0, 0, 0,
	-2, -2, 342, 0, 65, 0, -2, 476, 0, 465,
	0, -2, 239, 0, 0, 0, 0, 345, 0, 0,
	0, 0, 66, 459, 0, 465, -2, 0, 0, 482,
	-2, 57, 58, 0, 0, 0, 0, 354, 0, 0,
	347, 348, 349, 460, 0, 0, 466, 239, 72, 479,
	59, 60, 0, 353, 350, 351, 352, 70, 0, -2,
	480, 0, 346, 0, 356, 71, 463, 355, 464,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 168, 3, 3, 3, 167, 3, 3,
	169, 170, 165, 164, 171, 163, 172, 166, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 161,
	3, 162,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160,
}

var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:251
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:256
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:261
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:268
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:272
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:278
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:282
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:288
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:292
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:298
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:302
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:306
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:310
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:314
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:318
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:322
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:326
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:330
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:334
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:338
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:342
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:346
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:350
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:354
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:358
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:362
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:366
		{
			yyVAL.statement = ExternalCommand{BaseExpr: NewBaseExpr(yyDollar[1].token), Command: yyDollar[1].token.Literal}
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:372
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:376
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:382
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:386
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 32:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:392
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 33:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:396
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 34:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:400
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 35:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:404
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 36:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:408
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:414
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:418
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:424
		{
			yyVAL.statement = Exit{}
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:428
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:434
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:438
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:444
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:448
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:452
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:456
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:460
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 48:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:466
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 49:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:470
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 50:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:474
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:478
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:482
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:486
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:492
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:496
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 56:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:502
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:506
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 58:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:510
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 59:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:514
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 60:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:518
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:524
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:528
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:534
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:538
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:544
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 66:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:548
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 67:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:552
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:556
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:560
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 70:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:566
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 71:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:570
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 72:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:574
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:578
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:582
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:586
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:592
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:596
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:600
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:604
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:610
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 81:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:614
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:618
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:622
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:626
		{
			yyVAL.statement = UnsetEnvVar{EnvVar: yyDollar[2].envvar}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:632
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:636
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 87:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:642
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:646
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 89:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:650
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 90:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:654
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:658
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:662
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:666
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 94:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:670
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 95:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:674
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].identifier}
		}
	case 96:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:678
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].queryexpr}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:684
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:688
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:694
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:698
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:704
		{
			yyVAL.expression = nil
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:708
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:712
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:716
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:720
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:726
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 107:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:730
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Statement: yyDollar[5].identifier}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:734
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 109:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:738
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:742
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:746
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 112:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:750
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:756
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 114:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:760
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 115:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:764
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:768
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].queryexpr}
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:774
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:778
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr, Name: yyDollar[3].identifier}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:784
		{
			yyVAL.replacevals = []ReplaceValue{yyDollar[1].replaceval}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:788
		{
			yyVAL.replacevals = append([]ReplaceValue{yyDollar[1].replaceval}, yyDollar[3].replacevals...)
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:794
		{
			yyVAL.statement = StatementPreparation{Name: yyDollar[2].identifier, Statement: value.NewString(yyDollar[4].token.Literal)}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:798
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier}
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:802
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:806
		{
			yyVAL.statement = DisposeStatement{Name: yyDollar[3].identifier}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:812
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:818
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:822
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:828
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:834
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:838
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:844
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:848
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:852
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 134:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:858
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 135:
		yyDollar = yyS[yypt-10 : yypt+1]
//line lib/parser/parser.y:862
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 136:
		yyDollar = yyS[yypt-10 : yypt+1]
//line lib/parser/parser.y:866
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 137:
		yyDollar = yyS[yypt-12 : yypt+1]
//line lib/parser/parser.y:870
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:874
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:880
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:884
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:888
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:892
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:896
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:900
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:904
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:910
		{
			yyVAL.queryexpr = CursorStatus{Cursor: yyDollar[2].identifier, Negation: yyDollar[4].token, Type: yyDollar[5].token}
		}
	case 147:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:914
		{
			yyVAL.queryexpr = CursorStatus{Cursor: yyDollar[2].identifier, Negation: yyDollar[4].token, Type: yyDollar[6].token}
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:918
		{
			yyVAL.queryexpr = CursorAttrebute{Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:924
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:928
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:932
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:936
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:940
		{
			yyVAL.statement = AddFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:944
		{
			yyVAL.statement = RemoveFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:948
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:952
		{
			yyVAL.statement = Echo{Value: yyDollar[2].queryexpr}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:956
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:960
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:964
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:968
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:972
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].identifier}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:976
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:980
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr}
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:984
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:988
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:992
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token), Keywords: yyDollar[2].queryexprs}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:996
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1000
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier, Table: yyDollar[4].queryexpr}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1004
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].identifier}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1008
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].queryexpr}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1012
		{
			yyVAL.statement = Pwd{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1016
		{
			yyVAL.statement = Reload{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1022
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1026
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[3].queryexpr}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1030
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1036
		{
			yyVAL.queryexpr = SelectQuery{
				SelectEntity:  yyDollar[1].queryexpr,
				OrderByClause: yyDollar[2].queryexpr,
				LimitClause:   yyDollar[3].queryexpr,
			}
		}
	case 177:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1044
		{
			yyVAL.queryexpr = SelectQuery{
				SelectEntity:  yyDollar[1].queryexpr,
				OrderByClause: yyDollar[2].queryexpr,
				LimitClause:   yyDollar[3].queryexpr,
				Context:       yyDollar[5].token,
			}
		}
	case 178:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1053
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
			}
		}
	case 179:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1062
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				Context:       yyDollar[6].token,
			}
		}
	case 180:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:1074
		{
			yyVAL.queryexpr = SelectQuery{
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[1].queryexpr,
					IntoClause:    yyDollar[2].queryexpr,
					FromClause:    yyDollar[3].queryexpr,
					WhereClause:   yyDollar[4].queryexpr,
					GroupByClause: yyDollar[5].queryexpr,
					HavingClause:  yyDollar[6].queryexpr,
				},
				OrderByClause: yyDollar[7].queryexpr,
				LimitClause:   yyDollar[8].queryexpr,
			}
		}
	case 181:
		yyDollar = yyS[yypt-10 : yypt+1]
//line lib/parser/parser.y:1089
		{
			yyVAL.queryexpr = SelectQuery{
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[1].queryexpr,
					IntoClause:    yyDollar[2].queryexpr,
					FromClause:    yyDollar[3].queryexpr,
					WhereClause:   yyDollar[4].queryexpr,
					GroupByClause: yyDollar[5].queryexpr,
					HavingClause:  yyDollar[6].queryexpr,
				},
				OrderByClause: yyDollar[7].queryexpr,
				LimitClause:   yyDollar[8].queryexpr,
				Context:       yyDollar[10].token,
			}
		}
	case 182:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1105
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause: yyDollar[1].queryexpr,
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[2].queryexpr,
					IntoClause:    yyDollar[3].queryexpr,
					FromClause:    yyDollar[4].queryexpr,
					WhereClause:   yyDollar[5].queryexpr,
					GroupByClause: yyDollar[6].queryexpr,
					HavingClause:  yyDollar[7].queryexpr,
				},
				OrderByClause: yyDollar[8].queryexpr,
				LimitClause:   yyDollar[9].queryexpr,
			}
		}
	case 183:
		yyDollar = yyS[yypt-11 : yypt+1]
//line lib/parser/parser.y:1121
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause: yyDollar[1].queryexpr,
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[2].queryexpr,
					IntoClause:    yyDollar[3].queryexpr,
					FromClause:    yyDollar[4].queryexpr,
					WhereClause:   yyDollar[5].queryexpr,
					GroupByClause: yyDollar[6].queryexpr,
					HavingClause:  yyDollar[7].queryexpr,
				},
				OrderByClause: yyDollar[8].queryexpr,
				LimitClause:   yyDollar[9].queryexpr,
				Context:       yyDollar[11].token,
			}
		}
	case 184:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1140
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 185:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1150
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1159
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 187:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1168
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1179
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1183
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1189
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1195
		{
			yyVAL.queryexpr = IntoClause{Variables: yyDollar[2].variables}
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1201
		{
			yyVAL.queryexpr = nil
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1205
		{
			yyVAL.queryexpr = FromClause{Tables: yyDollar[2].queryexprs}
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1211
		{
			yyVAL.queryexpr = nil
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1215
		{
			yyVAL.queryexpr = WhereClause{Filter: yyDollar[2].queryexpr}
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1221
		{
			yyVAL.queryexpr = nil
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1225
		{
			yyVAL.queryexpr = GroupByClause{Items: yyDollar[3].queryexprs}
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1231
		{
			yyVAL.queryexpr = nil
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1235
		{
			yyVAL.queryexpr = HavingClause{Filter: yyDollar[2].queryexpr}
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1241
		{
			yyVAL.queryexpr = nil
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1245
		{
			yyVAL.queryexpr = OrderByClause{Items: yyDollar[3].queryexprs}
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1251
		{
			if yyDollar[1].queryexpr == nil {
				yyVAL.queryexpr = yyDollar[1].queryexpr
			} else {
				yyVAL.queryexpr = LimitClause{BaseExpr: yyDollar[1].queryexpr.(OffsetClause).BaseExpr, OffsetClause: yyDollar[1].queryexpr}
			}
		}
	case 203:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1259
		{
			var base *BaseExpr
			if yyDollar[1].queryexpr == nil {
				base = NewBaseExpr(yyDollar[2].token)
			} else {
				base = yyDollar[1].queryexpr.(OffsetClause).BaseExpr
			}
			yyVAL.queryexpr = LimitClause{BaseExpr: base, Type: yyDollar[2].token, Position: yyDollar[3].token, Value: yyDollar[4].queryexpr, Unit: yyDollar[5].token, Restriction: yyDollar[6].token, OffsetClause: yyDollar[1].queryexpr}
		}
	case 204:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1269
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, Value: yyDollar[2].queryexpr, Unit: yyDollar[3].token, Restriction: yyDollar[4].token, OffsetClause: yyDollar[5].queryexpr}
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1275
		{
			yyVAL.token = Token{}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1279
		{
			yyVAL.token = yyDollar[1].token
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1283
		{
			yyVAL.token = yyDollar[2].token
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1289
		{
			yyVAL.token = yyDollar[1].token
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1293
		{
			yyVAL.token = yyDollar[1].token
		}
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1299
		{
			yyVAL.token = Token{}
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1323
		{
			yyVAL.token = Token{}
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1331
		{
			yyVAL.token = yyDollar[1].token
		}
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1337
		{
			yyVAL.queryexpr = nil
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1341
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: yyDollar[2].queryexpr, Unit: yyDollar[3].token}
		}
	case 220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1347
		{
			yyVAL.queryexpr = nil
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1351
		{
			yyVAL.queryexpr = WithClause{InlineTables: yyDollar[2].queryexprs}
		}
	case 222:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1357
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 223:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1361
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1367
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1371
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1377
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1381
		{
			yyVAL.queryexpr = NewIntegerValueFromString(yyDollar[1].token.Literal)
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1385
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1389
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1393
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1399
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1405
		{
			yyVAL.queryexpr = NewNullValue()
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1411
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1415
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1419
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1423
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1427
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1433
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1437
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1441
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1447
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1451
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1455
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1459
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1463
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1467
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1471
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1475
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1479
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1483
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1487
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1491
		{
			yyVAL.queryexpr = yyDollar[1].envvar
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1495
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1499
		{
			yyVAL.queryexpr = yyDollar[1].flag
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1503
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1507
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1511
		{
			name := ""
			if yyDollar[1].token.Literal[0] == ':' {
				name = yyDollar[1].token.Literal[1:]
			}
			yyVAL.queryexpr = Placeholder{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Ordinal: yyDollar[1].token.HolderOrdinal, Name: name}
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1521
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1527
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1531
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 261:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1535
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1541
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1545
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1551
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1555
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1561
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1565
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, NullsPosition: yyDollar[4].token}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1571
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1575
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 270:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1581
		{
			yyVAL.token = Token{}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1585
		{
			yyVAL.token = yyDollar[1].token
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1589
		{
			yyVAL.token = yyDollar[1].token
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1595
		{
			yyVAL.token = yyDollar[1].token
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1599
		{
			yyVAL.token = yyDollar[1].token
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1605
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1611
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1634
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1638
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 279:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1642
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1648
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1652
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1656
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1660
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1664
		{
			yyVAL.queryexpr = Is{LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1668
		{
			yyVAL.queryexpr = Is{LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 286:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1672
		{
			yyVAL.queryexpr = Between{LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 287:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1676
		{
			yyVAL.queryexpr = Between{LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 288:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1680
		{
			yyVAL.queryexpr = Between{LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1684
		{
			yyVAL.queryexpr = In{LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 290:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1688
		{
			yyVAL.queryexpr = In{LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 291:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1692
		{
			yyVAL.queryexpr = In{LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1696
		{
			yyVAL.queryexpr = Like{LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 293:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1700
		{
			yyVAL.queryexpr = Like{LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 294:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1704
		{
			yyVAL.queryexpr = Any{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1708
		{
			yyVAL.queryexpr = Any{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1712
		{
			yyVAL.queryexpr = All{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1716
		{
			yyVAL.queryexpr = All{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1720
		{
			yyVAL.queryexpr = Exists{Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1726
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1730
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1734
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1738
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1742
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1746
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1750
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1756
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1760
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1764
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1768
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1774
		{
			yyVAL.queryexprs = nil
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1778
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1784
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1788
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 314:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1792
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: []QueryExpression{yyDollar[3].queryexpr, yyDollar[5].queryexpr}, From: yyDollar[4].token}
		}
	case 315:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:1796
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: []QueryExpression{yyDollar[3].queryexpr, yyDollar[5].queryexpr, yyDollar[7].queryexpr}, From: yyDollar[4].token, For: yyDollar[6].token}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1800
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 317:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1804
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1808
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 319:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1812
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 320:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1819
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 321:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1823
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1827
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1831
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1835
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1839
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1845
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 327:
		yyDollar = yyS[yypt-10 : yypt+1]
//line lib/parser/parser.y:1849
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, OrderBy: yyDollar[9].queryexpr}
		}
	case 328:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:1855
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 329:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1859
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 330:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1863
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 331:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1867
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 332:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1871
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 333:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1875
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 334:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1879
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 335:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:1883
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 336:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:1887
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 337:
		yyDollar = yyS[yypt-10 : yypt+1]
//line lib/parser/parser.y:1891
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreType: yyDollar[6].token, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 338:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:1895
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 339:
		yyDollar = yyS[yypt-10 : yypt+1]
//line lib/parser/parser.y:1899
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreType: yyDollar[6].token, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1905
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1911
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1915
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: OrderByClause{Items: yyDollar[4].queryexprs}, WindowingClause: yyDollar[5].queryexpr}
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1921
		{
			yyVAL.queryexpr = nil
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1925
		{
			yyVAL.queryexpr = PartitionClause{Values: yyDollar[3].queryexprs}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1931
		{
			yyVAL.queryexpr = WindowingClause{FrameLow: yyDollar[2].queryexpr}
		}
	case 346:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1935
		{
			yyVAL.queryexpr = WindowingClause{FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1941
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Unbounded: yyDollar[1].token}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1945
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Offset: i}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1950
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1956
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Offset: i}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1961
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Offset: i}
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1966
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1972
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Unbounded: yyDollar[1].token}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1976
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1982
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Unbounded: yyDollar[1].token}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1986
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1992
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1996
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2002
		{
			yyVAL.token = yyDollar[1].token
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2006
		{
			yyVAL.token = yyDollar[1].token
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2010
		{
			yyVAL.token = yyDollar[1].token
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2014
		{
			yyVAL.token = yyDollar[1].token
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2018
		{
			yyVAL.token = yyDollar[1].token
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2024
		{
			yyVAL.token = yyDollar[1].token
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2028
		{
			yyVAL.token = yyDollar[1].token
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2032
		{
			yyVAL.token = yyDollar[1].token
		}
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2038
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, Path: yyDollar[3].queryexpr, Args: nil}
		}
	case 368:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2042
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, Path: yyDollar[3].queryexpr, Args: yyDollar[5].queryexprs}
		}
	case 369:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2046
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: nil}
		}
	case 370:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:2050
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: yyDollar[7].queryexprs}
		}
	case 371:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2056
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: nil}
		}
	case 372:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:2060
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: yyDollar[7].queryexprs}
		}
	case 373:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2064
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: nil}
		}
	case 374:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:2068
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: yyDollar[7].queryexprs}
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2074
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2078
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2084
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2088
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2094
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2098
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2102
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token, Alias: yyDollar[3].identifier}
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2108
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2112
		{
			yyDollar[2].table.Lateral = yyDollar[1].token
			yyDollar[2].table.BaseExpr = NewBaseExpr(yyDollar[1].token)
			yyVAL.queryexprs = []QueryExpression{yyDollar[2].table}
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2118
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].table}, yyDollar[3].queryexprs...)
		}
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2122
		{
			yyDollar[2].table.Lateral = yyDollar[1].token
			yyDollar[2].table.BaseExpr = NewBaseExpr(yyDollar[1].token)
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[2].table}, yyDollar[4].queryexprs...)
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2130
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2134
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2138
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token, Alias: yyDollar[3].identifier}
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2142
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2146
		{
			yyVAL.queryexpr = Table{Object: Dual{}}
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2150
		{
			yyVAL.queryexpr = yyDollar[1].table
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2154
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2160
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 394:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2164
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 395:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2168
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 396:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2172
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 397:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2176
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 398:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2180
		{
			yyDollar[5].table.Lateral = yyDollar[4].token
			yyDollar[5].table.BaseExpr = NewBaseExpr(yyDollar[4].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].table, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 399:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2186
		{
			yyDollar[5].table.Lateral = yyDollar[4].token
			yyDollar[5].table.BaseExpr = NewBaseExpr(yyDollar[4].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].table, JoinType: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 400:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:2192
		{
			yyDollar[6].table.Lateral = yyDollar[5].token
			yyDollar[6].table.BaseExpr = NewBaseExpr(yyDollar[5].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].table, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[7].queryexpr}
		}
	case 401:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2198
		{
			yyDollar[6].table.Lateral = yyDollar[5].token
			yyDollar[6].table.BaseExpr = NewBaseExpr(yyDollar[5].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].table, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 402:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:2204
		{
			yyDollar[7].table.Lateral = yyDollar[6].token
			yyDollar[7].table.BaseExpr = NewBaseExpr(yyDollar[6].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[7].table, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2212
		{
			yyVAL.queryexpr = JoinCondition{On: yyDollar[2].queryexpr}
		}
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2216
		{
			yyVAL.queryexpr = JoinCondition{Using: yyDollar[3].queryexprs}
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2222
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2226
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2232
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2236
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token, Alias: yyDollar[3].identifier}
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2240
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 410:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2246
		{
			yyVAL.queryexpr = CaseExpr{Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 411:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2252
		{
			yyVAL.queryexpr = nil
		}
	case 412:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2256
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 413:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2262
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 414:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2266
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 415:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2272
		{
			yyVAL.queryexpr = nil
		}
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2276
		{
			yyVAL.queryexpr = CaseExprElse{Result: yyDollar[2].queryexpr}
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2282
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2286
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2292
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2296
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2302
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2306
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2312
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2316
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2322
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2326
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2332
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2336
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2342
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2346
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2352
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2356
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 433:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2362
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, ValuesList: yyDollar[6].queryexprs}
		}
	case 434:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:2366
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 435:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2370
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 436:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:2374
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 437:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:2380
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2386
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2392
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2396
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 441:
		yyDollar = yyS[yypt-10 : yypt+1]
//line lib/parser/parser.y:2402
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Keys: yyDollar[7].queryexprs, ValuesList: yyDollar[10].queryexprs}
		}
	case 442:
		yyDollar = yyS[yypt-13 : yypt+1]
//line lib/parser/parser.y:2406
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Keys: yyDollar[10].queryexprs, ValuesList: yyDollar[13].queryexprs}
		}
	case 443:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:2410
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Keys: yyDollar[7].queryexprs, Query: yyDollar[9].queryexpr.(SelectQuery)}
		}
	case 444:
		yyDollar = yyS[yypt-12 : yypt+1]
//line lib/parser/parser.y:2414
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Keys: yyDollar[10].queryexprs, Query: yyDollar[12].queryexpr.(SelectQuery)}
		}
	case 445:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:2418
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Keys: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 446:
		yyDollar = yyS[yypt-12 : yypt+1]
//line lib/parser/parser.y:2422
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Fields: yyDollar[5].queryexprs, Keys: yyDollar[9].queryexprs, ValuesList: yyDollar[12].queryexprs}
		}
	case 447:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:2426
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Keys: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 448:
		yyDollar = yyS[yypt-11 : yypt+1]
//line lib/parser/parser.y:2430
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Fields: yyDollar[5].queryexprs, Keys: yyDollar[9].queryexprs, Query: yyDollar[11].queryexpr.(SelectQuery)}
		}
	case 449:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2436
		{
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: FromClause{Tables: yyDollar[4].queryexprs}, WhereClause: yyDollar[5].queryexpr}
		}
	case 450:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2440
		{
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: FromClause{Tables: yyDollar[5].queryexprs}, WhereClause: yyDollar[6].queryexpr}
		}
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2446
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 452:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2450
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2456
		{
			yyVAL.elseexpr = Else{}
		}
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2460
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 455:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2466
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 456:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2470
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 457:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2476
		{
			yyVAL.elseexpr = Else{}
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2480
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 459:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2486
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 460:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2490
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 461:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2496
		{
			yyVAL.elseexpr = Else{}
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2500
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 463:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2506
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 464:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2510
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2516
		{
			yyVAL.elseexpr = Else{}
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2520
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 467:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2526
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 468:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2530
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 469:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2536
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2540
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 471:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2546
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 472:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2550
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 473:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2556
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 474:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2560
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2566
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 476:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2570
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 477:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2576
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 478:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2580
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2586
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 480:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2590
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2596
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2600
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2606
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2610
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2614
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2618
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2622
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2626
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2630
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2634
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2638
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2644
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2650
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2654
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2660
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2666
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2670
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2676
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2680
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2686
		{
			yyVAL.envvar = EnvironmentVariable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2692
		{
			yyVAL.queryexpr = RuntimeInformation{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2698
		{
			yyVAL.flag = Flag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2704
		{
			yyVAL.token = Token{}
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2708
		{
			yyVAL.token = yyDollar[1].token
		}
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2714
		{
			yyVAL.token = Token{}
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2718
		{
			yyVAL.token = yyDollar[1].token
		}
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2724
		{
			yyVAL.token = Token{}
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2728
		{
			yyVAL.token = yyDollar[1].token
		}
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2734
		{
			yyVAL.token = Token{}
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2738
		{
			yyVAL.token = yyDollar[1].token
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2744
		{
			yyVAL.token = yyDollar[1].token
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2748
		{
			yyVAL.token = yyDollar[1].token
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2752
		{
			yyVAL.token = yyDollar[1].token
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2758
		{
			yyVAL.token = Token{}
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2762
		{
			yyVAL.token = yyDollar[1].token
		}
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2768
		{
			yyVAL.token = Token{}
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2772
		{
			yyVAL.token = yyDollar[1].token
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2778
		{
			yyVAL.token = Token{}
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2782
		{
			yyVAL.token = yyDollar[1].token
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2788
		{
			yyVAL.token = yyDollar[1].token
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2792
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
