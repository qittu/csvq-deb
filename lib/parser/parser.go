// Code generated by goyacc -o lib/parser/parser.go -v lib/parser/parser.output lib/parser/parser.y. DO NOT EDIT.

//line lib/parser/parser.y:2
package parser

import __yyfmt__ "fmt"

//line lib/parser/parser.y:2

import (
	"strconv"
	"strings"

	"github.com/mithrandie/csvq/lib/value"
)

//line lib/parser/parser.y:12
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	table       Table
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	envvar      EnvironmentVariable
	flag        Flag
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	replaceval  ReplaceValue
	replacevals []ReplaceValue
	token       Token
	bool        bool
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const ENVIRONMENT_VARIABLE = 57355
const RUNTIME_INFORMATION = 57356
const EXTERNAL_COMMAND = 57357
const PLACEHOLDER = 57358
const CONSTANT = 57359
const SELECT = 57360
const FROM = 57361
const UPDATE = 57362
const SET = 57363
const UNSET = 57364
const DELETE = 57365
const WHERE = 57366
const INSERT = 57367
const INTO = 57368
const VALUES = 57369
const REPLACE = 57370
const AS = 57371
const DUAL = 57372
const STDIN = 57373
const RECURSIVE = 57374
const CREATE = 57375
const ADD = 57376
const DROP = 57377
const ALTER = 57378
const TABLE = 57379
const FIRST = 57380
const LAST = 57381
const AFTER = 57382
const BEFORE = 57383
const DEFAULT = 57384
const RENAME = 57385
const TO = 57386
const VIEW = 57387
const ORDER = 57388
const GROUP = 57389
const HAVING = 57390
const BY = 57391
const ASC = 57392
const DESC = 57393
const LIMIT = 57394
const OFFSET = 57395
const PERCENT = 57396
const JOIN = 57397
const INNER = 57398
const OUTER = 57399
const LEFT = 57400
const RIGHT = 57401
const FULL = 57402
const CROSS = 57403
const ON = 57404
const USING = 57405
const NATURAL = 57406
const LATERAL = 57407
const UNION = 57408
const INTERSECT = 57409
const EXCEPT = 57410
const ALL = 57411
const ANY = 57412
const EXISTS = 57413
const IN = 57414
const AND = 57415
const OR = 57416
const NOT = 57417
const BETWEEN = 57418
const LIKE = 57419
const IS = 57420
const NULL = 57421
const DISTINCT = 57422
const WITH = 57423
const RANGE = 57424
const UNBOUNDED = 57425
const PRECEDING = 57426
const FOLLOWING = 57427
const CURRENT = 57428
const ROW = 57429
const CASE = 57430
const IF = 57431
const ELSEIF = 57432
const WHILE = 57433
const WHEN = 57434
const THEN = 57435
const ELSE = 57436
const DO = 57437
const END = 57438
const DECLARE = 57439
const CURSOR = 57440
const FOR = 57441
const FETCH = 57442
const OPEN = 57443
const CLOSE = 57444
const DISPOSE = 57445
const PREPARE = 57446
const NEXT = 57447
const PRIOR = 57448
const ABSOLUTE = 57449
const RELATIVE = 57450
const SEPARATOR = 57451
const PARTITION = 57452
const OVER = 57453
const COMMIT = 57454
const ROLLBACK = 57455
const CONTINUE = 57456
const BREAK = 57457
const EXIT = 57458
const ECHO = 57459
const PRINT = 57460
const PRINTF = 57461
const SOURCE = 57462
const EXECUTE = 57463
const CHDIR = 57464
const PWD = 57465
const RELOAD = 57466
const REMOVE = 57467
const SYNTAX = 57468
const TRIGGER = 57469
const FUNCTION = 57470
const AGGREGATE = 57471
const BEGIN = 57472
const RETURN = 57473
const IGNORE = 57474
const WITHIN = 57475
const VAR = 57476
const SHOW = 57477
const TIES = 57478
const NULLS = 57479
const ROWS = 57480
const ONLY = 57481
const CSV = 57482
const JSON = 57483
const JSONL = 57484
const FIXED = 57485
const LTSV = 57486
const CSV_INLINE = 57487
const JSON_INLINE = 57488
const JSON_TABLE = 57489
const JSON_ROW = 57490
const SUBSTRING = 57491
const COUNT = 57492
const JSON_OBJECT = 57493
const AGGREGATE_FUNCTION = 57494
const LIST_FUNCTION = 57495
const ANALYTIC_FUNCTION = 57496
const FUNCTION_NTH = 57497
const FUNCTION_WITH_INS = 57498
const COMPARISON_OP = 57499
const STRING_OP = 57500
const SUBSTITUTION_OP = 57501
const UMINUS = 57502
const UPLUS = 57503

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"ENVIRONMENT_VARIABLE",
	"RUNTIME_INFORMATION",
	"EXTERNAL_COMMAND",
	"PLACEHOLDER",
	"CONSTANT",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"UNSET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"REPLACE",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"LATERAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"PREPARE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"ECHO",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"EXECUTE",
	"CHDIR",
	"PWD",
	"RELOAD",
	"REMOVE",
	"SYNTAX",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"ROWS",
	"ONLY",
	"CSV",
	"JSON",
	"JSONL",
	"FIXED",
	"LTSV",
	"CSV_INLINE",
	"JSON_INLINE",
	"JSON_TABLE",
	"JSON_ROW",
	"SUBSTRING",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LIST_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'='",
	"'-'",
	"'+'",
	"'*'",
	"'/'",
	"'%'",
	"'!'",
	"'('",
	"')'",
	"','",
	"'.'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line lib/parser/parser.y:2824

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string, forPrepared bool, ansiQuotes bool) ([]Statement, int, error) {
	l := new(Lexer)
	l.Init(s, sourceFile, forPrepared, ansiQuotes)
	yyParse(l)
	return l.program, l.HolderNumber(), l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 220,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 21,
	1, 26,
	90, 26,
	92, 26,
	94, 26,
	96, 26,
	162, 26,
	-2, 239,
	-1, 27,
	66, 188,
	67, 188,
	68, 188,
	-2, 200,
	-1, 35,
	1, 78,
	90, 78,
	92, 78,
	94, 78,
	96, 78,
	162, 78,
	-2, 252,
	-1, 61,
	66, 189,
	67, 189,
	68, 189,
	-2, 244,
	-1, 123,
	20, 220,
	23, 220,
	25, 220,
	-2, 1,
	-1, 137,
	66, 188,
	67, 188,
	68, 188,
	-2, 200,
	-1, 177,
	1, 122,
	90, 122,
	92, 122,
	94, 122,
	96, 122,
	162, 122,
	-2, 233,
	-1, 178,
	1, 163,
	90, 163,
	92, 163,
	94, 163,
	96, 163,
	162, 163,
	-2, 239,
	-1, 183,
	1, 156,
	90, 156,
	92, 156,
	94, 156,
	96, 156,
	162, 156,
	-2, 239,
	-1, 184,
	1, 157,
	90, 157,
	92, 157,
	94, 157,
	96, 157,
	162, 157,
	-2, 239,
	-1, 185,
	1, 158,
	90, 158,
	92, 158,
	94, 158,
	96, 158,
	162, 158,
	-2, 239,
	-1, 186,
	1, 161,
	90, 161,
	92, 161,
	94, 161,
	96, 161,
	162, 161,
	-2, 233,
	-1, 187,
	1, 162,
	90, 162,
	92, 162,
	94, 162,
	96, 162,
	162, 162,
	-2, 239,
	-1, 190,
	1, 169,
	90, 169,
	92, 169,
	94, 169,
	96, 169,
	162, 169,
	-2, 233,
	-1, 191,
	1, 170,
	90, 170,
	92, 170,
	94, 170,
	96, 170,
	162, 170,
	-2, 239,
	-1, 257,
	90, 1,
	94, 1,
	96, 1,
	-2, 220,
	-1, 280,
	170, 359,
	-2, 486,
	-1, 281,
	170, 360,
	-2, 487,
	-1, 282,
	170, 361,
	-2, 488,
	-1, 283,
	170, 362,
	-2, 489,
	-1, 284,
	170, 363,
	-2, 490,
	-1, 295,
	55, 507,
	-2, 422,
	-1, 331,
	4, 144,
	136, 144,
	137, 144,
	138, 144,
	140, 144,
	141, 144,
	142, 144,
	143, 144,
	144, 144,
	-2, 239,
	-1, 332,
	4, 145,
	136, 145,
	137, 145,
	138, 145,
	140, 145,
	141, 145,
	142, 145,
	143, 145,
	144, 145,
	-2, 239,
	-1, 342,
	1, 174,
	90, 174,
	92, 174,
	94, 174,
	96, 174,
	162, 174,
	-2, 239,
	-1, 349,
	96, 4,
	-2, 220,
	-1, 368,
	72, 0,
	76, 0,
	77, 0,
	78, 0,
	157, 0,
	163, 0,
	-2, 280,
	-1, 369,
	72, 0,
	76, 0,
	77, 0,
	78, 0,
	157, 0,
	163, 0,
	-2, 282,
	-1, 378,
	72, 0,
	76, 0,
	77, 0,
	78, 0,
	157, 0,
	163, 0,
	-2, 292,
	-1, 417,
	96, 1,
	-2, 220,
	-1, 424,
	1, 210,
	53, 210,
	81, 210,
	90, 210,
	92, 210,
	94, 210,
	96, 210,
	99, 210,
	139, 210,
	162, 210,
	171, 210,
	-2, 239,
	-1, 425,
	1, 215,
	90, 215,
	92, 215,
	94, 215,
	96, 215,
	99, 215,
	100, 215,
	162, 215,
	171, 215,
	-2, 239,
	-1, 455,
	66, 189,
	67, 189,
	68, 189,
	-2, 379,
	-1, 476,
	1, 80,
	90, 80,
	92, 80,
	94, 80,
	96, 80,
	162, 80,
	-2, 239,
	-1, 477,
	1, 81,
	90, 81,
	92, 81,
	94, 81,
	96, 81,
	162, 81,
	-2, 233,
	-1, 478,
	1, 82,
	90, 82,
	92, 82,
	94, 82,
	96, 82,
	162, 82,
	-2, 239,
	-1, 479,
	1, 83,
	90, 83,
	92, 83,
	94, 83,
	96, 83,
	162, 83,
	-2, 233,
	-1, 480,
	1, 149,
	90, 149,
	92, 149,
	94, 149,
	96, 149,
	162, 149,
	-2, 233,
	-1, 481,
	1, 150,
	90, 150,
	92, 150,
	94, 150,
	96, 150,
	162, 150,
	-2, 239,
	-1, 482,
	1, 151,
	90, 151,
	92, 151,
	94, 151,
	96, 151,
	162, 151,
	-2, 233,
	-1, 483,
	1, 152,
	90, 152,
	92, 152,
	94, 152,
	96, 152,
	162, 152,
	-2, 239,
	-1, 486,
	1, 117,
	90, 117,
	92, 117,
	94, 117,
	96, 117,
	162, 117,
	172, 117,
	-2, 239,
	-1, 491,
	1, 420,
	90, 420,
	92, 420,
	94, 420,
	96, 420,
	162, 420,
	-2, 239,
	-1, 498,
	1, 175,
	90, 175,
	92, 175,
	94, 175,
	96, 175,
	162, 175,
	-2, 239,
	-1, 530,
	72, 0,
	76, 0,
	77, 0,
	78, 0,
	157, 0,
	163, 0,
	-2, 293,
	-1, 556,
	96, 1,
	-2, 220,
	-1, 563,
	92, 1,
	94, 1,
	96, 1,
	-2, 220,
	-1, 592,
	171, 357,
	172, 357,
	-2, 233,
	-1, 610,
	55, 507,
	-2, 382,
	-1, 650,
	20, 220,
	23, 220,
	25, 220,
	-2, 4,
	-1, 653,
	96, 4,
	-2, 220,
	-1, 654,
	96, 4,
	-2, 220,
	-1, 679,
	171, 262,
	172, 262,
	-2, 189,
	-1, 754,
	90, 4,
	94, 4,
	96, 4,
	-2, 220,
	-1, 759,
	96, 4,
	-2, 220,
	-1, 760,
	96, 4,
	-2, 220,
	-1, 786,
	90, 1,
	94, 1,
	96, 1,
	-2, 220,
	-1, 823,
	18, 518,
	81, 518,
	170, 518,
	-2, 87,
	-1, 831,
	1, 95,
	90, 95,
	92, 95,
	94, 95,
	96, 95,
	162, 95,
	-2, 233,
	-1, 832,
	1, 96,
	90, 96,
	92, 96,
	94, 96,
	96, 96,
	162, 96,
	-2, 239,
	-1, 836,
	96, 6,
	-2, 220,
	-1, 842,
	171, 128,
	172, 128,
	-2, 239,
	-1, 847,
	96, 4,
	-2, 220,
	-1, 917,
	96, 6,
	-2, 220,
	-1, 918,
	96, 6,
	-2, 220,
	-1, 922,
	96, 4,
	-2, 220,
	-1, 926,
	92, 4,
	94, 4,
	96, 4,
	-2, 220,
	-1, 967,
	20, 220,
	23, 220,
	25, 220,
	-2, 6,
	-1, 974,
	162, 62,
	-2, 239,
	-1, 1008,
	90, 6,
	94, 6,
	96, 6,
	-2, 220,
	-1, 1011,
	96, 8,
	-2, 220,
	-1, 1018,
	96, 6,
	-2, 220,
	-1, 1021,
	90, 4,
	94, 4,
	96, 4,
	-2, 220,
	-1, 1035,
	96, 6,
	-2, 220,
	-1, 1060,
	96, 6,
	-2, 220,
	-1, 1064,
	92, 6,
	94, 6,
	96, 6,
	-2, 220,
	-1, 1066,
	20, 220,
	23, 220,
	25, 220,
	-2, 8,
	-1, 1069,
	96, 8,
	-2, 220,
	-1, 1070,
	96, 8,
	-2, 220,
	-1, 1089,
	90, 8,
	94, 8,
	96, 8,
	-2, 220,
	-1, 1094,
	96, 8,
	-2, 220,
	-1, 1095,
	96, 8,
	-2, 220,
	-1, 1106,
	90, 6,
	94, 6,
	96, 6,
	-2, 220,
	-1, 1111,
	96, 8,
	-2, 220,
	-1, 1126,
	96, 8,
	-2, 220,
	-1, 1130,
	92, 8,
	94, 8,
	96, 8,
	-2, 220,
	-1, 1150,
	90, 8,
	94, 8,
	96, 8,
	-2, 220,
}

const yyPrivate = 57344

const yyLast = 4038

var yyAct = [...]int{
	126, 61, 1059, 1125, 1090, 1098, 1124, 1009, 132, 507,
	921, 426, 1058, 677, 755, 203, 634, 204, 920, 807,
	265, 1037, 309, 733, 640, 857, 555, 68, 728, 143,
	621, 856, 299, 638, 641, 933, 506, 26, 585, 266,
	600, 609, 505, 25, 569, 692, 99, 263, 490, 484,
	146, 499, 275, 262, 618, 554, 605, 1, 361, 440,
	364, 156, 156, 135, 159, 734, 287, 445, 294, 444,
	546, 85, 84, 290, 1044, 61, 188, 273, 27, 211,
	153, 247, 334, 215, 301, 355, 1048, 255, 78, 80,
	1012, 140, 111, 72, 142, 236, 139, 197, 235, 141,
	855, 250, 236, 235, 202, 524, 448, 137, 449, 450,
	451, 443, 350, 80, 446, 157, 513, 112, 236, 895,
	896, 235, 1055, 827, 61, 448, 61, 449, 450, 451,
	443, 165, 816, 446, 780, 127, 35, 745, 80, 744,
	261, 741, 181, 340, 122, 143, 80, 1031, 258, 303,
	897, 898, 881, 882, 80, 953, 747, 748, 704, 705,
	26, 725, 722, 292, 721, 80, 25, 80, 706, 702,
	648, 112, 645, 270, 899, 293, 79, 194, 576, 80,
	103, 256, 522, 351, 438, 80, 351, 295, 878, 236,
	351, 121, 235, 433, 359, 288, 289, 298, 278, 194,
	143, 79, 227, 226, 228, 229, 230, 315, 1030, 79,
	501, 3, 351, 376, 322, 144, 351, 79, 1028, 1027,
	354, 622, 447, 1026, 377, 274, 1024, 1006, 79, 1005,
	79, 1004, 353, 1003, 999, 310, 994, 313, 314, 992,
	614, 144, 79, 991, 990, 989, 377, 377, 79, 113,
	114, 115, 339, 116, 117, 118, 119, 120, 61, 35,
	965, 946, 944, 80, 943, 144, 28, 932, 919, 883,
	375, 880, 582, 907, 853, 829, 826, 823, 137, 820,
	804, 797, 779, 628, 121, 762, 743, 303, 740, 724,
	144, 429, 402, 403, 26, 357, 358, 395, 144, 520,
	25, 455, 370, 113, 114, 115, 376, 280, 281, 282,
	283, 284, 305, 306, 307, 413, 1043, 144, 594, 144,
	391, 670, 430, 396, 397, 398, 79, 669, 668, 667,
	665, 144, 549, 631, 3, 544, 543, 300, 217, 542,
	637, 199, 537, 156, 227, 226, 228, 229, 230, 535,
	61, 473, 533, 459, 547, 436, 143, 431, 143, 143,
	80, 414, 620, 439, 497, 347, 460, 511, 348, 346,
	435, 955, 947, 150, 377, 945, 941, 61, 103, 293,
	377, 377, 931, 901, 489, 887, 865, 863, 495, 496,
	862, 861, 199, 35, 859, 112, 469, 833, 776, 197,
	774, 773, 764, 707, 680, 377, 548, 548, 548, 657,
	617, 199, 228, 229, 230, 583, 703, 475, 61, 474,
	529, 458, 434, 494, 154, 595, 531, 532, 149, 260,
	492, 493, 143, 254, 516, 244, 516, 516, 303, 519,
	521, 243, 526, 525, 515, 242, 517, 518, 303, 241,
	240, 545, 239, 238, 26, 237, 328, 249, 540, 326,
	25, 1066, 967, 650, 123, 316, 194, 570, 3, 145,
	408, 574, 143, 461, 143, 559, 1054, 550, 551, 792,
	612, 777, 694, 775, 1018, 35, 696, 590, 454, 918,
	552, 288, 472, 318, 917, 836, 871, 772, 869, 599,
	571, 770, 643, 647, 581, 598, 597, 769, 768, 765,
	596, 589, 144, 652, 608, 293, 607, 149, 274, 771,
	674, 739, 575, 566, 858, 587, 682, 113, 114, 115,
	624, 116, 117, 118, 119, 120, 671, 154, 658, 245,
	693, 675, 409, 664, 672, 246, 317, 423, 679, 172,
	173, 572, 103, 35, 619, 681, 998, 61, 627, 629,
	956, 625, 580, 225, 61, 673, 471, 199, 422, 1149,
	1139, 1134, 1133, 1128, 1114, 327, 319, 320, 325, 1113,
	1105, 659, 1081, 377, 143, 661, 161, 1073, 695, 1065,
	567, 1062, 1020, 26, 678, 1017, 699, 1016, 978, 25,
	26, 966, 930, 929, 303, 303, 25, 1095, 271, 134,
	21, 685, 303, 924, 686, 850, 170, 171, 174, 175,
	849, 690, 143, 785, 684, 712, 649, 560, 3, 678,
	558, 1094, 1070, 124, 1069, 610, 701, 726, 700, 160,
	710, 698, 1127, 199, 720, 162, 1126, 1126, 1061, 1011,
	708, 61, 1060, 178, 61, 61, 179, 180, 143, 183,
	184, 185, 187, 248, 191, 719, 923, 760, 759, 163,
	922, 709, 723, 654, 653, 557, 619, 377, 349, 556,
	1111, 1060, 1035, 736, 196, 922, 201, 847, 619, 556,
	419, 417, 35, 1150, 1130, 749, 1106, 751, 199, 35,
	1089, 1064, 753, 1021, 1008, 757, 758, 926, 786, 754,
	619, 563, 257, 1152, 1108, 303, 1091, 303, 303, 303,
	1023, 619, 303, 778, 1010, 789, 756, 415, 264, 1146,
	1145, 1132, 791, 21, 1131, 196, 790, 787, 199, 796,
	199, 799, 1087, 985, 788, 984, 805, 806, 928, 810,
	927, 752, 1127, 1061, 612, 61, 923, 557, 835, 802,
	61, 61, 803, 817, 1153, 1148, 1122, 3, 1104, 839,
	840, 1051, 643, 841, 3, 798, 643, 1019, 874, 838,
	822, 377, 844, 1078, 331, 332, 35, 61, 784, 35,
	35, 713, 715, 312, 872, 587, 1143, 1085, 143, 867,
	619, 982, 867, 342, 688, 866, 845, 1121, 870, 1099,
	1103, 851, 852, 303, 199, 303, 303, 303, 619, 1119,
	1120, 143, 1147, 26, 824, 825, 885, 678, 1118, 25,
	888, 889, 877, 1102, 1101, 143, 876, 61, 782, 216,
	1099, 249, 109, 463, 875, 890, 1117, 891, 61, 612,
	199, 904, 373, 1076, 902, 903, 372, 374, 894, 676,
	1077, 405, 1049, 1079, 1013, 404, 514, 21, 352, 623,
	407, 406, 209, 356, 421, 868, 884, 424, 425, 377,
	380, 379, 808, 809, 143, 821, 1136, 335, 199, 1100,
	35, 867, 951, 329, 303, 35, 35, 942, 950, 925,
	377, 112, 949, 143, 957, 811, 813, 606, 815, 610,
	958, 914, 110, 962, 718, 717, 286, 1097, 61, 61,
	1100, 969, 35, 61, 199, 678, 959, 61, 278, 604,
	603, 972, 143, 973, 905, 476, 478, 481, 483, 486,
	979, 267, 268, 971, 486, 491, 678, 268, 987, 491,
	491, 935, 601, 498, 377, 602, 963, 269, 988, 21,
	936, 864, 938, 939, 940, 441, 136, 1000, 61, 208,
	209, 210, 35, 867, 980, 934, 738, 993, 983, 996,
	737, 336, 448, 35, 449, 450, 451, 443, 746, 1015,
	446, 735, 914, 914, 619, 794, 795, 3, 1022, 1025,
	678, 1014, 152, 892, 610, 151, 214, 143, 977, 61,
	1001, 448, 61, 449, 450, 451, 622, 854, 843, 61,
	837, 1045, 61, 448, 834, 449, 450, 21, 742, 646,
	487, 143, 377, 113, 114, 115, 61, 116, 117, 118,
	119, 120, 914, 69, 591, 1057, 995, 909, 619, 285,
	112, 1068, 389, 35, 35, 272, 377, 291, 35, 148,
	432, 61, 35, 1074, 199, 61, 147, 61, 616, 1080,
	61, 61, 1082, 1052, 1029, 1002, 1045, 112, 678, 1045,
	1045, 164, 166, 914, 467, 107, 697, 199, 1088, 564,
	61, 1092, 1093, 914, 1107, 61, 61, 464, 465, 1045,
	148, 199, 678, 35, 1045, 1045, 466, 61, 437, 338,
	914, 1109, 61, 651, 337, 333, 1115, 1116, 107, 104,
	104, 1045, 107, 1137, 103, 207, 1138, 61, 909, 909,
	488, 61, 1140, 1129, 311, 914, 1045, 213, 71, 914,
	1045, 70, 155, 1110, 35, 1034, 846, 35, 1141, 1151,
	199, 61, 1144, 913, 35, 416, 10, 35, 1155, 9,
	1045, 729, 730, 731, 732, 586, 21, 687, 8, 199,
	7, 35, 1154, 21, 418, 691, 65, 362, 909, 297,
	296, 914, 113, 114, 115, 302, 116, 117, 118, 119,
	120, 975, 976, 304, 276, 279, 35, 1135, 199, 1096,
	35, 1075, 35, 1053, 64, 35, 35, 94, 63, 113,
	114, 115, 366, 116, 117, 118, 119, 120, 62, 909,
	67, 59, 1039, 66, 60, 35, 793, 577, 427, 909,
	35, 35, 58, 212, 913, 913, 573, 568, 565, 6,
	20, 1007, 35, 19, 73, 169, 909, 35, 17, 642,
	639, 16, 5, 485, 15, 486, 14, 11, 491, 18,
	21, 13, 35, 21, 21, 12, 35, 1040, 910, 86,
	1038, 909, 112, 199, 908, 909, 502, 1039, 500, 4,
	1039, 1039, 1033, 2, 913, 0, 35, 0, 0, 0,
	0, 0, 1050, 0, 133, 0, 0, 199, 298, 278,
	1039, 0, 0, 112, 0, 1039, 1039, 0, 448, 1063,
	449, 450, 451, 443, 808, 809, 446, 909, 0, 0,
	0, 0, 1039, 189, 0, 913, 0, 198, 0, 536,
	122, 0, 819, 611, 1083, 913, 0, 1039, 1086, 0,
	0, 1039, 0, 0, 195, 0, 0, 0, 832, 0,
	0, 0, 913, 0, 259, 0, 842, 233, 234, 0,
	0, 1039, 0, 0, 21, 0, 848, 0, 0, 21,
	21, 251, 252, 0, 0, 0, 0, 913, 198, 0,
	1123, 913, 223, 232, 231, 222, 221, 224, 220, 0,
	0, 0, 0, 0, 0, 195, 21, 198, 0, 421,
	0, 133, 0, 0, 113, 114, 115, 0, 280, 281,
	282, 283, 284, 305, 306, 307, 0, 0, 0, 189,
	0, 0, 0, 913, 223, 232, 231, 222, 221, 224,
	220, 0, 0, 0, 0, 113, 114, 115, 300, 116,
	117, 118, 119, 120, 0, 0, 21, 0, 0, 0,
	0, 767, 0, 0, 0, 223, 232, 21, 222, 221,
	224, 220, 0, 29, 344, 0, 0, 218, 217, 0,
	0, 0, 0, 219, 227, 226, 228, 229, 230, 0,
	0, 0, 341, 0, 0, 363, 0, 367, 368, 369,
	0, 371, 138, 0, 378, 0, 381, 382, 383, 384,
	385, 386, 387, 0, 308, 0, 189, 393, 363, 218,
	217, 0, 189, 189, 189, 219, 227, 226, 228, 229,
	230, 968, 0, 766, 410, 970, 974, 21, 21, 0,
	189, 0, 21, 981, 420, 0, 21, 0, 200, 428,
	218, 217, 0, 0, 0, 0, 219, 227, 226, 228,
	229, 230, 0, 198, 0, 0, 0, 0, 0, 0,
	0, 442, 223, 232, 231, 222, 221, 224, 220, 0,
	0, 0, 0, 0, 0, 112, 0, 21, 0, 0,
	0, 0, 0, 0, 189, 0, 470, 0, 0, 200,
	0, 390, 392, 0, 0, 112, 0, 399, 400, 401,
	457, 223, 232, 231, 222, 221, 224, 220, 200, 80,
	0, 189, 0, 0, 0, 0, 0, 0, 21, 0,
	1036, 21, 122, 0, 0, 0, 0, 0, 21, 198,
	0, 21, 0, 848, 0, 0, 0, 0, 0, 0,
	0, 0, 528, 0, 530, 21, 189, 218, 217, 0,
	0, 1067, 0, 219, 227, 226, 228, 229, 230, 0,
	0, 189, 873, 200, 0, 0, 189, 189, 189, 468,
	21, 1084, 79, 0, 21, 0, 21, 112, 0, 21,
	21, 0, 0, 0, 584, 420, 218, 217, 0, 561,
	0, 80, 219, 227, 226, 228, 229, 230, 0, 21,
	997, 1112, 0, 0, 21, 21, 0, 113, 114, 115,
	0, 116, 117, 118, 119, 120, 21, 0, 1036, 0,
	0, 21, 0, 0, 632, 0, 636, 113, 114, 115,
	0, 116, 117, 118, 119, 120, 21, 1142, 0, 0,
	21, 89, 0, 0, 0, 0, 534, 0, 0, 0,
	0, 538, 539, 541, 79, 0, 0, 0, 0, 0,
	21, 144, 1112, 0, 200, 0, 223, 232, 231, 222,
	221, 224, 220, 0, 133, 0, 158, 0, 0, 0,
	112, 167, 168, 0, 176, 177, 0, 0, 0, 0,
	182, 0, 363, 0, 186, 0, 190, 662, 192, 193,
	198, 0, 0, 0, 0, 0, 666, 278, 112, 113,
	114, 115, 0, 116, 117, 118, 119, 120, 0, 200,
	0, 200, 200, 683, 0, 0, 0, 0, 0, 0,
	0, 0, 689, 0, 0, 278, 198, 0, 0, 0,
	200, 0, 0, 144, 0, 0, 428, 0, 0, 0,
	253, 218, 217, 0, 0, 0, 0, 219, 227, 226,
	228, 229, 230, 0, 0, 345, 341, 0, 0, 0,
	0, 711, 189, 0, 727, 0, 0, 0, 0, 0,
	0, 0, 277, 0, 277, 0, 0, 0, 0, 0,
	277, 0, 277, 223, 277, 200, 222, 221, 224, 220,
	0, 0, 321, 277, 323, 324, 0, 0, 0, 0,
	761, 330, 113, 114, 115, 0, 116, 117, 118, 119,
	120, 0, 0, 0, 223, 232, 231, 222, 221, 224,
	220, 0, 0, 763, 0, 200, 0, 200, 0, 0,
	113, 114, 115, 0, 280, 281, 282, 283, 284, 0,
	781, 0, 0, 0, 0, 360, 0, 365, 0, 0,
	0, 0, 0, 223, 232, 231, 222, 221, 224, 220,
	0, 0, 112, 800, 0, 189, 0, 388, 218, 217,
	365, 0, 0, 0, 219, 227, 226, 228, 229, 230,
	0, 0, 0, 0, 0, 0, 0, 411, 298, 278,
	0, 0, 0, 0, 0, 828, 0, 0, 112, 218,
	217, 200, 0, 0, 277, 219, 227, 226, 228, 229,
	230, 0, 0, 0, 553, 0, 420, 277, 277, 0,
	0, 0, 0, 893, 0, 0, 0, 860, 452, 0,
	0, 0, 277, 0, 0, 456, 0, 200, 218, 217,
	879, 0, 0, 462, 219, 227, 226, 228, 229, 230,
	801, 0, 0, 341, 0, 0, 0, 477, 479, 480,
	482, 0, 0, 900, 0, 0, 0, 0, 886, 0,
	277, 0, 0, 0, 0, 200, 0, 906, 0, 0,
	0, 0, 510, 0, 512, 0, 0, 0, 0, 0,
	0, 0, 112, 0, 113, 114, 115, 0, 280, 281,
	282, 283, 284, 305, 306, 307, 0, 0, 0, 0,
	0, 200, 0, 0, 0, 0, 0, 0, 298, 278,
	0, 0, 0, 0, 0, 0, 954, 0, 300, 0,
	113, 114, 115, 948, 116, 117, 118, 119, 120, 0,
	0, 0, 189, 0, 0, 964, 0, 0, 0, 0,
	0, 0, 0, 814, 0, 0, 189, 0, 189, 0,
	0, 0, 0, 0, 588, 277, 592, 0, 0, 277,
	277, 0, 133, 0, 986, 0, 0, 0, 0, 277,
	112, 0, 0, 0, 0, 613, 0, 456, 0, 615,
	0, 0, 0, 588, 0, 189, 626, 588, 588, 630,
	0, 0, 0, 633, 635, 453, 0, 644, 0, 0,
	0, 0, 223, 232, 231, 222, 221, 224, 220, 0,
	0, 0, 0, 0, 113, 114, 115, 952, 280, 281,
	282, 283, 284, 305, 306, 307, 0, 0, 0, 0,
	0, 960, 0, 961, 0, 655, 656, 428, 0, 1032,
	0, 200, 0, 635, 365, 660, 388, 0, 300, 112,
	81, 82, 83, 0, 109, 0, 103, 107, 104, 105,
	420, 75, 106, 1056, 200, 0, 223, 232, 231, 222,
	221, 224, 220, 129, 0, 0, 122, 0, 200, 0,
	0, 0, 0, 0, 0, 0, 0, 218, 217, 0,
	0, 0, 133, 219, 227, 226, 228, 229, 230, 0,
	0, 937, 113, 114, 115, 588, 116, 117, 118, 119,
	120, 0, 0, 0, 0, 0, 100, 588, 0, 0,
	101, 0, 0, 0, 110, 277, 277, 200, 0, 0,
	0, 0, 0, 131, 128, 0, 0, 0, 0, 588,
	0, 420, 635, 108, 0, 0, 200, 626, 0, 0,
	588, 218, 217, 0, 0, 0, 0, 219, 227, 226,
	228, 229, 230, 0, 0, 783, 0, 0, 750, 0,
	0, 0, 0, 0, 0, 200, 112, 0, 0, 130,
	0, 113, 114, 115, 0, 116, 117, 118, 119, 120,
	0, 112, 0, 121, 90, 93, 91, 92, 95, 96,
	97, 98, 298, 278, 0, 0, 0, 0, 0, 87,
	88, 366, 0, 0, 102, 74, 394, 298, 278, 0,
	0, 0, 0, 0, 588, 0, 0, 0, 277, 588,
	0, 0, 0, 0, 0, 0, 0, 812, 0, 277,
	277, 0, 0, 277, 818, 0, 0, 588, 0, 0,
	200, 0, 716, 588, 588, 0, 0, 0, 0, 830,
	831, 0, 0, 635, 0, 0, 0, 0, 112, 81,
	82, 83, 0, 109, 200, 103, 107, 104, 105, 22,
	75, 106, 80, 0, 0, 37, 38, 0, 0, 0,
	0, 0, 30, 0, 0, 122, 0, 31, 46, 0,
	32, 0, 0, 0, 0, 0, 0, 0, 113, 114,
	115, 0, 280, 281, 282, 283, 284, 305, 306, 307,
	0, 0, 0, 113, 114, 115, 0, 280, 281, 282,
	283, 284, 305, 306, 307, 100, 0, 277, 277, 101,
	0, 0, 300, 110, 0, 79, 112, 0, 0, 626,
	0, 0, 1042, 1041, 0, 915, 0, 300, 112, 0,
	412, 34, 108, 0, 41, 39, 40, 36, 42, 112,
	0, 389, 298, 278, 0, 0, 44, 45, 508, 509,
	0, 49, 50, 51, 52, 43, 54, 55, 56, 47,
	53, 57, 0, 0, 0, 916, 0, 0, 33, 48,
	113, 114, 115, 0, 116, 117, 118, 119, 120, 635,
	0, 0, 121, 90, 93, 91, 92, 95, 96, 97,
	98, 0, 0, 588, 0, 0, 0, 0, 87, 88,
	0, 0, 0, 102, 74, 0, 0, 0, 0, 0,
	0, 0, 0, 112, 81, 82, 83, 0, 109, 0,
	103, 107, 104, 105, 22, 75, 106, 80, 0, 0,
	37, 38, 0, 0, 0, 0, 0, 30, 0, 0,
	122, 0, 31, 46, 0, 32, 0, 588, 113, 114,
	115, 0, 280, 281, 282, 283, 284, 305, 306, 307,
	113, 114, 115, 0, 116, 117, 118, 119, 120, 0,
	0, 113, 114, 115, 0, 116, 117, 118, 119, 120,
	100, 0, 300, 0, 101, 0, 0, 0, 110, 0,
	79, 0, 0, 112, 0, 0, 0, 504, 503, 0,
	76, 0, 0, 0, 1046, 1047, 34, 108, 0, 41,
	39, 40, 36, 42, 0, 0, 0, 0, 0, 298,
	278, 44, 45, 508, 509, 77, 49, 50, 51, 52,
	43, 54, 55, 56, 47, 53, 57, 0, 0, 0,
	1071, 1072, 0, 33, 48, 113, 114, 115, 0, 116,
	117, 118, 119, 120, 714, 0, 0, 121, 90, 93,
	91, 92, 95, 96, 97, 98, 0, 0, 0, 0,
	0, 0, 0, 87, 88, 0, 0, 0, 102, 74,
	112, 81, 82, 83, 0, 109, 0, 103, 107, 104,
	105, 22, 75, 106, 80, 0, 0, 37, 38, 0,
	0, 0, 0, 0, 30, 0, 0, 122, 0, 31,
	46, 0, 32, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 113, 114, 115, 0, 280,
	281, 282, 283, 284, 305, 306, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 100, 0, 112,
	0, 101, 0, 0, 0, 110, 103, 79, 0, 300,
	0, 0, 0, 0, 912, 911, 0, 915, 0, 0,
	0, 0, 0, 34, 108, 0, 41, 39, 40, 36,
	42, 0, 0, 0, 0, 0, 0, 0, 44, 45,
	0, 0, 0, 49, 50, 51, 52, 43, 54, 55,
	56, 47, 53, 57, 0, 0, 0, 916, 0, 0,
	33, 48, 113, 114, 115, 0, 116, 117, 118, 119,
	120, 0, 0, 0, 121, 90, 93, 91, 92, 95,
	96, 97, 98, 0, 0, 0, 0, 0, 0, 0,
	87, 88, 0, 0, 0, 102, 74, 112, 81, 82,
	83, 0, 109, 0, 103, 107, 104, 105, 22, 75,
	106, 80, 0, 0, 37, 38, 0, 0, 0, 0,
	0, 30, 0, 0, 122, 0, 31, 46, 0, 32,
	0, 113, 114, 115, 0, 116, 117, 118, 119, 120,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 100, 0, 0, 0, 101, 0,
	0, 0, 110, 0, 79, 0, 0, 0, 0, 0,
	0, 24, 23, 0, 76, 0, 0, 0, 0, 0,
	34, 108, 0, 41, 39, 40, 36, 42, 0, 0,
	0, 0, 0, 0, 0, 44, 45, 0, 0, 77,
	49, 50, 51, 52, 43, 54, 55, 56, 47, 53,
	57, 0, 0, 0, 0, 0, 0, 33, 48, 113,
	114, 115, 0, 116, 117, 118, 119, 120, 0, 0,
	0, 121, 90, 93, 91, 92, 95, 96, 97, 98,
	0, 0, 0, 0, 0, 0, 0, 87, 88, 0,
	0, 0, 102, 74, 112, 81, 82, 83, 0, 109,
	0, 103, 107, 104, 105, 0, 75, 106, 80, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 0,
	0, 122, 223, 232, 231, 222, 221, 224, 220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 100, 0, 0, 0, 101, 0, 0, 0, 110,
	0, 79, 0, 0, 0, 0, 0, 0, 131, 128,
	0, 0, 112, 81, 82, 83, 0, 109, 108, 103,
	107, 104, 105, 0, 75, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 218, 217, 122,
	0, 0, 0, 219, 227, 226, 228, 229, 230, 0,
	0, 0, 0, 0, 130, 0, 113, 114, 115, 0,
	116, 117, 118, 119, 120, 0, 0, 0, 121, 90,
	93, 91, 92, 95, 96, 97, 98, 0, 0, 100,
	0, 0, 0, 101, 87, 88, 0, 110, 0, 102,
	74, 0, 0, 0, 0, 0, 131, 128, 0, 0,
	0, 0, 0, 0, 0, 206, 108, 0, 112, 81,
	82, 83, 0, 109, 0, 103, 107, 104, 105, 0,
	75, 106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 129, 0, 0, 122, 0, 0, 0, 0,
	0, 0, 205, 0, 113, 114, 115, 0, 116, 117,
	118, 119, 120, 0, 0, 0, 121, 90, 93, 91,
	92, 95, 96, 97, 98, 0, 0, 0, 0, 0,
	0, 0, 87, 88, 0, 100, 0, 102, 74, 101,
	0, 0, 0, 110, 0, 0, 0, 0, 0, 0,
	0, 0, 131, 128, 0, 0, 112, 81, 82, 83,
	0, 109, 108, 103, 107, 104, 105, 0, 75, 106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	129, 0, 0, 122, 0, 0, 0, 0, 223, 232,
	231, 222, 221, 224, 220, 0, 0, 0, 130, 0,
	113, 114, 115, 0, 116, 117, 118, 119, 120, 562,
	0, 0, 121, 90, 93, 91, 92, 95, 96, 97,
	98, 0, 0, 100, 0, 0, 0, 101, 87, 88,
	366, 110, 216, 102, 74, 0, 0, 0, 0, 0,
	131, 128, 0, 0, 112, 81, 82, 83, 0, 109,
	108, 103, 107, 104, 105, 0, 75, 106, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 129, 0,
	0, 122, 0, 218, 217, 0, 0, 0, 0, 219,
	227, 226, 228, 229, 230, 0, 130, 0, 113, 114,
	115, 0, 116, 117, 118, 119, 120, 0, 0, 0,
	121, 90, 93, 91, 92, 95, 96, 97, 98, 0,
	0, 100, 0, 0, 0, 101, 87, 88, 0, 110,
	523, 102, 74, 0, 0, 0, 0, 0, 131, 128,
	0, 0, 112, 81, 82, 83, 0, 109, 108, 103,
	107, 104, 105, 0, 75, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 0, 0, 122,
	0, 0, 0, 223, 232, 231, 222, 221, 224, 220,
	0, 0, 0, 0, 130, 0, 113, 114, 115, 0,
	116, 117, 118, 119, 120, 0, 0, 0, 121, 90,
	93, 91, 92, 95, 96, 97, 98, 0, 0, 100,
	0, 0, 0, 101, 87, 88, 0, 110, 0, 102,
	74, 0, 0, 0, 0, 0, 131, 128, 0, 0,
	112, 81, 82, 83, 0, 109, 108, 103, 107, 104,
	105, 0, 75, 106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 0, 0, 593, 218, 217,
	0, 0, 0, 0, 219, 227, 226, 228, 229, 230,
	0, 0, 130, 0, 113, 114, 115, 0, 116, 117,
	118, 119, 120, 0, 0, 0, 121, 90, 93, 91,
	92, 95, 96, 97, 98, 0, 0, 100, 0, 0,
	0, 101, 87, 88, 0, 110, 0, 102, 125, 0,
	578, 579, 0, 0, 131, 128, 0, 0, 112, 81,
	343, 83, 0, 109, 108, 103, 107, 104, 105, 0,
	75, 106, 223, 232, 231, 222, 221, 224, 220, 0,
	0, 0, 129, 0, 0, 122, 223, 232, 231, 222,
	221, 224, 220, 0, 0, 0, 0, 0, 0, 0,
	130, 0, 113, 114, 115, 0, 116, 117, 118, 119,
	120, 0, 0, 0, 121, 90, 93, 91, 92, 95,
	96, 97, 98, 0, 0, 100, 0, 0, 0, 101,
	87, 88, 0, 110, 0, 102, 74, 0, 0, 0,
	0, 0, 131, 128, 223, 663, 231, 222, 221, 224,
	220, 0, 108, 0, 0, 0, 0, 218, 217, 0,
	0, 0, 0, 219, 227, 226, 228, 229, 230, 0,
	0, 218, 217, 0, 0, 0, 0, 219, 227, 226,
	228, 229, 230, 0, 0, 0, 0, 0, 130, 0,
	113, 114, 115, 0, 116, 117, 118, 119, 120, 0,
	0, 0, 121, 90, 93, 91, 92, 95, 96, 97,
	98, 223, 527, 231, 222, 221, 224, 220, 87, 88,
	0, 0, 0, 102, 74, 0, 0, 0, 0, 218,
	217, 0, 0, 0, 0, 219, 227, 226, 228, 229,
	230, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 218, 217, 0, 0,
	0, 0, 219, 227, 226, 228, 229, 230,
}

var yyPact = [...]int{
	2993, -1000, 302, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3608, 3520, -1000, -1000, 920, 71, 1040,
	347, 968, 965, 367, 2895, -1000, 541, 1106, 1107, 2004,
	2004, 511, 2004, 3520, -1000, -1000, 3520, 3520, 1073, 3520,
	3520, 3520, 3520, 3520, 3520, -1000, 2004, 2004, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 307, -1000,
	-1000, -1000, -1000, -1000, 3160, -1000, 3248, 1119, 903, 974,
	759, -1000, -1000, -1000, -1000, -1000, 3744, 3520, 3520, -75,
	285, 283, 282, 280, -1000, 279, 275, 271, 265, 382,
	45, 3520, 3520, -1000, -1000, -1000, -1000, -1000, 2004, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 263, -86, 2993, 619, 3160, -1000, -1000, 259, 258,
	254, 3520, 636, 3744, -1000, 889, 908, 920, 1040, 1029,
	1804, 1023, 897, -1000, 149, 1081, 1033, 1113, 2562, 3520,
	1804, 704, 1804, -1000, 759, 35, 306, -1000, 448, -1000,
	2004, 1776, 2004, 2004, 415, 412, -1000, 830, -1000, 2004,
	-1000, -1000, -1000, -1000, 3520, 3520, 1096, 19, 824, 937,
	1095, -1000, 1090, -1000, -1000, 80, -75, -1000, -1000, 1891,
	-75, -1000, -1000, 3784, 3520, 1694, 198, 194, 197, 342,
	1081, 583, 40, 796, 1113, 254, -1000, -1000, 804, 804,
	804, -1000, 22, 2004, -1000, 3344, -1000, 3520, 3520, 3520,
	766, 3520, 780, 43, 3520, 811, 3520, 3520, 3520, 3520,
	3520, 3520, 3520, -1000, -1000, 2585, 3432, 3520, 2265, 759,
	759, 759, 3520, 3520, 3520, 43, 43, 789, 801, -1000,
	-1000, 1821, -1000, 392, 3520, 2574, -1000, 2993, 194, 190,
	3520, 635, 597, 596, 3520, 469, 447, 3520, 3520, 3520,
	889, 1081, 1804, 1039, 21, -1000, -1000, -1000, -1000, 252,
	-1000, -1000, -1000, -1000, -1000, 1804, 2562, 1089, 12, 1033,
	918, 3520, -1000, 11, -1000, 50, 2186, -1000, -1000, -1000,
	167, -1000, -1000, 1571, 251, -1000, -1000, -1000, 182, -1000,
	303, 2004, 768, 1063, 3520, 1113, 3520, 467, 322, 249,
	247, -1000, -1000, -1000, -1000, 3520, 3520, 3520, 3520, 3520,
	1004, -1000, -1000, 1125, 3520, 3520, 1110, 1110, 1804, 3520,
	3520, 3520, -1000, 3520, 3744, -1000, -1000, -1000, -1000, 2659,
	2004, 1113, 2004, 44, 794, 342, -1000, 342, 342, 974,
	270, -1000, 10, 3571, -1000, -68, -1000, 38, 180, 180,
	833, 3869, 3520, 43, 3520, -1000, 3160, -1000, 180, 43,
	43, 246, 246, -1000, -1000, -1000, 1383, 1821, -1000, -1000,
	181, 3520, 178, 1310, -1000, 171, 3520, 3344, 3520, 168,
	165, 164, -1000, -1000, 43, 184, 184, 184, 766, -1000,
	1852, -1000, -1000, 585, -1000, 3520, 534, 2993, 531, 3520,
	3396, 618, 1069, 485, 413, 384, -1000, 6, 3730, 463,
	1033, 245, 1299, 1804, 3696, 255, 1033, 2562, 1776, 918,
	904, 906, 3744, 875, 874, 850, 955, 1268, -1000, -1000,
	-1000, -1000, -1000, 2004, 69, 1571, -1000, 2004, 3520, -1000,
	240, 1299, 192, 798, 391, 113, 1299, 2004, 162, -1000,
	3744, 1673, 2004, 149, 169, 2004, -1000, -75, -1000, -75,
	-75, -1000, -75, -1000, -1000, 0, 1000, 1113, -1000, -1000,
	-1000, -2, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 530,
	301, -1000, -1000, 3608, 3520, -1000, -1000, -1000, -1000, -1000,
	579, -1000, 578, 2004, 2004, 805, -1000, -1000, 805, -1000,
	239, 2004, 3344, 2004, 1046, -1000, -1000, 3520, 3802, -1000,
	180, -1000, -1000, 432, 159, -1000, 3520, -1000, 158, 157,
	156, 150, 425, 433, 409, 786, -1000, 136, -1000, 234,
	-1000, -1000, 454, 3520, 528, 595, 2993, 3520, 716, -1000,
	-1000, 3744, 3520, 2993, -1000, 3520, -1000, -1000, 401, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3520, 349, -1000, -1000,
	1066, 918, 43, 1591, -1000, 1081, -3, 253, -70, -1000,
	-13, -4, -75, -86, 233, 1299, -1000, 1033, -1000, 904,
	-1000, 3520, 3520, 2739, 2407, 860, -1000, 859, 850, -1000,
	926, 45, -8, -1000, -1000, -1000, -10, 1299, 118, -11,
	2004, 149, -1000, -1000, 1123, 2004, 949, -1000, 1299, 936,
	932, 410, -1000, -1000, 117, -31, -1000, 999, 115, -33,
	-1000, -1000, -35, 946, -15, 3520, 2004, -1000, 3520, 660,
	2659, 616, 634, 2659, 2659, 573, 572, 149, 114, -1000,
	-1000, -1000, 1821, 3520, 232, 398, 1352, 397, 396, 390,
	386, 231, 230, 346, 228, 344, 43, 111, -38, -1000,
	3520, -1000, 756, 2214, 699, 527, -1000, 615, -1000, 3120,
	633, 413, 894, -1000, 343, -1000, 957, -1000, 904, -1000,
	110, 1033, 1299, 3520, -1000, 3520, 1776, 1299, 109, -1000,
	920, 3744, -1000, 967, 45, 1252, 45, 2392, 2098, 853,
	-40, 1268, 3520, 108, 822, 1299, 106, -1000, -1000, -1000,
	-1000, 1299, 1299, 105, -49, 3520, 104, 2004, 3520, 227,
	995, 2004, 365, 991, 1113, 1113, 3520, 989, 1113, -1000,
	-1000, -1000, -1000, -1000, 2659, 593, 3520, 524, 519, 2659,
	2659, 103, 988, 1821, 414, 224, -1000, 3520, 221, 220,
	217, 914, 216, 414, 414, 387, 414, 385, -1000, -1000,
	43, 1490, -1000, -1000, -1000, 689, 2993, -1000, -1000, 3520,
	401, -1000, -1000, -1000, -1000, -1000, 920, 161, -1000, -1000,
	3744, 100, -19, 98, 813, 889, -1000, -1000, 3520, 215,
	820, 1252, 45, 967, 45, 1968, 1268, -1000, -52, -21,
	147, 213, -1000, 987, -1000, -1000, 1123, 2004, 3744, -1000,
	-1000, -75, -1000, 414, 149, -1000, 2826, 364, -1000, -1000,
	-1000, 946, -1000, 359, 97, 576, 517, 2659, 614, 659,
	657, 507, 506, -1000, 212, 96, -1000, 929, 902, 414,
	2150, 414, 414, 414, 206, 414, 93, 920, 91, 205,
	90, 202, -1000, 3520, -1000, 667, -1000, 889, 43, -1000,
	-1000, -1000, 3520, 128, 201, 461, 3744, 2004, -1000, -1000,
	820, -1000, 967, 45, -1000, -1000, 3520, -1000, 3520, 43,
	-1000, 1299, 149, -1000, -1000, 89, -1000, 505, 300, -1000,
	-1000, 3608, 3520, -1000, -1000, 3248, 3520, 2826, 2826, 979,
	502, 591, 2659, 3520, 713, -1000, 2659, -1000, -1000, 654,
	652, 149, -1000, -1000, 899, 3520, 74, -1000, 73, 72,
	68, 920, 65, -1000, -1000, 414, -1000, 414, 1529, -1000,
	457, -1000, 63, 43, -1000, 1299, 1055, 62, -1000, -1000,
	60, 58, -1000, 56, -1000, -1000, -1000, 2826, 611, 632,
	554, 18, 792, 1113, -1000, 501, 499, 354, 688, 496,
	-1000, 610, -1000, 628, -1000, -1000, 55, 3520, -1000, -1000,
	-1000, -1000, -1000, 52, -1000, 48, 47, -1000, 1054, -1000,
	-1000, 37, -1000, -1000, -1000, -1000, 120, -1000, 2826, 588,
	3520, 2484, 2004, 2004, 14, 790, -1000, -1000, 2826, -1000,
	682, 2659, -1000, 3520, -1000, 338, -1000, -1000, -1000, -1000,
	95, 43, -1000, 558, 495, 2826, 608, 493, 299, -1000,
	-1000, 3608, 3520, -1000, -1000, -1000, 539, 537, 2004, 2004,
	491, -1000, 666, -1000, 777, 43, -1000, -1000, 486, 587,
	2826, 3520, 709, -1000, 2826, 651, 2484, 607, 624, 2484,
	2484, 536, 512, -1000, -1000, -1000, 834, 750, 749, 723,
	-1000, 679, 484, -1000, 603, -1000, 622, -1000, -1000, 2484,
	586, 3520, 483, 478, 2484, 2484, 773, 744, -1000, 735,
	720, -1000, -1000, -1000, -1000, 677, 2826, -1000, 3520, 552,
	477, 2484, 601, 643, 640, 476, 475, 803, -1000, -1000,
	-1000, -1000, -1000, 663, 474, 553, 2484, 3520, 708, -1000,
	2484, -1000, -1000, 639, 638, -1000, 737, -1000, -1000, 676,
	473, -1000, 600, -1000, 621, -1000, -1000, -1000, -1000, 675,
	2484, -1000, 3520, -1000, 662, -1000,
}

var yyPgo = [...]int{
	0, 57, 51, 273, 21, 210, 9, 1283, 42, 17,
	36, 1279, 1278, 1276, 1274, 316, 74, 1270, 1268, 1267,
	1265, 1261, 1259, 1257, 65, 23, 28, 1256, 1254, 1253,
	49, 1251, 34, 1250, 1249, 24, 33, 1248, 1245, 1244,
	1243, 1240, 1252, 1239, 78, 88, 1463, 469, 50, 73,
	59, 40, 35, 20, 45, 1238, 1237, 44, 1236, 39,
	266, 1233, 79, 1232, 72, 71, 92, 1269, 609, 60,
	46, 13, 11, 1228, 1227, 1226, 0, 1224, 70, 1223,
	1221, 1220, 1354, 1218, 1208, 1207, 1204, 31, 100, 25,
	1203, 1201, 5, 1199, 1197, 52, 1195, 1194, 1193, 1185,
	84, 66, 77, 1180, 32, 41, 187, 1179, 19, 1177,
	1176, 8, 47, 1174, 54, 22, 48, 68, 16, 58,
	1170, 1168, 1165, 38, 1159, 1156, 26, 55, 10, 18,
	2, 12, 3, 6, 53, 1155, 14, 1146, 7, 1145,
	4, 1143, 1741, 27, 15, 135, 1142, 80, 1043, 1141,
	1138, 93, 83, 81, 69, 56, 67, 85, 1137, 30,
	563, 1134,
}

var yyR1 = [...]int{
	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 6, 6,
	7, 7, 8, 8, 8, 8, 8, 9, 9, 10,
	10, 12, 12, 11, 11, 11, 11, 11, 13, 13,
	13, 13, 13, 13, 14, 14, 15, 15, 15, 15,
	15, 16, 16, 17, 17, 18, 18, 18, 18, 18,
	19, 19, 19, 19, 19, 19, 20, 20, 20, 20,
	21, 21, 21, 21, 21, 22, 22, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 24, 24, 25,
	25, 26, 26, 26, 26, 26, 27, 27, 27, 27,
	27, 27, 27, 28, 28, 28, 28, 29, 29, 30,
	30, 31, 31, 31, 31, 32, 33, 33, 34, 35,
	35, 36, 36, 36, 37, 37, 37, 37, 37, 38,
	38, 38, 38, 38, 38, 38, 39, 39, 39, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 41, 41, 41, 42, 42, 42, 42,
	43, 43, 43, 43, 44, 44, 44, 44, 45, 45,
	46, 47, 48, 48, 49, 49, 50, 50, 51, 51,
	52, 52, 53, 53, 53, 54, 54, 54, 55, 55,
	56, 56, 57, 57, 57, 58, 58, 58, 59, 59,
	60, 60, 61, 61, 62, 62, 63, 63, 63, 63,
	63, 64, 65, 66, 66, 66, 66, 66, 67, 67,
	67, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	69, 70, 70, 70, 71, 71, 72, 72, 73, 73,
	74, 74, 74, 75, 75, 76, 77, 78, 78, 78,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 80,
	80, 80, 80, 80, 80, 80, 81, 81, 81, 81,
	82, 82, 83, 83, 83, 83, 83, 83, 83, 83,
	84, 84, 84, 84, 84, 84, 85, 85, 86, 86,
	86, 86, 86, 86, 86, 86, 86, 86, 86, 86,
	87, 88, 88, 89, 89, 90, 90, 91, 91, 91,
	92, 92, 92, 93, 93, 94, 94, 95, 95, 96,
	96, 96, 96, 96, 98, 98, 98, 97, 97, 97,
	97, 99, 99, 99, 99, 100, 100, 103, 103, 104,
	104, 104, 105, 105, 105, 105, 106, 106, 106, 106,
	106, 106, 106, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 108, 108, 109, 109, 109, 109, 110,
	111, 111, 112, 112, 113, 113, 114, 114, 115, 115,
	116, 116, 117, 117, 101, 101, 102, 102, 118, 118,
	119, 119, 120, 120, 120, 120, 121, 122, 123, 123,
	124, 124, 124, 124, 124, 124, 124, 124, 125, 125,
	126, 126, 127, 127, 128, 128, 129, 129, 130, 130,
	131, 131, 132, 132, 133, 133, 134, 134, 135, 135,
	136, 136, 137, 137, 138, 138, 139, 139, 140, 140,
	141, 141, 142, 142, 142, 142, 142, 142, 142, 142,
	142, 143, 144, 144, 145, 146, 146, 147, 147, 148,
	149, 150, 151, 152, 152, 153, 153, 154, 154, 155,
	155, 156, 156, 156, 157, 157, 158, 158, 159, 159,
	160, 160, 161, 161,
}

var yyR2 = [...]int{
	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 8, 8, 9, 9, 1, 1, 1,
	2, 1, 1, 7, 8, 6, 1, 1, 7, 8,
	6, 1, 1, 1, 1, 1, 6, 8, 8, 9,
	9, 1, 2, 1, 1, 7, 8, 6, 1, 1,
	7, 8, 6, 1, 1, 1, 2, 2, 1, 2,
	4, 4, 4, 4, 2, 1, 1, 7, 9, 6,
	6, 8, 5, 7, 7, 7, 7, 1, 3, 1,
	3, 0, 1, 1, 2, 2, 5, 5, 2, 4,
	2, 3, 5, 6, 8, 5, 3, 1, 3, 1,
	3, 4, 2, 4, 3, 1, 1, 3, 3, 1,
	3, 1, 1, 3, 9, 10, 10, 12, 3, 0,
	1, 1, 1, 1, 2, 2, 5, 6, 3, 4,
	4, 4, 4, 4, 4, 2, 2, 2, 2, 4,
	4, 2, 2, 2, 4, 1, 2, 2, 4, 2,
	2, 1, 2, 2, 3, 4, 3, 5, 4, 6,
	8, 10, 9, 11, 5, 4, 4, 4, 1, 1,
	3, 2, 0, 2, 0, 2, 0, 3, 0, 2,
	0, 3, 1, 6, 5, 0, 1, 2, 1, 1,
	0, 1, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 6, 9, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 1, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	1, 3, 1, 6, 1, 3, 1, 3, 2, 4,
	0, 1, 1, 1, 1, 3, 3, 3, 1, 6,
	3, 3, 3, 3, 4, 4, 5, 6, 6, 3,
	4, 4, 3, 4, 4, 4, 4, 4, 2, 3,
	3, 3, 3, 3, 2, 2, 3, 3, 2, 2,
	0, 1, 4, 4, 6, 8, 3, 4, 4, 4,
	5, 5, 5, 5, 5, 1, 5, 10, 8, 9,
	9, 9, 9, 9, 9, 8, 8, 10, 8, 10,
	2, 1, 5, 0, 3, 2, 5, 2, 2, 2,
	2, 2, 2, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 6, 6,
	8, 6, 8, 6, 8, 1, 1, 1, 1, 1,
	2, 3, 1, 2, 3, 4, 1, 2, 3, 1,
	1, 1, 3, 4, 5, 6, 5, 6, 5, 6,
	7, 6, 7, 2, 4, 1, 3, 1, 3, 5,
	0, 1, 4, 5, 0, 2, 1, 3, 1, 3,
	1, 3, 1, 3, 1, 3, 1, 3, 1, 3,
	1, 3, 6, 9, 5, 8, 7, 3, 1, 3,
	10, 13, 9, 12, 9, 12, 8, 11, 5, 6,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 4, 5, 0, 2, 4, 5, 0, 2,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 3, 1, 3, 1, 3, 1,
	1, 1, 1, 0, 1, 0, 1, 0, 1, 0,
	1, 1, 1, 1, 0, 1, 0, 1, 0, 1,
	1, 1, 0, 3,
}

var yyChk = [...]int{
	-1000, -1, -7, -5, -11, -42, -43, -120, -121, -124,
	-125, -23, -20, -21, -27, -28, -31, -37, -22, -40,
	-41, -68, 15, 89, 88, -8, -10, -44, -60, -46,
	28, 33, 36, 134, 97, -145, 103, 21, 22, 101,
	102, 100, 104, 121, 112, 113, 34, 125, 135, 117,
	118, 119, 120, 126, 122, 123, 124, 127, -63, -80,
	-77, -76, -83, -84, -86, -110, -79, -81, -143, -148,
	-149, -150, -151, -39, 170, 16, 91, 116, -45, 81,
	18, 5, 6, 7, -64, -65, -67, 164, 165, -142,
	149, 151, 152, 150, -85, 153, 154, 155, 156, -70,
	71, 75, 169, 11, 13, 14, 17, 12, 98, 9,
	79, -66, 4, 136, 137, 138, 140, 141, 142, 143,
	144, 148, 31, 162, -68, 170, -76, -145, 89, 28,
	134, 88, -111, -67, -68, -52, 46, -44, -46, 25,
	20, 28, 23, -76, 170, -47, -48, 26, 19, 170,
	26, 37, 37, -147, 170, -146, -143, -147, -142, -143,
	98, 45, 104, 128, -148, -151, -148, -142, -142, -38,
	105, 106, 38, 39, 107, 108, -142, -142, -68, -68,
	-68, -151, -142, -68, -68, -68, -142, -68, -115, -67,
	-142, -68, -142, -142, 159, -67, -68, -115, -42, -60,
	-46, -68, -143, -144, -9, 134, 97, 6, 66, 67,
	68, -62, -61, -158, 32, -152, 80, 158, 157, 163,
	78, 76, 75, 72, 77, -160, 165, 164, 166, 167,
	168, 74, 73, -67, -67, 173, 170, 170, 170, 170,
	170, 170, 170, 170, 170, 157, 163, -153, -160, 75,
	-76, -67, -67, -142, 170, 173, -1, 93, -115, -82,
	170, -111, -134, -112, 92, -53, -59, 52, 53, 49,
	-52, -47, 26, -102, -100, -95, -97, -142, 31, -96,
	140, 141, 142, 143, 144, 26, 19, -101, -95, -48,
	-49, 24, -144, -143, -117, -106, -103, -107, 30, -104,
	170, -100, -99, -76, -98, 145, 146, 147, -82, -115,
	-100, -161, 89, -100, -152, 172, 159, 98, 45, 128,
	129, -142, -95, -142, -142, 163, 44, 163, 44, 63,
	-142, -68, -68, 19, 63, 63, 44, 19, 19, 172,
	63, 172, -68, 6, -67, 171, 171, 171, 171, 95,
	72, 172, 72, -143, -144, -157, 69, -157, -157, 172,
	-142, -119, -109, -67, -69, -142, 166, -67, -67, -67,
	-153, -67, 76, 72, 77, -70, 170, -76, -67, 70,
	69, -67, -67, -67, -67, -67, -67, -67, -142, 6,
	-82, -152, -82, -67, 171, -119, -152, -152, -152, -82,
	-82, -82, -70, -70, 76, 72, 70, 69, 78, 150,
	-67, -142, 6, -1, 171, 92, -135, 94, -113, 94,
	-67, -68, 99, 100, -68, -68, -72, -73, -67, -53,
	-48, -100, 21, 172, 170, -100, -117, 19, 172, -49,
	-50, 47, -67, 61, -154, -156, 64, 172, 56, 58,
	59, 60, -142, 29, -106, -76, -142, 29, 170, 171,
	63, 170, -142, 75, 34, 35, 43, 21, -82, -147,
	-67, 99, 170, 29, 170, 170, -68, -142, -68, -142,
	-142, -68, -142, -68, -30, -29, -68, 26, 5, -30,
	-116, -68, -151, -151, -100, -116, -116, -115, -68, -2,
	-12, -5, -13, 89, 88, -8, -10, -6, 114, 115,
	-142, -144, -142, 72, 72, -45, -44, -45, -45, -62,
	29, 170, 172, 29, 173, -64, -65, 73, -67, -70,
	-67, -70, -70, 171, -82, 171, 19, 171, -82, -82,
	-69, -82, 171, 171, 171, -70, -78, 170, -76, 148,
	-78, -78, -153, 172, -127, -126, 94, 90, 96, -1,
	96, -67, 93, 93, 20, -55, 38, 105, -56, -57,
	54, 87, 138, -58, 87, 138, 172, -74, 50, 51,
	99, -49, 27, 170, -42, -123, -122, -66, -142, -102,
	-95, -68, -142, 31, 63, 170, -49, -117, -101, -50,
	-51, 48, 49, 55, 55, -155, 57, -154, -156, -105,
	-106, 65, -104, -142, 171, -142, -68, 170, -114, -66,
	170, -159, 29, 71, -24, 170, -142, -66, 170, -66,
	-142, 171, -42, -142, -118, -142, -42, 171, -36, -33,
	-35, -32, -34, -143, -142, 172, 29, -144, 172, 96,
	162, -68, -111, 95, 95, -142, -142, 170, -118, -119,
	-142, -69, -67, 73, 111, 171, -67, 171, 171, 171,
	171, 111, 111, 132, 111, 132, 73, -71, -70, -76,
	170, 101, 72, -67, 96, -127, -1, -68, 88, -67,
	-1, -68, -54, 139, 81, -72, 137, 20, -50, -71,
	-114, -48, 172, 163, 171, 172, 172, 170, -114, -49,
	-51, -67, -115, -106, 65, -106, 65, 55, 55, -155,
	-104, 172, 172, -114, 171, 172, -118, -42, -26, 38,
	39, 40, 41, -25, -24, 42, -114, 44, 44, 111,
	171, 172, 29, 171, 172, 172, 42, 171, 172, -30,
	-142, -116, 91, -2, 93, -136, 92, -2, -2, 95,
	95, -42, 171, -67, 170, 111, 171, 99, 111, 111,
	111, 133, 111, 170, 170, 137, 170, 137, -70, 171,
	172, -67, 82, 171, 89, 96, 93, -112, -134, 92,
	-57, -59, 136, -75, 38, 39, -51, 171, -49, -123,
	-67, -82, -95, -114, 171, -52, -104, -108, 62, 63,
	-104, -106, 65, -106, 65, 55, 172, -105, -142, -68,
	171, 63, -114, 171, -66, -66, 171, 172, -67, 171,
	-142, -142, -68, 170, 29, -118, 130, 29, -32, -35,
	-35, -143, -68, 29, -36, -2, -137, 94, -68, 96,
	96, -2, -2, 171, 29, -88, -87, -89, 110, 170,
	-67, 170, 170, 170, 47, 170, -87, -89, -88, 111,
	-87, 111, -71, 172, 89, -1, -54, -52, 27, -42,
	171, 171, 172, 171, 63, -53, -67, 170, -108, -108,
	-104, -104, -106, 65, -105, 171, 172, 171, 172, 27,
	-42, 170, -159, -26, -25, -88, -42, -3, -14, -5,
	-18, 89, 88, -15, -16, 91, 131, 130, 130, 171,
	-129, -128, 94, 90, 96, -2, 93, 91, 91, 96,
	96, 170, 171, -52, 46, 49, -88, 171, -88, -88,
	-88, 170, -87, 171, 171, 170, 171, 170, -67, -126,
	-53, -71, -82, 27, -42, 170, 99, -118, -108, -104,
	-82, -82, -71, -114, -42, 171, 96, 162, -68, -111,
	-68, -143, -144, -9, -68, -3, -3, 29, 96, -129,
	-2, -68, 88, -2, 91, 91, -42, 49, -115, 171,
	171, 171, 171, -52, 171, -88, -87, 171, 99, 171,
	-71, -114, 20, 171, 171, 171, 171, -3, 93, -138,
	92, 95, 72, 72, -143, -144, 96, 96, 130, 89,
	96, 93, -136, 92, 171, -72, 171, 171, 171, 20,
	171, 27, -42, -3, -139, 94, -68, -4, -17, -5,
	-19, 89, 88, -15, -16, -6, -142, -142, 72, 72,
	-3, 89, -2, -90, 138, 27, -42, -71, -131, -130,
	94, 90, 96, -3, 93, 96, 162, -68, -111, 95,
	95, -142, -142, 96, -128, -91, 76, 83, 6, 86,
	-71, 96, -131, -3, -68, 88, -3, 91, -4, 93,
	-140, 92, -4, -4, 95, 95, -93, 83, -92, 6,
	86, 84, 84, 87, 89, 96, 93, -138, 92, -4,
	-141, 94, -68, 96, 96, -4, -4, 73, 84, 84,
	85, 87, 89, -3, -133, -132, 94, 90, 96, -4,
	93, 91, 91, 96, 96, -94, 83, -92, -130, 96,
	-133, -4, -68, 88, -4, 91, 91, 85, 89, 96,
	93, -140, 92, 89, -4, -132,
}

var yyDef = [...]int{
	-2, -2, 2, 30, 31, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
	25, -2, 27, 0, 410, 46, 47, -2, 0, 192,
	0, 0, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 139, 0, 0, 85, 86, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 171, 0, 0, 241, 242,
	243, -2, 245, 246, 247, 248, 249, 250, 251, 253,
	254, 255, 256, 257, 0, 259, 0, 39, 0, 516,
	503, 226, 227, 228, 229, 230, 0, 0, 0, 233,
	0, 0, 0, 0, 325, 0, 0, 0, 0, 505,
	0, 0, 0, 491, 499, 500, 501, 502, 0, 231,
	232, 238, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 0, -2, 239, 310, 244, 252, 0, 0,
	0, 410, 0, 411, 239, 218, 0, -2, 192, 0,
	0, 0, 0, 189, 0, 192, 194, 0, 0, 310,
	0, 522, 0, 76, 503, 497, 495, 77, 0, 79,
	0, 0, 0, 0, 0, 0, 84, 108, 110, 0,
	140, 141, 142, 143, 0, 0, 0, -2, -2, 239,
	239, 155, 167, -2, -2, -2, -2, -2, 166, 418,
	-2, -2, 172, 173, 0, 0, 239, 0, 0, 0,
	192, 239, 251, 0, 0, 37, 38, 40, 514, 514,
	514, 221, 224, 0, 517, 0, 504, 0, 520, 521,
	505, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 304, 305, 0, 310, 310, 0, 503,
	503, 503, 310, 310, 310, 520, 521, 0, 0, 506,
	298, 308, 309, 0, 0, 0, 3, -2, 0, 0,
	310, 0, 468, 414, 0, 176, 202, 0, 0, 0,
	218, 192, 0, 0, 426, 375, 376, 357, 358, 0,
	-2, -2, -2, -2, -2, 0, 0, 0, 424, 194,
	196, 0, 191, 492, 193, -2, 386, 389, 390, 391,
	0, 377, 378, 379, 0, 364, 365, 366, 0, 311,
	0, 0, 0, 0, 310, 0, 0, 0, 0, 0,
	0, 111, 116, 124, 138, 0, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, 227, 494, 240, 258, 261, 275, -2,
	0, 0, 0, 0, 0, 0, 515, 0, 0, 516,
	0, 190, 430, 405, 407, 233, 260, 276, -2, -2,
	0, 0, 0, 0, 0, 289, 0, 262, -2, 0,
	0, 299, 300, 301, 302, 303, 306, 307, 234, 236,
	0, 310, 0, 418, 316, 0, 310, 310, 310, 0,
	0, 0, 281, 283, 0, 0, 0, 0, 505, 148,
	0, 235, 237, 452, 318, 0, 0, -2, 0, 0,
	0, 239, 0, 0, -2, -2, 201, 266, 270, 178,
	194, 0, 0, 0, 0, 0, 194, 0, 0, 196,
	198, 0, 195, 0, 0, 509, 507, 0, 508, 511,
	512, 513, 387, 0, 507, -2, 380, 0, 0, 319,
	0, 0, 518, 0, 0, 0, 0, 0, 0, 498,
	496, 0, 0, 0, 0, 0, -2, -2, -2, -2,
	-2, -2, -2, -2, 109, 119, -2, 0, 121, 123,
	164, -2, 153, 154, 168, 159, 160, 419, -2, 0,
	0, 41, 42, 0, 410, 51, 52, 53, 28, 29,
	0, 493, 0, 0, 0, 185, 188, 186, 187, 225,
	0, 0, 0, 0, 0, 284, 285, 0, 0, 290,
	-2, 294, 296, 312, 0, 313, 0, 317, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 0, 278, 0,
	295, 297, 0, 0, 0, 452, -2, 0, 0, 469,
	409, 415, 0, -2, 177, 0, 208, 209, 205, 211,
	212, 213, 214, 219, 216, 217, 0, 268, 271, 272,
	0, 196, 0, 0, 434, 192, 438, 0, 233, 427,
	0, 239, -2, 358, 0, 0, 448, 194, 425, 198,
	184, 0, 0, 0, 0, 0, 510, 0, 509, 423,
	-2, 0, 391, 388, 392, 381, 239, 0, 0, 416,
	0, 0, 519, 523, 101, 0, 97, 92, 0, 0,
	0, 322, 106, 107, 0, 428, 115, 0, 0, 131,
	132, 126, 129, 125, 0, 0, 0, 112, 0, 0,
	-2, 239, 0, -2, -2, 0, 0, 0, 0, 431,
	406, 408, 286, 0, 0, 320, 0, 321, 323, 324,
	326, 0, 0, 0, 0, 0, 0, 0, 264, -2,
	0, 146, 0, 0, 0, 0, 453, 239, 45, 412,
	466, 239, 218, 206, 0, 267, 0, 179, 198, 432,
	0, 194, 0, 0, 367, 310, 0, 0, 0, 449,
	200, 199, 197, 393, 0, 507, 0, 0, 0, 0,
	383, 0, 0, 0, 0, 0, 0, 89, 90, 102,
	103, 0, 0, 0, 99, 0, 0, 0, 0, 0,
	113, 0, 0, 0, 0, 0, 0, 0, 0, 120,
	118, 421, 32, 5, -2, 472, 0, 0, 0, -2,
	-2, 0, 0, 287, 343, 0, 314, 0, 0, 0,
	0, 0, 0, 343, 343, 0, 343, 0, 288, 277,
	0, 0, 147, 263, 43, 0, -2, 413, 467, 0,
	205, 204, 207, 269, 273, 274, 200, 0, 436, 439,
	437, 0, 0, 0, 0, 218, 398, 394, 0, 0,
	0, 507, 0, 396, 0, 0, 0, 384, 233, 239,
	0, 0, 417, -2, 104, 105, 101, 0, 98, 93,
	94, -2, -2, 343, 0, 429, -2, 0, 127, 133,
	130, 0, -2, 0, 0, 456, 0, -2, 239, 0,
	0, 0, 0, 222, 0, 0, 341, 200, 0, 343,
	0, 343, 343, 343, 0, 343, 0, 200, 0, 0,
	0, 0, 265, 0, 44, 450, 203, 218, 0, 435,
	368, 369, 310, 0, 0, 180, 403, 0, 399, 395,
	0, 401, 397, 0, 385, 371, 310, 373, 310, 0,
	446, 0, 0, 91, 100, 0, 114, 0, 0, 54,
	55, 0, 410, 68, 69, 0, 61, -2, -2, 0,
	0, 456, -2, 0, 0, 473, -2, 33, 34, 0,
	0, 0, 328, 340, 0, 0, 0, 315, 0, 0,
	0, 200, 0, 335, 336, 343, 338, 343, 0, 451,
	182, 433, 0, 0, 442, 0, 0, 0, 400, 402,
	0, 0, 444, 0, 88, 331, 134, -2, 239, 0,
	239, 251, 0, 0, -2, 0, 0, 0, 0, 0,
	457, 239, 50, 470, 35, 36, 0, 0, 344, 329,
	330, 332, 333, 0, 334, 0, 0, 279, 0, 370,
	440, 0, 181, 404, 372, 374, 0, 7, -2, 476,
	0, -2, 0, 0, 0, 0, 135, 136, -2, 48,
	0, -2, 471, 0, 223, 201, 327, 337, 339, 183,
	0, 0, 447, 460, 0, -2, 239, 0, 0, 63,
	64, 0, 410, 73, 74, 75, 0, 0, 0, 0,
	0, 49, 454, 342, 0, 0, 443, 445, 0, 460,
	-2, 0, 0, 477, -2, 0, -2, 239, 0, -2,
	-2, 0, 0, 137, 455, 345, 0, 0, 0, 0,
	441, 0, 0, 461, 239, 67, 474, 56, 9, -2,
	480, 0, 0, 0, -2, -2, 0, 0, 354, 0,
	0, 347, 348, 349, 65, 0, -2, 475, 0, 464,
	0, -2, 239, 0, 0, 0, 0, 0, 353, 350,
	351, 352, 66, 458, 0, 464, -2, 0, 0, 481,
	-2, 57, 58, 0, 0, 346, 0, 356, 459, 0,
	0, 465, 239, 72, 478, 59, 60, 355, 70, 0,
	-2, 479, 0, 71, 462, 463,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 169, 3, 3, 3, 168, 3, 3,
	170, 171, 166, 165, 172, 164, 173, 167, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 162,
	3, 163,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
}

var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:253
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:258
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:263
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:270
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:274
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:280
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:284
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:290
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:294
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:300
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:304
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:308
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:312
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:316
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:320
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:324
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:328
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:332
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:336
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:340
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:344
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:348
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:352
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:356
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:360
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:364
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:368
		{
			yyVAL.statement = ExternalCommand{BaseExpr: NewBaseExpr(yyDollar[1].token), Command: yyDollar[1].token.Literal}
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:374
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:378
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:384
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:388
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 32:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:394
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 33:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:398
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 34:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:402
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 35:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:406
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 36:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:410
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:416
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:420
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:426
		{
			yyVAL.statement = Exit{}
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:430
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:436
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:440
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:446
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:450
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:454
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:458
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:462
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 48:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:468
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 49:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:472
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 50:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:476
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:480
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:484
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:488
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:494
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:498
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 56:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:504
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:508
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 58:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:512
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 59:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:516
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 60:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:520
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:526
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:530
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:536
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:540
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:546
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 66:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:550
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 67:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:554
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:558
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:562
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 70:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:568
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 71:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:572
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 72:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:576
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:580
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:584
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:588
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:594
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:598
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:602
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:606
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:612
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 81:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:616
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:620
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:624
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:628
		{
			yyVAL.statement = UnsetEnvVar{EnvVar: yyDollar[2].envvar}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:634
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:638
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 87:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:644
		{
			yyVAL.statement = CreateTable{Table: yyDollar[4].identifier, Fields: yyDollar[6].queryexprs, IfNotExists: yyDollar[3].bool}
		}
	case 88:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:648
		{
			yyVAL.statement = CreateTable{Table: yyDollar[4].identifier, Fields: yyDollar[6].queryexprs, Query: yyDollar[9].queryexpr, IfNotExists: yyDollar[3].bool}
		}
	case 89:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:652
		{
			yyVAL.statement = CreateTable{Table: yyDollar[4].identifier, Query: yyDollar[6].queryexpr, IfNotExists: yyDollar[3].bool}
		}
	case 90:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:656
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:660
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:664
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:668
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 94:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:672
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 95:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:676
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].identifier}
		}
	case 96:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:680
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].queryexpr}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:686
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:690
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:696
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:700
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:706
		{
			yyVAL.expression = nil
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:710
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:714
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:718
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:722
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:728
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 107:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:732
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Statement: yyDollar[5].identifier}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:736
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 109:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:740
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:744
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:748
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 112:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:752
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:758
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 114:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:762
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 115:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:766
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:770
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].queryexpr}
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:776
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:780
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr, Name: yyDollar[3].identifier}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:786
		{
			yyVAL.replacevals = []ReplaceValue{yyDollar[1].replaceval}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:790
		{
			yyVAL.replacevals = append([]ReplaceValue{yyDollar[1].replaceval}, yyDollar[3].replacevals...)
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:796
		{
			yyVAL.statement = StatementPreparation{Name: yyDollar[2].identifier, Statement: value.NewString(yyDollar[4].token.Literal)}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:800
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier}
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:804
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:808
		{
			yyVAL.statement = DisposeStatement{Name: yyDollar[3].identifier}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:814
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:820
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:824
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:830
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:836
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:840
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:846
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:850
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:854
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 134:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:860
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 135:
		yyDollar = yyS[yypt-10 : yypt+1]
//line lib/parser/parser.y:864
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 136:
		yyDollar = yyS[yypt-10 : yypt+1]
//line lib/parser/parser.y:868
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 137:
		yyDollar = yyS[yypt-12 : yypt+1]
//line lib/parser/parser.y:872
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:876
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:882
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:886
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:890
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:894
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:898
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:902
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:906
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:912
		{
			yyVAL.queryexpr = CursorStatus{Cursor: yyDollar[2].identifier, Negation: yyDollar[4].token, Type: yyDollar[5].token}
		}
	case 147:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:916
		{
			yyVAL.queryexpr = CursorStatus{Cursor: yyDollar[2].identifier, Negation: yyDollar[4].token, Type: yyDollar[6].token}
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:920
		{
			yyVAL.queryexpr = CursorAttrebute{Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:926
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:930
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:934
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:938
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:942
		{
			yyVAL.statement = AddFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:946
		{
			yyVAL.statement = RemoveFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:950
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:954
		{
			yyVAL.statement = Echo{Value: yyDollar[2].queryexpr}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:958
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:962
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:966
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:970
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:974
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].identifier}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:978
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:982
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr}
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:986
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:990
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:994
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token), Keywords: yyDollar[2].queryexprs}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:998
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1002
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier, Table: yyDollar[4].queryexpr}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1006
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].identifier}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1010
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].queryexpr}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1014
		{
			yyVAL.statement = Pwd{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1018
		{
			yyVAL.statement = Reload{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1024
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1028
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[3].queryexpr}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1032
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1038
		{
			yyVAL.queryexpr = SelectQuery{
				SelectEntity:  yyDollar[1].queryexpr,
				OrderByClause: yyDollar[2].queryexpr,
				LimitClause:   yyDollar[3].queryexpr,
			}
		}
	case 177:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1046
		{
			yyVAL.queryexpr = SelectQuery{
				SelectEntity:  yyDollar[1].queryexpr,
				OrderByClause: yyDollar[2].queryexpr,
				LimitClause:   yyDollar[3].queryexpr,
				Context:       yyDollar[5].token,
			}
		}
	case 178:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1055
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
			}
		}
	case 179:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1064
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				Context:       yyDollar[6].token,
			}
		}
	case 180:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:1076
		{
			yyVAL.queryexpr = SelectQuery{
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[1].queryexpr,
					IntoClause:    yyDollar[2].queryexpr,
					FromClause:    yyDollar[3].queryexpr,
					WhereClause:   yyDollar[4].queryexpr,
					GroupByClause: yyDollar[5].queryexpr,
					HavingClause:  yyDollar[6].queryexpr,
				},
				OrderByClause: yyDollar[7].queryexpr,
				LimitClause:   yyDollar[8].queryexpr,
			}
		}
	case 181:
		yyDollar = yyS[yypt-10 : yypt+1]
//line lib/parser/parser.y:1091
		{
			yyVAL.queryexpr = SelectQuery{
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[1].queryexpr,
					IntoClause:    yyDollar[2].queryexpr,
					FromClause:    yyDollar[3].queryexpr,
					WhereClause:   yyDollar[4].queryexpr,
					GroupByClause: yyDollar[5].queryexpr,
					HavingClause:  yyDollar[6].queryexpr,
				},
				OrderByClause: yyDollar[7].queryexpr,
				LimitClause:   yyDollar[8].queryexpr,
				Context:       yyDollar[10].token,
			}
		}
	case 182:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1107
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause: yyDollar[1].queryexpr,
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[2].queryexpr,
					IntoClause:    yyDollar[3].queryexpr,
					FromClause:    yyDollar[4].queryexpr,
					WhereClause:   yyDollar[5].queryexpr,
					GroupByClause: yyDollar[6].queryexpr,
					HavingClause:  yyDollar[7].queryexpr,
				},
				OrderByClause: yyDollar[8].queryexpr,
				LimitClause:   yyDollar[9].queryexpr,
			}
		}
	case 183:
		yyDollar = yyS[yypt-11 : yypt+1]
//line lib/parser/parser.y:1123
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause: yyDollar[1].queryexpr,
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[2].queryexpr,
					IntoClause:    yyDollar[3].queryexpr,
					FromClause:    yyDollar[4].queryexpr,
					WhereClause:   yyDollar[5].queryexpr,
					GroupByClause: yyDollar[6].queryexpr,
					HavingClause:  yyDollar[7].queryexpr,
				},
				OrderByClause: yyDollar[8].queryexpr,
				LimitClause:   yyDollar[9].queryexpr,
				Context:       yyDollar[11].token,
			}
		}
	case 184:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1142
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 185:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1152
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1161
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 187:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1170
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1181
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1185
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1191
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1197
		{
			yyVAL.queryexpr = IntoClause{Variables: yyDollar[2].variables}
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1203
		{
			yyVAL.queryexpr = nil
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1207
		{
			yyVAL.queryexpr = FromClause{Tables: yyDollar[2].queryexprs}
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1213
		{
			yyVAL.queryexpr = nil
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1217
		{
			yyVAL.queryexpr = WhereClause{Filter: yyDollar[2].queryexpr}
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1223
		{
			yyVAL.queryexpr = nil
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1227
		{
			yyVAL.queryexpr = GroupByClause{Items: yyDollar[3].queryexprs}
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1233
		{
			yyVAL.queryexpr = nil
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1237
		{
			yyVAL.queryexpr = HavingClause{Filter: yyDollar[2].queryexpr}
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1243
		{
			yyVAL.queryexpr = nil
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1247
		{
			yyVAL.queryexpr = OrderByClause{Items: yyDollar[3].queryexprs}
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1253
		{
			if yyDollar[1].queryexpr == nil {
				yyVAL.queryexpr = yyDollar[1].queryexpr
			} else {
				yyVAL.queryexpr = LimitClause{BaseExpr: yyDollar[1].queryexpr.(OffsetClause).BaseExpr, OffsetClause: yyDollar[1].queryexpr}
			}
		}
	case 203:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1261
		{
			var base *BaseExpr
			if yyDollar[1].queryexpr == nil {
				base = NewBaseExpr(yyDollar[2].token)
			} else {
				base = yyDollar[1].queryexpr.(OffsetClause).BaseExpr
			}
			yyVAL.queryexpr = LimitClause{BaseExpr: base, Type: yyDollar[2].token, Position: yyDollar[3].token, Value: yyDollar[4].queryexpr, Unit: yyDollar[5].token, Restriction: yyDollar[6].token, OffsetClause: yyDollar[1].queryexpr}
		}
	case 204:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1271
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, Value: yyDollar[2].queryexpr, Unit: yyDollar[3].token, Restriction: yyDollar[4].token, OffsetClause: yyDollar[5].queryexpr}
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1277
		{
			yyVAL.token = Token{}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1281
		{
			yyVAL.token = yyDollar[1].token
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1285
		{
			yyVAL.token = yyDollar[2].token
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1291
		{
			yyVAL.token = yyDollar[1].token
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1295
		{
			yyVAL.token = yyDollar[1].token
		}
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1301
		{
			yyVAL.token = Token{}
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1305
		{
			yyVAL.token = yyDollar[1].token
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1315
		{
			yyVAL.token = yyDollar[1].token
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1319
		{
			yyVAL.token = yyDollar[1].token
		}
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1325
		{
			yyVAL.token = Token{}
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1329
		{
			yyVAL.token = yyDollar[1].token
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1333
		{
			yyVAL.token = yyDollar[1].token
		}
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1339
		{
			yyVAL.queryexpr = nil
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1343
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: yyDollar[2].queryexpr, Unit: yyDollar[3].token}
		}
	case 220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1349
		{
			yyVAL.queryexpr = nil
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1353
		{
			yyVAL.queryexpr = WithClause{InlineTables: yyDollar[2].queryexprs}
		}
	case 222:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1359
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 223:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1363
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1369
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1373
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1379
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1383
		{
			i, err := strconv.ParseInt(yyDollar[1].token.Literal, 10, 64)
			if err != nil {
				yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
			} else {
				iv := NewIntegerValue(i)
				iv.Literal = yyDollar[1].token.Literal
				yyVAL.queryexpr = iv
			}
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1394
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1398
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1402
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1408
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1414
		{
			yyVAL.queryexpr = NewNullValue()
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1420
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1424
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1428
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1432
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1436
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1442
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1446
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1450
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1456
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1460
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1464
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1468
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1472
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1476
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1480
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1484
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1488
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1492
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1496
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1500
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1504
		{
			yyVAL.queryexpr = yyDollar[1].envvar
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1508
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1512
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1516
		{
			yyVAL.queryexpr = yyDollar[1].flag
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1520
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1524
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1528
		{
			name := ""
			if yyDollar[1].token.Literal[0] == ':' {
				name = yyDollar[1].token.Literal[1:]
			}
			yyVAL.queryexpr = Placeholder{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Ordinal: yyDollar[1].token.HolderOrdinal, Name: name}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1538
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1544
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1548
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 263:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1552
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1558
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1562
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1568
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1572
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1578
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 269:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1582
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, NullsPosition: yyDollar[4].token}
		}
	case 270:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1588
		{
			yyVAL.token = Token{}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1592
		{
			yyVAL.token = yyDollar[1].token
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1596
		{
			yyVAL.token = yyDollar[1].token
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1602
		{
			yyVAL.token = yyDollar[1].token
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1606
		{
			yyVAL.token = yyDollar[1].token
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1612
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1618
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1641
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1645
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 279:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1649
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1655
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1659
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1663
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1667
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1671
		{
			yyVAL.queryexpr = Is{LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1675
		{
			yyVAL.queryexpr = Is{LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 286:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1679
		{
			yyVAL.queryexpr = Between{LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 287:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1683
		{
			yyVAL.queryexpr = Between{LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 288:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1687
		{
			yyVAL.queryexpr = Between{LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1691
		{
			yyVAL.queryexpr = In{LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 290:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1695
		{
			yyVAL.queryexpr = In{LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 291:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1699
		{
			yyVAL.queryexpr = In{LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1703
		{
			yyVAL.queryexpr = Like{LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 293:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1707
		{
			yyVAL.queryexpr = Like{LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 294:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1711
		{
			yyVAL.queryexpr = Any{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1715
		{
			yyVAL.queryexpr = Any{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1719
		{
			yyVAL.queryexpr = All{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1723
		{
			yyVAL.queryexpr = All{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1727
		{
			yyVAL.queryexpr = Exists{Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1733
		{
			yyVAL.queryexpr = Arithmetic{BaseExpr: NewBaseExpr(yyDollar[2].token), LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1737
		{
			yyVAL.queryexpr = Arithmetic{BaseExpr: NewBaseExpr(yyDollar[2].token), LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1741
		{
			yyVAL.queryexpr = Arithmetic{BaseExpr: NewBaseExpr(yyDollar[2].token), LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1745
		{
			yyVAL.queryexpr = Arithmetic{BaseExpr: NewBaseExpr(yyDollar[2].token), LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1749
		{
			yyVAL.queryexpr = Arithmetic{BaseExpr: NewBaseExpr(yyDollar[2].token), LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1753
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1757
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1763
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1767
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1771
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1775
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1781
		{
			yyVAL.queryexprs = nil
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1785
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1791
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1795
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 314:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1799
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: []QueryExpression{yyDollar[3].queryexpr, yyDollar[5].queryexpr}, From: yyDollar[4].token}
		}
	case 315:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:1803
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: []QueryExpression{yyDollar[3].queryexpr, yyDollar[5].queryexpr, yyDollar[7].queryexpr}, From: yyDollar[4].token, For: yyDollar[6].token}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1807
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 317:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1811
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1815
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 319:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1819
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 320:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1826
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 321:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1830
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1834
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1838
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1842
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1846
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1852
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 327:
		yyDollar = yyS[yypt-10 : yypt+1]
//line lib/parser/parser.y:1856
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, OrderBy: yyDollar[9].queryexpr}
		}
	case 328:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:1862
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 329:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1866
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 330:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1870
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 331:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1874
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 332:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1878
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 333:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1882
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 334:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1886
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 335:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:1890
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 336:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:1894
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 337:
		yyDollar = yyS[yypt-10 : yypt+1]
//line lib/parser/parser.y:1898
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreType: yyDollar[6].token, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 338:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:1902
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 339:
		yyDollar = yyS[yypt-10 : yypt+1]
//line lib/parser/parser.y:1906
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreType: yyDollar[6].token, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1912
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1918
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1922
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: OrderByClause{Items: yyDollar[4].queryexprs}, WindowingClause: yyDollar[5].queryexpr}
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1928
		{
			yyVAL.queryexpr = nil
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1932
		{
			yyVAL.queryexpr = PartitionClause{Values: yyDollar[3].queryexprs}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1938
		{
			yyVAL.queryexpr = WindowingClause{FrameLow: yyDollar[2].queryexpr}
		}
	case 346:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1942
		{
			yyVAL.queryexpr = WindowingClause{FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1948
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Unbounded: yyDollar[1].token}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1952
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Offset: i}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1957
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1963
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Offset: i}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1968
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Offset: i}
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1973
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1979
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Unbounded: yyDollar[1].token}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1983
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1989
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Unbounded: yyDollar[1].token}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1993
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1999
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2003
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2009
		{
			yyVAL.token = yyDollar[1].token
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2013
		{
			yyVAL.token = yyDollar[1].token
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2017
		{
			yyVAL.token = yyDollar[1].token
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2021
		{
			yyVAL.token = yyDollar[1].token
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2025
		{
			yyVAL.token = yyDollar[1].token
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2031
		{
			yyVAL.token = yyDollar[1].token
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2035
		{
			yyVAL.token = yyDollar[1].token
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2039
		{
			yyVAL.token = yyDollar[1].token
		}
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2045
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, Path: yyDollar[3].queryexpr, Args: nil}
		}
	case 368:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2049
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, Path: yyDollar[3].queryexpr, Args: yyDollar[5].queryexprs}
		}
	case 369:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2053
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: nil}
		}
	case 370:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:2057
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: yyDollar[7].queryexprs}
		}
	case 371:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2063
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: nil}
		}
	case 372:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:2067
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: yyDollar[7].queryexprs}
		}
	case 373:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2071
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: nil}
		}
	case 374:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:2075
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: yyDollar[7].queryexprs}
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2081
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2085
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2091
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2095
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2101
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2105
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2109
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token, Alias: yyDollar[3].identifier}
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2115
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2119
		{
			yyDollar[2].table.Lateral = yyDollar[1].token
			yyDollar[2].table.BaseExpr = NewBaseExpr(yyDollar[1].token)
			yyVAL.queryexprs = []QueryExpression{yyDollar[2].table}
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2125
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].table}, yyDollar[3].queryexprs...)
		}
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2129
		{
			yyDollar[2].table.Lateral = yyDollar[1].token
			yyDollar[2].table.BaseExpr = NewBaseExpr(yyDollar[1].token)
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[2].table}, yyDollar[4].queryexprs...)
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2137
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2141
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2145
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token, Alias: yyDollar[3].identifier}
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2149
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2153
		{
			yyVAL.queryexpr = Table{Object: Dual{}}
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2157
		{
			yyVAL.queryexpr = yyDollar[1].table
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2161
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2167
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 394:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2171
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 395:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2175
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 396:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2179
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 397:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2183
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 398:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2187
		{
			yyDollar[5].table.Lateral = yyDollar[4].token
			yyDollar[5].table.BaseExpr = NewBaseExpr(yyDollar[4].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].table, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 399:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2193
		{
			yyDollar[5].table.Lateral = yyDollar[4].token
			yyDollar[5].table.BaseExpr = NewBaseExpr(yyDollar[4].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].table, JoinType: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 400:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:2199
		{
			yyDollar[6].table.Lateral = yyDollar[5].token
			yyDollar[6].table.BaseExpr = NewBaseExpr(yyDollar[5].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].table, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[7].queryexpr}
		}
	case 401:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2205
		{
			yyDollar[6].table.Lateral = yyDollar[5].token
			yyDollar[6].table.BaseExpr = NewBaseExpr(yyDollar[5].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].table, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 402:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:2211
		{
			yyDollar[7].table.Lateral = yyDollar[6].token
			yyDollar[7].table.BaseExpr = NewBaseExpr(yyDollar[6].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[7].table, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2219
		{
			yyVAL.queryexpr = JoinCondition{On: yyDollar[2].queryexpr}
		}
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2223
		{
			yyVAL.queryexpr = JoinCondition{Using: yyDollar[3].queryexprs}
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2229
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2233
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token, Alias: yyDollar[3].identifier}
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2237
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2241
		{
			yyVAL.queryexpr = Field{Object: FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].queryexpr}}
		}
	case 409:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2247
		{
			yyVAL.queryexpr = CaseExpr{Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 410:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2253
		{
			yyVAL.queryexpr = nil
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2257
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 412:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2263
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 413:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2267
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 414:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2273
		{
			yyVAL.queryexpr = nil
		}
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2277
		{
			yyVAL.queryexpr = CaseExprElse{Result: yyDollar[2].queryexpr}
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2283
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2287
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2293
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2297
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2303
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2307
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2313
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2317
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2323
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2327
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2333
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2337
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2343
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2347
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2353
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2357
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 432:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2363
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, ValuesList: yyDollar[6].queryexprs}
		}
	case 433:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:2367
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 434:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2371
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 435:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:2375
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 436:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:2381
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 437:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2387
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2393
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2397
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 440:
		yyDollar = yyS[yypt-10 : yypt+1]
//line lib/parser/parser.y:2403
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Keys: yyDollar[7].queryexprs, ValuesList: yyDollar[10].queryexprs}
		}
	case 441:
		yyDollar = yyS[yypt-13 : yypt+1]
//line lib/parser/parser.y:2407
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Keys: yyDollar[10].queryexprs, ValuesList: yyDollar[13].queryexprs}
		}
	case 442:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:2411
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Keys: yyDollar[7].queryexprs, Query: yyDollar[9].queryexpr.(SelectQuery)}
		}
	case 443:
		yyDollar = yyS[yypt-12 : yypt+1]
//line lib/parser/parser.y:2415
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Keys: yyDollar[10].queryexprs, Query: yyDollar[12].queryexpr.(SelectQuery)}
		}
	case 444:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:2419
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Keys: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 445:
		yyDollar = yyS[yypt-12 : yypt+1]
//line lib/parser/parser.y:2423
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Fields: yyDollar[5].queryexprs, Keys: yyDollar[9].queryexprs, ValuesList: yyDollar[12].queryexprs}
		}
	case 446:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:2427
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Keys: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 447:
		yyDollar = yyS[yypt-11 : yypt+1]
//line lib/parser/parser.y:2431
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Fields: yyDollar[5].queryexprs, Keys: yyDollar[9].queryexprs, Query: yyDollar[11].queryexpr.(SelectQuery)}
		}
	case 448:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2437
		{
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: FromClause{Tables: yyDollar[4].queryexprs}, WhereClause: yyDollar[5].queryexpr}
		}
	case 449:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2441
		{
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: FromClause{Tables: yyDollar[5].queryexprs}, WhereClause: yyDollar[6].queryexpr}
		}
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2447
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 451:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2451
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 452:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2457
		{
			yyVAL.elseexpr = Else{}
		}
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2461
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2467
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 455:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2471
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2477
		{
			yyVAL.elseexpr = Else{}
		}
	case 457:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2481
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2487
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 459:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2491
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 460:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2497
		{
			yyVAL.elseexpr = Else{}
		}
	case 461:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2501
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 462:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2507
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 463:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2511
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 464:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2517
		{
			yyVAL.elseexpr = Else{}
		}
	case 465:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2521
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 466:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2527
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 467:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2531
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 468:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2537
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 469:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2541
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2547
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 471:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2551
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2557
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2561
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 474:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2567
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 475:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2571
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 476:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2577
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 477:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2581
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 478:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2587
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 479:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2591
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2597
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2601
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2607
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2611
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2615
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2619
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2623
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2627
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2631
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2635
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2639
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2645
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2651
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2655
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 494:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2661
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2667
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2671
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2677
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2681
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2687
		{
			yyVAL.envvar = EnvironmentVariable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2693
		{
			yyVAL.queryexpr = RuntimeInformation{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2699
		{
			items := strings.Split(yyDollar[1].token.Literal, ConstantDelimiter)
			space := ""
			if 0 < len(items) {
				space = items[0]
			}
			name := ""
			if 1 < len(items) {
				name = items[1]
			}

			yyVAL.queryexpr = Constant{BaseExpr: NewBaseExpr(yyDollar[1].token), Space: space, Name: name}
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2715
		{
			yyVAL.flag = Flag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2721
		{
			yyVAL.token = Token{}
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2725
		{
			yyVAL.token = yyDollar[1].token
		}
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2731
		{
			yyVAL.token = Token{}
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2735
		{
			yyVAL.token = yyDollar[1].token
		}
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2741
		{
			yyVAL.token = Token{}
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2745
		{
			yyVAL.token = yyDollar[1].token
		}
	case 509:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2751
		{
			yyVAL.token = Token{}
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2755
		{
			yyVAL.token = yyDollar[1].token
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2761
		{
			yyVAL.token = yyDollar[1].token
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2765
		{
			yyVAL.token = yyDollar[1].token
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2769
		{
			yyVAL.token = yyDollar[1].token
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2775
		{
			yyVAL.token = Token{}
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2779
		{
			yyVAL.token = yyDollar[1].token
		}
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2785
		{
			yyVAL.token = Token{}
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2789
		{
			yyVAL.token = yyDollar[1].token
		}
	case 518:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2795
		{
			yyVAL.token = Token{}
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2799
		{
			yyVAL.token = yyDollar[1].token
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2805
		{
			yyVAL.token = yyDollar[1].token
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2809
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	case 522:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2816
		{
			yyVAL.bool = false
		}
	case 523:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2820
		{
			yyVAL.bool = true
		}
	}
	goto yystack /* stack new state and value */
}
