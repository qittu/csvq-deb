// Code generated by goyacc -o parser.go -v parser.output parser.y. DO NOT EDIT.

//line parser.y:2
package parser

import __yyfmt__ "fmt"

//line parser.y:2

import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	table       Table
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	envvar      EnvironmentVariable
	flag        Flag
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	replaceval  ReplaceValue
	replacevals []ReplaceValue
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const ENVIRONMENT_VARIABLE = 57355
const RUNTIME_INFORMATION = 57356
const EXTERNAL_COMMAND = 57357
const PLACEHOLDER = 57358
const SELECT = 57359
const FROM = 57360
const UPDATE = 57361
const SET = 57362
const UNSET = 57363
const DELETE = 57364
const WHERE = 57365
const INSERT = 57366
const INTO = 57367
const VALUES = 57368
const REPLACE = 57369
const AS = 57370
const DUAL = 57371
const STDIN = 57372
const RECURSIVE = 57373
const CREATE = 57374
const ADD = 57375
const DROP = 57376
const ALTER = 57377
const TABLE = 57378
const FIRST = 57379
const LAST = 57380
const AFTER = 57381
const BEFORE = 57382
const DEFAULT = 57383
const RENAME = 57384
const TO = 57385
const VIEW = 57386
const ORDER = 57387
const GROUP = 57388
const HAVING = 57389
const BY = 57390
const ASC = 57391
const DESC = 57392
const LIMIT = 57393
const OFFSET = 57394
const PERCENT = 57395
const JOIN = 57396
const INNER = 57397
const OUTER = 57398
const LEFT = 57399
const RIGHT = 57400
const FULL = 57401
const CROSS = 57402
const ON = 57403
const USING = 57404
const NATURAL = 57405
const LATERAL = 57406
const UNION = 57407
const INTERSECT = 57408
const EXCEPT = 57409
const ALL = 57410
const ANY = 57411
const EXISTS = 57412
const IN = 57413
const AND = 57414
const OR = 57415
const NOT = 57416
const BETWEEN = 57417
const LIKE = 57418
const IS = 57419
const NULL = 57420
const DISTINCT = 57421
const WITH = 57422
const RANGE = 57423
const UNBOUNDED = 57424
const PRECEDING = 57425
const FOLLOWING = 57426
const CURRENT = 57427
const ROW = 57428
const CASE = 57429
const IF = 57430
const ELSEIF = 57431
const WHILE = 57432
const WHEN = 57433
const THEN = 57434
const ELSE = 57435
const DO = 57436
const END = 57437
const DECLARE = 57438
const CURSOR = 57439
const FOR = 57440
const FETCH = 57441
const OPEN = 57442
const CLOSE = 57443
const DISPOSE = 57444
const PREPARE = 57445
const NEXT = 57446
const PRIOR = 57447
const ABSOLUTE = 57448
const RELATIVE = 57449
const SEPARATOR = 57450
const PARTITION = 57451
const OVER = 57452
const COMMIT = 57453
const ROLLBACK = 57454
const CONTINUE = 57455
const BREAK = 57456
const EXIT = 57457
const ECHO = 57458
const PRINT = 57459
const PRINTF = 57460
const SOURCE = 57461
const EXECUTE = 57462
const CHDIR = 57463
const PWD = 57464
const RELOAD = 57465
const REMOVE = 57466
const SYNTAX = 57467
const TRIGGER = 57468
const FUNCTION = 57469
const AGGREGATE = 57470
const BEGIN = 57471
const RETURN = 57472
const IGNORE = 57473
const WITHIN = 57474
const VAR = 57475
const SHOW = 57476
const TIES = 57477
const NULLS = 57478
const ROWS = 57479
const ONLY = 57480
const CSV = 57481
const JSON = 57482
const JSONL = 57483
const FIXED = 57484
const LTSV = 57485
const CSV_INLINE = 57486
const JSON_INLINE = 57487
const JSON_TABLE = 57488
const JSON_ROW = 57489
const SUBSTRING = 57490
const COUNT = 57491
const JSON_OBJECT = 57492
const AGGREGATE_FUNCTION = 57493
const LIST_FUNCTION = 57494
const ANALYTIC_FUNCTION = 57495
const FUNCTION_NTH = 57496
const FUNCTION_WITH_INS = 57497
const COMPARISON_OP = 57498
const STRING_OP = 57499
const SUBSTITUTION_OP = 57500
const UMINUS = 57501
const UPLUS = 57502

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"ENVIRONMENT_VARIABLE",
	"RUNTIME_INFORMATION",
	"EXTERNAL_COMMAND",
	"PLACEHOLDER",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"UNSET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"REPLACE",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"LATERAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"PREPARE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"ECHO",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"EXECUTE",
	"CHDIR",
	"PWD",
	"RELOAD",
	"REMOVE",
	"SYNTAX",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"ROWS",
	"ONLY",
	"CSV",
	"JSON",
	"JSONL",
	"FIXED",
	"LTSV",
	"CSV_INLINE",
	"JSON_INLINE",
	"JSON_TABLE",
	"JSON_ROW",
	"SUBSTRING",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LIST_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'='",
	"'-'",
	"'+'",
	"'*'",
	"'/'",
	"'%'",
	"'!'",
	"'('",
	"')'",
	"','",
	"'.'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line parser.y:2790

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string, forPrepared bool, ansiQuotes bool) ([]Statement, int, error) {
	l := new(Lexer)
	l.Init(s, sourceFile, forPrepared, ansiQuotes)
	yyParse(l)
	return l.program, l.HolderNumber(), l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 220,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 21,
	1, 26,
	89, 26,
	91, 26,
	93, 26,
	95, 26,
	161, 26,
	-2, 239,
	-1, 27,
	65, 188,
	66, 188,
	67, 188,
	-2, 200,
	-1, 35,
	1, 78,
	89, 78,
	91, 78,
	93, 78,
	95, 78,
	161, 78,
	-2, 252,
	-1, 61,
	65, 189,
	66, 189,
	67, 189,
	-2, 244,
	-1, 121,
	19, 220,
	22, 220,
	24, 220,
	-2, 1,
	-1, 135,
	65, 188,
	66, 188,
	67, 188,
	-2, 200,
	-1, 175,
	1, 122,
	89, 122,
	91, 122,
	93, 122,
	95, 122,
	161, 122,
	-2, 233,
	-1, 176,
	1, 163,
	89, 163,
	91, 163,
	93, 163,
	95, 163,
	161, 163,
	-2, 239,
	-1, 181,
	1, 156,
	89, 156,
	91, 156,
	93, 156,
	95, 156,
	161, 156,
	-2, 239,
	-1, 182,
	1, 157,
	89, 157,
	91, 157,
	93, 157,
	95, 157,
	161, 157,
	-2, 239,
	-1, 183,
	1, 158,
	89, 158,
	91, 158,
	93, 158,
	95, 158,
	161, 158,
	-2, 239,
	-1, 184,
	1, 161,
	89, 161,
	91, 161,
	93, 161,
	95, 161,
	161, 161,
	-2, 233,
	-1, 185,
	1, 162,
	89, 162,
	91, 162,
	93, 162,
	95, 162,
	161, 162,
	-2, 239,
	-1, 188,
	1, 169,
	89, 169,
	91, 169,
	93, 169,
	95, 169,
	161, 169,
	-2, 233,
	-1, 189,
	1, 170,
	89, 170,
	91, 170,
	93, 170,
	95, 170,
	161, 170,
	-2, 239,
	-1, 255,
	89, 1,
	93, 1,
	95, 1,
	-2, 220,
	-1, 278,
	169, 358,
	-2, 485,
	-1, 279,
	169, 359,
	-2, 486,
	-1, 280,
	169, 360,
	-2, 487,
	-1, 281,
	169, 361,
	-2, 488,
	-1, 282,
	169, 362,
	-2, 489,
	-1, 293,
	54, 505,
	-2, 421,
	-1, 328,
	4, 144,
	135, 144,
	136, 144,
	137, 144,
	139, 144,
	140, 144,
	141, 144,
	142, 144,
	143, 144,
	-2, 239,
	-1, 329,
	4, 145,
	135, 145,
	136, 145,
	137, 145,
	139, 145,
	140, 145,
	141, 145,
	142, 145,
	143, 145,
	-2, 239,
	-1, 339,
	1, 174,
	89, 174,
	91, 174,
	93, 174,
	95, 174,
	161, 174,
	-2, 239,
	-1, 346,
	95, 4,
	-2, 220,
	-1, 365,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	156, 0,
	162, 0,
	-2, 279,
	-1, 366,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	156, 0,
	162, 0,
	-2, 281,
	-1, 375,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	156, 0,
	162, 0,
	-2, 291,
	-1, 414,
	95, 1,
	-2, 220,
	-1, 421,
	1, 210,
	52, 210,
	80, 210,
	89, 210,
	91, 210,
	93, 210,
	95, 210,
	98, 210,
	138, 210,
	161, 210,
	170, 210,
	-2, 239,
	-1, 422,
	1, 215,
	89, 215,
	91, 215,
	93, 215,
	95, 215,
	98, 215,
	99, 215,
	161, 215,
	170, 215,
	-2, 239,
	-1, 452,
	65, 189,
	66, 189,
	67, 189,
	-2, 378,
	-1, 474,
	1, 80,
	89, 80,
	91, 80,
	93, 80,
	95, 80,
	161, 80,
	-2, 239,
	-1, 475,
	1, 81,
	89, 81,
	91, 81,
	93, 81,
	95, 81,
	161, 81,
	-2, 233,
	-1, 476,
	1, 82,
	89, 82,
	91, 82,
	93, 82,
	95, 82,
	161, 82,
	-2, 239,
	-1, 477,
	1, 83,
	89, 83,
	91, 83,
	93, 83,
	95, 83,
	161, 83,
	-2, 233,
	-1, 478,
	1, 149,
	89, 149,
	91, 149,
	93, 149,
	95, 149,
	161, 149,
	-2, 233,
	-1, 479,
	1, 150,
	89, 150,
	91, 150,
	93, 150,
	95, 150,
	161, 150,
	-2, 239,
	-1, 480,
	1, 151,
	89, 151,
	91, 151,
	93, 151,
	95, 151,
	161, 151,
	-2, 233,
	-1, 481,
	1, 152,
	89, 152,
	91, 152,
	93, 152,
	95, 152,
	161, 152,
	-2, 239,
	-1, 484,
	1, 117,
	89, 117,
	91, 117,
	93, 117,
	95, 117,
	161, 117,
	171, 117,
	-2, 239,
	-1, 489,
	1, 419,
	89, 419,
	91, 419,
	93, 419,
	95, 419,
	161, 419,
	-2, 239,
	-1, 496,
	1, 175,
	89, 175,
	91, 175,
	93, 175,
	95, 175,
	161, 175,
	-2, 239,
	-1, 528,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	156, 0,
	162, 0,
	-2, 292,
	-1, 554,
	95, 1,
	-2, 220,
	-1, 561,
	91, 1,
	93, 1,
	95, 1,
	-2, 220,
	-1, 590,
	170, 356,
	171, 356,
	-2, 233,
	-1, 608,
	54, 505,
	-2, 381,
	-1, 646,
	19, 220,
	22, 220,
	24, 220,
	-2, 4,
	-1, 649,
	95, 4,
	-2, 220,
	-1, 650,
	95, 4,
	-2, 220,
	-1, 675,
	170, 261,
	171, 261,
	-2, 189,
	-1, 722,
	17, 516,
	80, 516,
	169, 516,
	-2, 87,
	-1, 749,
	89, 4,
	93, 4,
	95, 4,
	-2, 220,
	-1, 754,
	95, 4,
	-2, 220,
	-1, 755,
	95, 4,
	-2, 220,
	-1, 781,
	89, 1,
	93, 1,
	95, 1,
	-2, 220,
	-1, 827,
	1, 95,
	89, 95,
	91, 95,
	93, 95,
	95, 95,
	161, 95,
	-2, 233,
	-1, 828,
	1, 96,
	89, 96,
	91, 96,
	93, 96,
	95, 96,
	161, 96,
	-2, 239,
	-1, 831,
	95, 6,
	-2, 220,
	-1, 837,
	170, 128,
	171, 128,
	-2, 239,
	-1, 842,
	95, 4,
	-2, 220,
	-1, 912,
	95, 6,
	-2, 220,
	-1, 913,
	95, 6,
	-2, 220,
	-1, 917,
	95, 4,
	-2, 220,
	-1, 921,
	91, 4,
	93, 4,
	95, 4,
	-2, 220,
	-1, 961,
	19, 220,
	22, 220,
	24, 220,
	-2, 6,
	-1, 968,
	161, 62,
	-2, 239,
	-1, 1002,
	89, 6,
	93, 6,
	95, 6,
	-2, 220,
	-1, 1005,
	95, 8,
	-2, 220,
	-1, 1012,
	95, 6,
	-2, 220,
	-1, 1015,
	89, 4,
	93, 4,
	95, 4,
	-2, 220,
	-1, 1029,
	95, 6,
	-2, 220,
	-1, 1054,
	95, 6,
	-2, 220,
	-1, 1058,
	91, 6,
	93, 6,
	95, 6,
	-2, 220,
	-1, 1060,
	19, 220,
	22, 220,
	24, 220,
	-2, 8,
	-1, 1063,
	95, 8,
	-2, 220,
	-1, 1064,
	95, 8,
	-2, 220,
	-1, 1083,
	89, 8,
	93, 8,
	95, 8,
	-2, 220,
	-1, 1088,
	95, 8,
	-2, 220,
	-1, 1089,
	95, 8,
	-2, 220,
	-1, 1100,
	89, 6,
	93, 6,
	95, 6,
	-2, 220,
	-1, 1105,
	95, 8,
	-2, 220,
	-1, 1120,
	95, 8,
	-2, 220,
	-1, 1124,
	91, 8,
	93, 8,
	95, 8,
	-2, 220,
	-1, 1144,
	89, 8,
	93, 8,
	95, 8,
	-2, 220,
}

const yyPrivate = 57344

const yyLast = 4061

var yyAct = [...]int{
	124, 61, 1119, 1084, 1053, 1003, 1118, 1031, 1092, 916,
	98, 423, 130, 1052, 750, 201, 673, 68, 1038, 915,
	802, 553, 729, 202, 724, 852, 851, 616, 607, 141,
	928, 688, 1, 307, 505, 497, 263, 634, 618, 636,
	460, 288, 583, 850, 264, 260, 567, 598, 488, 637,
	273, 154, 154, 603, 157, 437, 361, 261, 133, 482,
	730, 442, 144, 552, 358, 299, 441, 292, 285, 544,
	504, 26, 84, 245, 61, 271, 83, 27, 503, 25,
	151, 77, 257, 71, 209, 352, 445, 186, 446, 447,
	448, 440, 253, 200, 443, 234, 890, 891, 233, 1042,
	248, 125, 35, 110, 213, 386, 135, 195, 1006, 445,
	233, 446, 447, 448, 440, 155, 234, 443, 331, 233,
	234, 163, 61, 522, 61, 823, 347, 892, 893, 511,
	110, 811, 179, 775, 79, 740, 138, 876, 877, 140,
	337, 137, 259, 141, 139, 110, 79, 301, 742, 743,
	700, 701, 739, 723, 254, 296, 276, 256, 79, 721,
	718, 290, 717, 291, 79, 702, 268, 698, 499, 3,
	644, 120, 641, 1049, 215, 574, 110, 520, 348, 1037,
	225, 224, 226, 227, 228, 79, 297, 102, 79, 79,
	609, 286, 26, 435, 1025, 192, 79, 948, 141, 348,
	25, 430, 444, 356, 272, 894, 287, 312, 348, 78,
	319, 119, 1024, 192, 308, 1022, 310, 1021, 351, 1020,
	350, 78, 374, 35, 612, 234, 348, 78, 233, 348,
	306, 1018, 372, 373, 111, 112, 113, 79, 114, 115,
	116, 117, 118, 1000, 374, 374, 873, 999, 78, 336,
	998, 78, 78, 997, 399, 400, 61, 311, 993, 78,
	988, 111, 112, 113, 363, 278, 279, 280, 281, 282,
	303, 304, 305, 902, 986, 135, 111, 112, 113, 985,
	114, 115, 116, 117, 118, 301, 142, 518, 410, 984,
	3, 983, 367, 354, 355, 298, 102, 79, 142, 452,
	78, 392, 959, 941, 939, 426, 938, 111, 112, 113,
	142, 114, 115, 116, 117, 118, 142, 387, 389, 927,
	914, 878, 875, 396, 397, 398, 26, 848, 825, 436,
	154, 822, 427, 815, 25, 799, 428, 142, 142, 388,
	142, 142, 393, 394, 395, 79, 633, 61, 142, 432,
	792, 774, 433, 141, 580, 141, 141, 35, 757, 738,
	78, 736, 722, 720, 509, 666, 291, 665, 664, 663,
	661, 374, 495, 628, 61, 542, 592, 374, 374, 541,
	540, 527, 535, 533, 547, 493, 494, 529, 530, 142,
	79, 487, 531, 467, 466, 110, 225, 224, 226, 227,
	228, 492, 374, 546, 546, 546, 545, 195, 78, 471,
	461, 457, 543, 456, 411, 61, 344, 490, 491, 345,
	296, 276, 343, 148, 3, 950, 942, 119, 519, 141,
	514, 940, 514, 514, 513, 301, 515, 516, 936, 110,
	524, 517, 926, 896, 523, 301, 882, 557, 35, 373,
	860, 538, 858, 857, 152, 888, 856, 854, 829, 771,
	769, 141, 768, 759, 703, 120, 676, 653, 615, 579,
	141, 532, 141, 548, 549, 594, 536, 537, 539, 550,
	473, 472, 588, 593, 455, 26, 286, 226, 227, 228,
	639, 313, 597, 25, 431, 152, 272, 581, 147, 258,
	293, 643, 595, 291, 596, 606, 587, 252, 242, 631,
	605, 241, 240, 239, 238, 648, 35, 237, 458, 236,
	235, 699, 325, 621, 247, 323, 111, 112, 113, 1060,
	278, 279, 280, 281, 282, 303, 304, 305, 961, 646,
	121, 192, 142, 690, 405, 572, 675, 1048, 772, 770,
	470, 459, 143, 692, 787, 61, 674, 1012, 654, 670,
	298, 913, 61, 668, 866, 568, 767, 147, 912, 831,
	111, 112, 113, 853, 114, 115, 116, 117, 118, 657,
	671, 374, 141, 3, 669, 655, 691, 682, 766, 110,
	864, 674, 564, 765, 686, 764, 573, 695, 569, 763,
	760, 689, 301, 301, 625, 735, 243, 667, 660, 696,
	301, 992, 244, 678, 132, 21, 406, 681, 420, 315,
	223, 704, 951, 578, 102, 26, 469, 170, 171, 419,
	1143, 610, 26, 25, 708, 694, 1133, 705, 122, 1128,
	25, 324, 677, 719, 322, 706, 697, 61, 1127, 570,
	61, 61, 1122, 732, 141, 1108, 35, 159, 176, 565,
	715, 177, 178, 35, 181, 182, 183, 185, 1107, 189,
	1120, 1099, 314, 374, 221, 230, 229, 220, 219, 222,
	218, 1075, 748, 773, 1067, 752, 753, 1059, 194, 269,
	199, 1056, 1014, 746, 168, 169, 172, 173, 1144, 1011,
	1010, 744, 316, 317, 972, 960, 925, 924, 1105, 919,
	158, 301, 845, 301, 301, 301, 160, 844, 301, 246,
	111, 112, 113, 3, 114, 115, 116, 117, 118, 780,
	3, 798, 783, 786, 785, 680, 21, 800, 194, 793,
	161, 794, 791, 782, 645, 558, 812, 556, 35, 817,
	61, 35, 35, 797, 622, 61, 61, 639, 836, 216,
	215, 639, 819, 818, 1089, 217, 225, 224, 226, 227,
	228, 1121, 1088, 342, 338, 1120, 374, 1064, 1063, 834,
	835, 839, 61, 1005, 796, 840, 674, 328, 329, 833,
	846, 847, 867, 141, 862, 861, 716, 862, 865, 451,
	1055, 918, 755, 754, 1054, 917, 339, 650, 301, 649,
	301, 301, 301, 863, 870, 346, 141, 871, 1054, 141,
	555, 1029, 872, 917, 554, 842, 883, 884, 554, 416,
	414, 141, 61, 1124, 1100, 1083, 1058, 880, 1015, 1002,
	889, 921, 781, 61, 749, 561, 899, 898, 255, 1146,
	909, 35, 26, 1102, 1085, 1017, 35, 35, 109, 1004,
	25, 784, 751, 412, 262, 1140, 1139, 1126, 1125, 1081,
	21, 979, 978, 900, 374, 923, 922, 418, 920, 141,
	421, 422, 747, 35, 674, 1121, 862, 937, 1055, 301,
	946, 918, 944, 555, 1147, 374, 1142, 801, 931, 805,
	933, 934, 935, 1116, 610, 674, 953, 1098, 1045, 945,
	1072, 957, 1013, 61, 61, 869, 779, 1137, 61, 1079,
	963, 952, 61, 1093, 958, 976, 966, 141, 965, 1093,
	684, 909, 909, 35, 967, 1115, 973, 474, 476, 479,
	481, 484, 1097, 1141, 35, 608, 484, 489, 1112, 374,
	3, 489, 489, 974, 1096, 496, 1095, 977, 777, 674,
	947, 21, 61, 107, 982, 994, 247, 987, 862, 990,
	1113, 1114, 214, 1111, 955, 672, 956, 370, 995, 1070,
	909, 369, 371, 1009, 989, 1008, 1071, 402, 353, 1073,
	1043, 401, 1016, 1019, 885, 1007, 886, 512, 610, 1130,
	904, 141, 1094, 61, 349, 1091, 61, 879, 1094, 404,
	403, 908, 207, 61, 35, 35, 61, 377, 376, 35,
	28, 909, 816, 35, 332, 141, 374, 803, 804, 21,
	61, 909, 108, 206, 207, 208, 674, 326, 604, 810,
	1039, 445, 1051, 446, 447, 448, 589, 714, 909, 1062,
	374, 1046, 713, 602, 601, 61, 1068, 265, 266, 61,
	674, 61, 266, 35, 61, 61, 1074, 1076, 1082, 599,
	614, 1086, 1087, 909, 981, 954, 445, 909, 446, 447,
	930, 904, 904, 600, 61, 267, 1101, 859, 438, 61,
	61, 1103, 908, 908, 197, 1039, 1109, 1110, 1039, 1039,
	134, 61, 709, 711, 35, 929, 61, 35, 725, 726,
	727, 728, 110, 1123, 35, 734, 647, 35, 1039, 909,
	1131, 61, 1132, 1039, 1039, 61, 1134, 733, 1135, 333,
	904, 35, 1138, 741, 731, 465, 5, 150, 120, 149,
	1039, 908, 1145, 212, 197, 61, 789, 790, 462, 463,
	69, 1149, 1148, 971, 849, 1039, 35, 464, 838, 1039,
	35, 832, 35, 197, 830, 35, 35, 29, 461, 21,
	683, 904, 737, 642, 1033, 485, 21, 146, 687, 1039,
	283, 904, 908, 270, 145, 35, 969, 970, 162, 164,
	35, 35, 908, 289, 429, 1023, 136, 996, 904, 693,
	562, 146, 35, 434, 335, 334, 330, 35, 103, 908,
	196, 105, 103, 105, 806, 808, 102, 205, 608, 486,
	211, 70, 35, 904, 153, 1104, 35, 904, 1028, 1033,
	841, 413, 1033, 1033, 908, 1001, 10, 9, 908, 584,
	8, 198, 7, 111, 112, 113, 35, 114, 115, 116,
	117, 118, 1033, 110, 415, 65, 484, 1033, 1033, 489,
	196, 21, 359, 295, 21, 21, 294, 300, 302, 904,
	274, 85, 110, 277, 1033, 1129, 1027, 454, 1090, 196,
	908, 1069, 1047, 534, 64, 79, 1044, 93, 585, 1033,
	63, 198, 62, 1033, 67, 59, 131, 296, 276, 66,
	60, 788, 575, 1057, 424, 58, 210, 571, 566, 563,
	198, 887, 608, 1033, 6, 20, 19, 617, 72, 197,
	167, 17, 624, 626, 638, 187, 635, 16, 1077, 483,
	15, 14, 1080, 814, 11, 18, 221, 230, 229, 220,
	219, 222, 218, 13, 12, 193, 1034, 905, 78, 828,
	1032, 903, 500, 498, 4, 2, 837, 0, 231, 232,
	0, 0, 0, 0, 21, 198, 843, 0, 0, 21,
	21, 0, 249, 250, 1117, 0, 221, 230, 229, 220,
	219, 222, 218, 0, 111, 112, 113, 0, 114, 115,
	116, 117, 118, 0, 197, 193, 21, 0, 0, 418,
	0, 131, 0, 111, 112, 113, 0, 278, 279, 280,
	281, 282, 303, 304, 305, 110, 0, 0, 0, 187,
	0, 216, 215, 0, 0, 0, 0, 217, 225, 224,
	226, 227, 228, 0, 0, 196, 338, 298, 0, 0,
	617, 276, 0, 0, 0, 0, 21, 0, 0, 197,
	0, 445, 617, 446, 447, 448, 440, 21, 0, 443,
	0, 216, 215, 0, 341, 0, 198, 217, 225, 224,
	226, 227, 228, 0, 617, 0, 868, 0, 0, 0,
	0, 197, 0, 0, 617, 360, 0, 364, 365, 366,
	197, 368, 197, 0, 375, 0, 378, 379, 380, 381,
	382, 383, 384, 0, 0, 0, 187, 390, 360, 0,
	196, 0, 187, 187, 187, 0, 110, 0, 0, 0,
	198, 962, 198, 198, 407, 964, 968, 21, 21, 0,
	187, 0, 21, 975, 417, 0, 21, 0, 0, 425,
	0, 198, 276, 0, 0, 0, 111, 112, 113, 0,
	114, 115, 116, 117, 118, 0, 0, 585, 110, 0,
	0, 439, 617, 0, 0, 582, 197, 0, 0, 0,
	0, 0, 284, 0, 0, 0, 21, 0, 0, 0,
	617, 0, 0, 187, 276, 468, 820, 821, 0, 0,
	110, 0, 0, 0, 0, 0, 198, 620, 0, 0,
	0, 0, 197, 0, 0, 0, 629, 0, 632, 0,
	187, 0, 0, 0, 450, 110, 0, 21, 0, 1030,
	21, 0, 0, 105, 0, 0, 0, 21, 198, 0,
	21, 0, 843, 0, 0, 0, 0, 198, 0, 198,
	110, 526, 409, 528, 21, 187, 0, 111, 112, 113,
	1061, 278, 279, 280, 281, 282, 0, 0, 0, 0,
	187, 0, 0, 0, 0, 187, 187, 187, 0, 21,
	1078, 0, 0, 21, 197, 21, 0, 0, 21, 21,
	0, 0, 196, 0, 417, 0, 0, 0, 559, 111,
	112, 113, 0, 114, 115, 116, 117, 118, 21, 0,
	1106, 0, 0, 21, 21, 0, 0, 0, 0, 0,
	0, 0, 0, 198, 0, 21, 0, 1030, 196, 0,
	21, 111, 112, 113, 0, 114, 115, 116, 117, 118,
	0, 0, 0, 0, 0, 21, 1136, 0, 0, 21,
	0, 0, 110, 0, 386, 88, 111, 112, 113, 198,
	114, 115, 116, 117, 118, 617, 0, 0, 0, 21,
	0, 1106, 0, 0, 221, 230, 229, 220, 219, 222,
	218, 111, 112, 113, 131, 114, 115, 116, 117, 118,
	156, 0, 0, 0, 0, 165, 166, 0, 174, 175,
	756, 762, 360, 0, 180, 0, 0, 658, 184, 0,
	188, 110, 190, 191, 0, 0, 662, 0, 102, 617,
	0, 0, 445, 197, 446, 447, 448, 440, 803, 804,
	443, 198, 0, 679, 221, 230, 229, 220, 219, 222,
	218, 0, 685, 0, 0, 0, 197, 0, 0, 197,
	0, 0, 0, 0, 0, 0, 425, 0, 0, 216,
	215, 197, 251, 0, 0, 217, 225, 224, 226, 227,
	228, 0, 0, 761, 0, 0, 0, 0, 0, 110,
	0, 707, 187, 111, 112, 113, 0, 114, 115, 116,
	117, 118, 0, 0, 275, 0, 275, 0, 0, 0,
	0, 0, 275, 0, 275, 309, 275, 0, 0, 197,
	0, 0, 0, 0, 318, 275, 320, 321, 0, 216,
	215, 0, 0, 327, 0, 217, 225, 224, 226, 227,
	228, 0, 0, 0, 551, 0, 0, 0, 0, 874,
	0, 758, 111, 112, 113, 0, 114, 115, 116, 117,
	118, 0, 0, 0, 0, 0, 0, 197, 776, 0,
	0, 0, 895, 0, 0, 897, 0, 357, 0, 362,
	198, 0, 0, 0, 0, 0, 0, 901, 0, 0,
	0, 795, 0, 187, 0, 0, 0, 0, 0, 385,
	0, 0, 362, 198, 0, 110, 198, 0, 0, 0,
	0, 221, 230, 229, 220, 219, 222, 218, 198, 408,
	111, 112, 113, 824, 114, 115, 116, 117, 118, 0,
	296, 276, 0, 0, 221, 949, 275, 220, 219, 222,
	218, 197, 0, 417, 0, 0, 0, 0, 0, 275,
	275, 0, 0, 0, 855, 0, 0, 0, 0, 0,
	449, 0, 0, 0, 275, 197, 198, 453, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 980, 0, 0, 0, 0, 475, 477,
	478, 480, 0, 0, 0, 881, 216, 215, 0, 0,
	0, 275, 217, 225, 224, 226, 227, 228, 0, 0,
	0, 338, 0, 508, 198, 510, 0, 0, 0, 216,
	215, 0, 0, 0, 0, 217, 225, 224, 226, 227,
	228, 0, 0, 0, 0, 0, 111, 112, 113, 0,
	278, 279, 280, 281, 282, 303, 304, 305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1026, 0, 0,
	943, 221, 230, 229, 220, 219, 222, 218, 0, 187,
	298, 0, 0, 221, 230, 229, 220, 219, 222, 218,
	0, 1050, 0, 187, 0, 187, 0, 0, 198, 0,
	0, 0, 0, 0, 0, 586, 275, 590, 0, 131,
	275, 275, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 0, 198, 0, 0, 0, 611, 0, 453, 0,
	613, 0, 187, 0, 586, 619, 0, 0, 623, 586,
	586, 627, 0, 0, 0, 630, 619, 0, 0, 640,
	0, 0, 0, 0, 0, 0, 216, 215, 0, 0,
	0, 0, 217, 225, 224, 226, 227, 228, 216, 215,
	991, 0, 0, 0, 217, 225, 224, 226, 227, 228,
	0, 0, 932, 425, 0, 0, 0, 651, 652, 0,
	0, 0, 0, 0, 0, 619, 362, 656, 385, 0,
	0, 0, 0, 0, 0, 0, 417, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 110, 80, 81, 82,
	0, 107, 0, 102, 105, 103, 104, 22, 74, 79,
	0, 0, 37, 38, 0, 0, 0, 0, 131, 30,
	0, 0, 120, 0, 31, 46, 0, 32, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 586, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 586,
	0, 0, 0, 0, 0, 0, 0, 275, 275, 0,
	0, 0, 99, 0, 0, 0, 100, 417, 0, 0,
	108, 586, 78, 0, 0, 0, 0, 0, 623, 1036,
	1035, 586, 910, 0, 0, 0, 0, 0, 34, 106,
	0, 41, 39, 40, 36, 42, 0, 0, 745, 0,
	0, 0, 0, 44, 45, 506, 507, 0, 49, 50,
	51, 52, 43, 54, 55, 56, 47, 53, 57, 0,
	0, 0, 911, 0, 0, 33, 48, 111, 112, 113,
	0, 114, 115, 116, 117, 118, 0, 0, 0, 119,
	89, 92, 90, 91, 94, 95, 96, 97, 0, 0,
	0, 0, 0, 0, 586, 86, 87, 0, 275, 586,
	101, 73, 221, 230, 229, 220, 219, 222, 218, 275,
	275, 0, 0, 275, 813, 0, 0, 586, 0, 619,
	0, 0, 0, 586, 586, 0, 0, 0, 0, 826,
	827, 0, 0, 0, 0, 0, 0, 0, 110, 80,
	81, 82, 0, 107, 0, 102, 105, 103, 104, 22,
	74, 79, 0, 0, 37, 38, 0, 0, 0, 0,
	0, 30, 0, 0, 120, 0, 31, 46, 0, 32,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 216, 215, 0,
	0, 0, 0, 217, 225, 224, 226, 227, 228, 0,
	0, 778, 0, 0, 99, 0, 275, 275, 100, 0,
	0, 0, 108, 0, 78, 0, 0, 0, 0, 623,
	0, 502, 501, 0, 75, 0, 0, 0, 0, 0,
	34, 106, 0, 41, 39, 40, 36, 42, 0, 0,
	0, 0, 0, 0, 0, 44, 45, 506, 507, 76,
	49, 50, 51, 52, 43, 54, 55, 56, 47, 53,
	57, 0, 0, 0, 0, 0, 0, 33, 48, 111,
	112, 113, 0, 114, 115, 116, 117, 118, 619, 0,
	0, 119, 89, 92, 90, 91, 94, 95, 96, 97,
	0, 0, 586, 0, 0, 0, 0, 86, 87, 0,
	0, 0, 101, 73, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 110, 80, 81, 82, 0, 107,
	0, 102, 105, 103, 104, 22, 74, 79, 0, 0,
	37, 38, 0, 0, 0, 0, 0, 30, 0, 0,
	120, 0, 31, 46, 0, 32, 586, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	99, 0, 0, 0, 100, 0, 0, 0, 108, 0,
	78, 0, 0, 0, 110, 0, 0, 907, 906, 0,
	910, 0, 1040, 1041, 0, 0, 34, 106, 0, 41,
	39, 40, 36, 42, 0, 0, 0, 0, 0, 296,
	276, 44, 45, 0, 0, 0, 49, 50, 51, 52,
	43, 54, 55, 56, 47, 53, 57, 0, 1065, 1066,
	911, 0, 0, 33, 48, 111, 112, 113, 0, 114,
	115, 116, 117, 118, 809, 0, 0, 119, 89, 92,
	90, 91, 94, 95, 96, 97, 0, 0, 0, 0,
	0, 0, 0, 86, 87, 0, 0, 0, 101, 73,
	110, 80, 81, 82, 0, 107, 0, 102, 105, 103,
	104, 22, 74, 79, 0, 0, 37, 38, 0, 0,
	0, 0, 0, 30, 0, 0, 120, 0, 31, 46,
	0, 32, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 111, 112, 113, 0, 278,
	279, 280, 281, 282, 303, 304, 305, 0, 0, 0,
	0, 0, 0, 110, 0, 0, 99, 0, 0, 0,
	100, 0, 0, 0, 108, 0, 78, 0, 0, 298,
	0, 0, 0, 24, 23, 0, 75, 0, 296, 276,
	0, 0, 34, 106, 0, 41, 39, 40, 36, 42,
	0, 0, 0, 0, 0, 0, 0, 44, 45, 0,
	0, 76, 49, 50, 51, 52, 43, 54, 55, 56,
	47, 53, 57, 807, 0, 0, 0, 0, 0, 33,
	48, 111, 112, 113, 0, 114, 115, 116, 117, 118,
	0, 0, 0, 119, 89, 92, 90, 91, 94, 95,
	96, 97, 221, 230, 229, 220, 219, 222, 218, 86,
	87, 0, 0, 0, 101, 73, 110, 80, 81, 82,
	0, 107, 412, 102, 105, 103, 104, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 0, 120, 0, 111, 112, 113, 0, 278, 279,
	280, 281, 282, 303, 304, 305, 0, 110, 80, 81,
	82, 0, 107, 0, 102, 105, 103, 104, 0, 74,
	79, 0, 0, 0, 0, 0, 0, 0, 298, 0,
	127, 0, 99, 120, 0, 0, 100, 216, 215, 0,
	108, 0, 0, 217, 225, 224, 226, 227, 228, 129,
	126, 0, 0, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 99, 0, 0, 0, 100, 0, 0,
	0, 108, 0, 78, 0, 0, 0, 0, 0, 0,
	129, 126, 0, 0, 0, 128, 0, 111, 112, 113,
	106, 114, 115, 116, 117, 118, 0, 0, 0, 119,
	89, 92, 90, 91, 94, 95, 96, 97, 0, 0,
	0, 0, 0, 0, 0, 86, 87, 363, 0, 0,
	101, 73, 391, 0, 0, 0, 128, 0, 111, 112,
	113, 0, 114, 115, 116, 117, 118, 0, 0, 0,
	119, 89, 92, 90, 91, 94, 95, 96, 97, 221,
	230, 229, 220, 219, 222, 218, 86, 87, 0, 0,
	0, 101, 73, 110, 80, 81, 82, 0, 107, 0,
	102, 105, 103, 104, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 120,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	110, 80, 81, 82, 0, 107, 0, 102, 105, 103,
	104, 0, 74, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 127, 0, 0, 120, 0, 0, 99,
	0, 0, 0, 100, 216, 215, 0, 108, 0, 0,
	217, 225, 224, 226, 227, 228, 129, 126, 0, 0,
	0, 0, 0, 0, 0, 204, 106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 99, 0, 0, 0,
	100, 0, 0, 0, 108, 0, 0, 0, 0, 0,
	0, 0, 0, 129, 126, 0, 0, 0, 0, 0,
	0, 0, 203, 106, 111, 112, 113, 0, 114, 115,
	116, 117, 118, 0, 0, 0, 119, 89, 92, 90,
	91, 94, 95, 96, 97, 0, 0, 0, 0, 0,
	0, 0, 86, 87, 0, 0, 0, 101, 73, 128,
	0, 111, 112, 113, 0, 114, 115, 116, 117, 118,
	0, 0, 0, 119, 89, 92, 90, 91, 94, 95,
	96, 97, 221, 659, 229, 220, 219, 222, 218, 86,
	87, 363, 0, 0, 101, 73, 110, 80, 81, 82,
	0, 107, 0, 102, 105, 103, 104, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 0, 120, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 110, 80, 81, 82, 0, 107, 0,
	102, 105, 103, 104, 0, 74, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 120,
	0, 0, 99, 0, 0, 0, 100, 216, 215, 0,
	108, 214, 0, 217, 225, 224, 226, 227, 228, 129,
	126, 0, 0, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 99,
	0, 0, 0, 100, 0, 0, 0, 108, 0, 0,
	0, 0, 0, 0, 0, 0, 129, 126, 0, 0,
	0, 0, 0, 0, 0, 128, 106, 111, 112, 113,
	0, 114, 115, 116, 117, 118, 0, 0, 0, 119,
	89, 92, 90, 91, 94, 95, 96, 97, 0, 0,
	0, 0, 0, 0, 0, 86, 87, 0, 0, 0,
	101, 73, 128, 0, 111, 112, 113, 0, 114, 115,
	116, 117, 118, 0, 0, 0, 119, 89, 92, 90,
	91, 94, 95, 96, 97, 221, 525, 229, 220, 219,
	222, 218, 86, 87, 0, 0, 0, 101, 73, 110,
	80, 81, 82, 0, 107, 0, 102, 105, 103, 104,
	0, 74, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 127, 0, 0, 120, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 110, 80, 81, 82,
	0, 107, 0, 102, 105, 103, 104, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 127,
	0, 0, 591, 0, 0, 99, 0, 0, 0, 100,
	216, 215, 0, 108, 0, 0, 217, 225, 224, 226,
	227, 228, 129, 126, 0, 0, 0, 0, 0, 0,
	0, 0, 106, 0, 0, 0, 0, 0, 0, 0,
	110, 0, 99, 0, 0, 0, 100, 0, 0, 0,
	108, 0, 0, 0, 0, 0, 0, 0, 0, 129,
	126, 0, 0, 0, 0, 296, 276, 0, 128, 106,
	111, 112, 113, 0, 114, 115, 116, 117, 118, 0,
	0, 0, 119, 89, 92, 90, 91, 94, 95, 96,
	97, 0, 0, 0, 0, 0, 0, 0, 86, 87,
	712, 0, 0, 101, 123, 128, 0, 111, 112, 113,
	0, 114, 115, 116, 117, 118, 0, 0, 0, 119,
	89, 92, 90, 91, 94, 95, 96, 97, 0, 0,
	0, 0, 0, 576, 577, 86, 87, 0, 0, 0,
	101, 73, 110, 80, 340, 82, 0, 107, 0, 102,
	105, 103, 104, 0, 74, 221, 230, 229, 220, 219,
	222, 218, 0, 0, 0, 127, 0, 0, 120, 0,
	0, 111, 112, 113, 0, 278, 279, 280, 281, 282,
	303, 304, 305, 0, 110, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 0, 99, 296,
	276, 0, 100, 0, 0, 0, 108, 521, 221, 230,
	229, 220, 219, 222, 218, 129, 126, 0, 0, 0,
	0, 0, 0, 0, 0, 106, 0, 0, 0, 560,
	216, 215, 0, 0, 710, 0, 217, 225, 224, 226,
	227, 228, 0, 0, 0, 0, 0, 0, 0, 0,
	221, 230, 229, 220, 219, 222, 218, 0, 0, 0,
	0, 128, 0, 111, 112, 113, 0, 114, 115, 116,
	117, 118, 0, 0, 0, 119, 89, 92, 90, 91,
	94, 95, 96, 97, 221, 230, 0, 220, 219, 222,
	218, 86, 87, 216, 215, 0, 101, 73, 0, 217,
	225, 224, 226, 227, 228, 111, 112, 113, 0, 278,
	279, 280, 281, 282, 303, 304, 305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 216, 215, 0, 0, 298,
	0, 217, 225, 224, 226, 227, 228, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 216,
	215, 0, 0, 0, 0, 217, 225, 224, 226, 227,
	228,
}

var yyPact = [...]int{
	2826, -1000, 379, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3605, 3439, -1000, -1000, 1055, 117, 1159,
	398, 1103, 1101, 285, 1797, -1000, 613, 1199, 1195, 1865,
	1865, 590, 1865, 3439, -1000, -1000, 3439, 3439, 1611, 3439,
	3439, 3439, 3439, 3439, 3439, -1000, 1865, 1865, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 383, -1000,
	-1000, -1000, -1000, 3033, -1000, 3199, 1211, 968, 1112, 893,
	-1000, -1000, -1000, -1000, -1000, 3118, 3439, 3439, -53, 351,
	350, 348, 345, -1000, 344, 343, 342, 339, 450, 169,
	3439, 3439, -1000, -1000, -1000, -1000, 1865, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 338,
	-80, 2826, 756, 3033, -1000, -1000, 330, 329, 326, 3439,
	773, 3118, -1000, 1006, 1037, 1055, 1159, 1158, 1512, 1155,
	1554, -1000, 129, 1183, 1170, 1205, 1981, 3439, 1512, 1865,
	1512, -1000, 893, 36, 333, -1000, 575, -1000, 1865, 1411,
	1865, 1865, 482, 479, -1000, 975, -1000, 1865, -1000, -1000,
	-1000, -1000, 3439, 3439, 1188, 56, 962, 1086, 1187, -1000,
	1186, -1000, -1000, 78, -53, -1000, -1000, 1920, -53, -1000,
	-1000, 3808, 3439, 603, 252, 246, 249, 373, 1183, 721,
	55, 933, 1205, 326, -1000, -1000, 920, 920, 920, -1000,
	32, 1865, -1000, 3236, -1000, 3439, 3439, 3439, 892, 3439,
	906, 64, 3439, 949, 3439, 3439, 3439, 3439, 3439, 3439,
	3439, -1000, -1000, 1738, 3402, 3439, 2992, 893, 893, 893,
	3439, 3439, 3439, 64, 64, 916, 941, -1000, -1000, 1943,
	-1000, 467, 3439, 1636, -1000, 2826, 246, 244, 3439, 772,
	737, 736, 3439, 531, 519, 3439, 3439, 3439, 1006, 1183,
	1512, 1174, 30, -1000, -1000, -1000, -1000, 325, -1000, -1000,
	-1000, -1000, -1000, 1512, 1981, 1185, 22, 1170, 1042, 3439,
	-1000, 7, -1000, 31, 1586, -1000, -1000, -1000, 1268, -1000,
	-1000, 1249, 315, -1000, -1000, -1000, 243, -1000, 349, 382,
	1115, 3439, 1205, 3439, 528, 381, 312, 311, -1000, -1000,
	-1000, -1000, 3439, 3439, 3439, 3439, 3439, 1150, -1000, -1000,
	1214, 3439, 3439, 1201, 1201, 1512, 3439, 3439, 3439, -1000,
	3439, 3118, -1000, -1000, -1000, -1000, 2484, 1865, 1205, 1865,
	58, 926, 373, -1000, 373, 373, 1112, 259, -1000, 6,
	3859, -1000, -49, -1000, 233, 17, 17, 954, 3524, 3439,
	64, 3439, -1000, 3033, -1000, 17, 64, 64, 322, 322,
	-1000, -1000, -1000, 3893, 1943, -1000, -1000, 222, 3439, 213,
	1265, -1000, 212, 3439, 3236, 3439, 210, 209, 205, -1000,
	-1000, 64, 237, 237, 237, 892, -1000, 1753, -1000, -1000,
	731, -1000, 3439, 652, 2826, 650, 3439, 3817, 753, 1181,
	555, 512, 459, -1000, 4, 3754, 525, 1170, 328, 1108,
	1512, 3642, 314, 1170, 1981, 1411, 1042, 1022, 1035, 3118,
	1000, 999, 982, 986, 126, -1000, -1000, -1000, -1000, -1000,
	1865, 54, 1249, -1000, 1865, 3439, -1000, 299, 1108, 1865,
	129, -1000, 585, 435, 1108, 1865, 203, -1000, 3118, 172,
	1865, 129, 176, 1865, -1000, -53, -1000, -53, -53, -1000,
	-53, -1000, -1000, 1, 1145, 1205, -1000, -1000, -1000, -1,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 649, 378, -1000,
	-1000, 3605, 3439, -1000, -1000, -1000, -1000, -1000, 715, -1000,
	713, 1865, 1865, 946, -1000, -1000, 946, -1000, 298, 1865,
	3236, 1865, 99, -1000, -1000, 3439, 3321, -1000, 17, -1000,
	-1000, 498, 200, -1000, 3439, -1000, 199, 198, 197, 195,
	497, 453, 449, 903, -1000, 280, -1000, 297, -1000, -1000,
	542, 3439, 640, 735, 2826, 3439, 843, -1000, -1000, 3118,
	3439, 2826, -1000, 3439, -1000, -1000, 463, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3439, 417, -1000, -1000, 1180, 1042,
	64, 141, -1000, 1183, -4, 359, -62, -1000, -20, -6,
	-53, -80, 295, 1108, -1000, 1170, -1000, 1022, -1000, 3439,
	3439, 3850, 3706, 998, -1000, 993, 982, -1000, 1396, 169,
	-9, -1000, -1000, -1000, -11, 1108, 193, -12, 192, -18,
	-1000, 1071, 1865, 1093, -1000, 1108, 1084, 1072, 495, -1000,
	-1000, 191, -1000, 1144, 189, -19, -1000, -1000, -36, 1092,
	-22, 3439, 1865, -1000, 3439, 792, 2484, 752, 771, 2484,
	2484, 709, 708, 129, 188, -1000, -1000, -1000, 1943, 3439,
	294, 490, 1693, 489, 485, 483, 456, 293, 291, 413,
	290, 412, 64, 181, -38, -1000, 3439, -1000, 877, 2381,
	828, 634, -1000, 750, -1000, 2911, 770, 512, 1010, -1000,
	419, -1000, 1109, -1000, 1022, -1000, 180, 1170, 1108, 3439,
	-1000, 3439, 1411, 1108, 165, -1000, 1055, 3118, -1000, 1021,
	169, 1757, 169, 2889, 2740, 985, -40, 126, 3439, 163,
	960, 1108, 1140, 1865, -1000, -1000, -1000, 1108, 1108, 161,
	-46, 3439, 158, 1865, 3439, 289, 1136, 440, 1133, 1205,
	1205, 3439, 1130, 1205, -1000, -1000, -1000, -1000, -1000, 2484,
	732, 3439, 622, 617, 2484, 2484, 157, 1126, 1943, 464,
	288, -1000, 3439, 287, 284, 283, 1041, 281, 464, 464,
	480, 464, 454, -1000, -1000, 64, 1305, -1000, -1000, -1000,
	827, 2826, -1000, -1000, 3439, 463, -1000, -1000, -1000, -1000,
	-1000, 1055, 220, -1000, -1000, 3118, 152, -33, 151, 945,
	1006, -1000, -1000, 3439, 277, 966, 1757, 169, 1021, 169,
	391, 126, -1000, -74, -43, 179, 274, -1000, 129, -1000,
	-1000, -1000, 1071, 1865, 3118, -1000, -1000, -53, -1000, 464,
	129, 2660, 439, -1000, -1000, -1000, 1092, -1000, 432, 150,
	712, 614, 2484, 749, 786, 785, 612, 611, -1000, 273,
	149, -1000, 1060, 1032, 464, 2082, 464, 464, 464, 269,
	464, 136, 1055, 134, 262, 133, 257, -1000, 3439, -1000,
	804, -1000, 1006, 64, -1000, -1000, -1000, 3439, 171, 256,
	524, 3118, 1865, -1000, -1000, 966, -1000, 1021, 169, -1000,
	-1000, 3439, -1000, 3439, 64, -1000, 1108, -1000, -1000, -1000,
	132, -1000, 610, 377, -1000, -1000, 3605, 3439, -1000, -1000,
	3199, 3439, 2660, 2660, 1125, 609, 730, 2484, 3439, 838,
	-1000, 2484, -1000, -1000, 782, 781, 129, -1000, -1000, 1026,
	3439, 121, -1000, 119, 109, 104, 1055, 90, -1000, -1000,
	464, -1000, 464, 2070, -1000, 513, -1000, 88, 64, -1000,
	1108, 1178, 83, -1000, -1000, 80, 77, -1000, 73, -1000,
	-1000, 2660, 747, 768, 689, 37, 924, 1205, -1000, 605,
	604, 428, 824, 597, -1000, 746, -1000, 764, -1000, -1000,
	61, 3439, -1000, -1000, -1000, -1000, -1000, 49, -1000, 47,
	45, -1000, 1176, -1000, -1000, 42, -1000, -1000, -1000, -1000,
	168, -1000, 2660, 728, 3439, 2282, 1865, 1865, 28, 919,
	-1000, -1000, 2660, -1000, 820, 2484, -1000, 3439, -1000, 410,
	-1000, -1000, -1000, -1000, 147, 64, -1000, 711, 596, 2660,
	744, 592, 368, -1000, -1000, 3605, 3439, -1000, -1000, -1000,
	684, 683, 1865, 1865, 589, -1000, 802, -1000, 904, 64,
	-1000, -1000, 586, 725, 2660, 3439, 832, -1000, 2660, 779,
	2282, 743, 763, 2282, 2282, 678, 670, -1000, -1000, -1000,
	923, 873, 871, 856, -1000, 819, 576, -1000, 742, -1000,
	762, -1000, -1000, 2282, 615, 3439, 573, 560, 2282, 2282,
	901, 865, -1000, 887, 849, -1000, -1000, -1000, -1000, 815,
	2660, -1000, 3439, 682, 557, 2282, 741, 778, 777, 553,
	544, 917, -1000, -1000, -1000, -1000, -1000, 799, 541, 577,
	2282, 3439, 830, -1000, 2282, -1000, -1000, 776, 775, -1000,
	859, -1000, -1000, 808, 535, -1000, 606, -1000, 758, -1000,
	-1000, -1000, -1000, 806, 2282, -1000, 3439, -1000, 796, -1000,
}

var yyPgo = [...]int{
	0, 32, 35, 273, 7, 168, 34, 1355, 78, 23,
	70, 1354, 1353, 1352, 1351, 179, 18, 1350, 1347, 1346,
	1344, 1343, 1335, 1334, 60, 22, 24, 1331, 1330, 1329,
	59, 1327, 49, 1326, 1324, 39, 37, 1321, 1320, 1318,
	1316, 1315, 1136, 1314, 77, 81, 1167, 552, 62, 41,
	55, 47, 30, 36, 31, 1309, 1308, 46, 1307, 44,
	1020, 1306, 84, 1305, 76, 72, 858, 1271, 614, 56,
	10, 16, 11, 1304, 1302, 1301, 0, 1300, 69, 1299,
	1295, 1294, 82, 1292, 1290, 1287, 1284, 26, 43, 25,
	1282, 1281, 8, 1278, 1275, 50, 1273, 1270, 1268, 1267,
	65, 68, 75, 1266, 186, 28, 500, 1263, 20, 1262,
	1255, 12, 57, 1254, 27, 33, 48, 67, 38, 64,
	1242, 1240, 1239, 42, 1237, 1236, 21, 63, 9, 19,
	4, 13, 2, 6, 45, 1231, 14, 1230, 5, 1228,
	3, 1225, 1745, 17, 15, 101, 1224, 80, 1150, 1221,
	83, 104, 73, 66, 53, 61, 85, 1220, 40, 620,
}

var yyR1 = [...]int{
	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 6, 6,
	7, 7, 8, 8, 8, 8, 8, 9, 9, 10,
	10, 12, 12, 11, 11, 11, 11, 11, 13, 13,
	13, 13, 13, 13, 14, 14, 15, 15, 15, 15,
	15, 16, 16, 17, 17, 18, 18, 18, 18, 18,
	19, 19, 19, 19, 19, 19, 20, 20, 20, 20,
	21, 21, 21, 21, 21, 22, 22, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 24, 24, 25,
	25, 26, 26, 26, 26, 26, 27, 27, 27, 27,
	27, 27, 27, 28, 28, 28, 28, 29, 29, 30,
	30, 31, 31, 31, 31, 32, 33, 33, 34, 35,
	35, 36, 36, 36, 37, 37, 37, 37, 37, 38,
	38, 38, 38, 38, 38, 38, 39, 39, 39, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 41, 41, 41, 42, 42, 42, 42,
	43, 43, 43, 43, 44, 44, 44, 44, 45, 45,
	46, 47, 48, 48, 49, 49, 50, 50, 51, 51,
	52, 52, 53, 53, 53, 54, 54, 54, 55, 55,
	56, 56, 57, 57, 57, 58, 58, 58, 59, 59,
	60, 60, 61, 61, 62, 62, 63, 63, 63, 63,
	63, 64, 65, 66, 66, 66, 66, 66, 67, 67,
	67, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 68, 69,
	70, 70, 70, 71, 71, 72, 72, 73, 73, 74,
	74, 74, 75, 75, 76, 77, 78, 78, 78, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 79, 80, 80,
	80, 80, 80, 80, 80, 81, 81, 81, 81, 82,
	82, 83, 83, 83, 83, 83, 83, 83, 83, 84,
	84, 84, 84, 84, 84, 85, 85, 86, 86, 86,
	86, 86, 86, 86, 86, 86, 86, 86, 86, 87,
	88, 88, 89, 89, 90, 90, 91, 91, 91, 92,
	92, 92, 93, 93, 94, 94, 95, 95, 96, 96,
	96, 96, 96, 98, 98, 98, 97, 97, 97, 97,
	99, 99, 99, 99, 100, 100, 103, 103, 104, 104,
	104, 105, 105, 105, 105, 106, 106, 106, 106, 106,
	106, 106, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 108, 108, 109, 109, 109, 109, 110, 111,
	111, 112, 112, 113, 113, 114, 114, 115, 115, 116,
	116, 117, 117, 101, 101, 102, 102, 118, 118, 119,
	119, 120, 120, 120, 120, 121, 122, 123, 123, 124,
	124, 124, 124, 124, 124, 124, 124, 125, 125, 126,
	126, 127, 127, 128, 128, 129, 129, 130, 130, 131,
	131, 132, 132, 133, 133, 134, 134, 135, 135, 136,
	136, 137, 137, 138, 138, 139, 139, 140, 140, 141,
	141, 142, 142, 142, 142, 142, 142, 142, 142, 142,
	143, 144, 144, 145, 146, 146, 147, 147, 148, 149,
	150, 151, 151, 152, 152, 153, 153, 154, 154, 155,
	155, 155, 156, 156, 157, 157, 158, 158, 159, 159,
}

var yyR2 = [...]int{
	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 8, 8, 9, 9, 1, 1, 1,
	2, 1, 1, 7, 8, 6, 1, 1, 7, 8,
	6, 1, 1, 1, 1, 1, 6, 8, 8, 9,
	9, 1, 2, 1, 1, 7, 8, 6, 1, 1,
	7, 8, 6, 1, 1, 1, 2, 2, 1, 2,
	4, 4, 4, 4, 2, 1, 1, 6, 8, 5,
	6, 8, 5, 7, 7, 7, 7, 1, 3, 1,
	3, 0, 1, 1, 2, 2, 5, 5, 2, 4,
	2, 3, 5, 6, 8, 5, 3, 1, 3, 1,
	3, 4, 2, 4, 3, 1, 1, 3, 3, 1,
	3, 1, 1, 3, 9, 10, 10, 12, 3, 0,
	1, 1, 1, 1, 2, 2, 5, 6, 3, 4,
	4, 4, 4, 4, 4, 2, 2, 2, 2, 4,
	4, 2, 2, 2, 4, 1, 2, 2, 4, 2,
	2, 1, 2, 2, 3, 4, 3, 5, 4, 6,
	8, 10, 9, 11, 5, 4, 4, 4, 1, 1,
	3, 2, 0, 2, 0, 2, 0, 3, 0, 2,
	0, 3, 1, 6, 5, 0, 1, 2, 1, 1,
	0, 1, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 6, 9, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 1, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 1,
	3, 1, 6, 1, 3, 1, 3, 2, 4, 0,
	1, 1, 1, 1, 3, 3, 3, 1, 6, 3,
	3, 3, 3, 4, 4, 5, 6, 6, 3, 4,
	4, 3, 4, 4, 4, 4, 4, 2, 3, 3,
	3, 3, 3, 2, 2, 3, 3, 2, 2, 0,
	1, 4, 4, 6, 8, 3, 4, 4, 4, 5,
	5, 5, 5, 5, 1, 5, 10, 8, 9, 9,
	9, 9, 9, 9, 8, 8, 10, 8, 10, 2,
	1, 5, 0, 3, 2, 5, 2, 2, 2, 2,
	2, 2, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 4, 6, 6, 8,
	6, 8, 6, 8, 1, 1, 1, 1, 1, 2,
	3, 1, 2, 3, 4, 1, 2, 3, 1, 1,
	1, 3, 4, 5, 6, 5, 6, 5, 6, 7,
	6, 7, 2, 4, 1, 3, 1, 3, 5, 0,
	1, 4, 5, 0, 2, 1, 3, 1, 3, 1,
	3, 1, 3, 1, 3, 1, 3, 1, 3, 1,
	3, 6, 9, 5, 8, 7, 3, 1, 3, 10,
	13, 9, 12, 9, 12, 8, 11, 5, 6, 4,
	5, 0, 2, 4, 5, 0, 2, 4, 5, 0,
	2, 4, 5, 0, 2, 4, 5, 0, 2, 4,
	5, 0, 2, 4, 5, 0, 2, 4, 5, 0,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 3, 1, 3, 1, 3, 1, 1,
	1, 0, 1, 0, 1, 0, 1, 0, 1, 1,
	1, 1, 0, 1, 0, 1, 0, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -1, -7, -5, -11, -42, -43, -120, -121, -124,
	-125, -23, -20, -21, -27, -28, -31, -37, -22, -40,
	-41, -68, 15, 88, 87, -8, -10, -44, -60, -46,
	27, 32, 35, 133, 96, -145, 102, 20, 21, 100,
	101, 99, 103, 120, 111, 112, 33, 124, 134, 116,
	117, 118, 119, 125, 121, 122, 123, 126, -63, -80,
	-77, -76, -83, -84, -86, -110, -79, -81, -143, -148,
	-149, -150, -39, 169, 16, 90, 115, -45, 80, 17,
	5, 6, 7, -64, -65, -67, 163, 164, -142, 148,
	150, 151, 149, -85, 152, 153, 154, 155, -70, 70,
	74, 168, 11, 13, 14, 12, 97, 9, 78, -66,
	4, 135, 136, 137, 139, 140, 141, 142, 143, 147,
	30, 161, -68, 169, -76, -145, 88, 27, 133, 87,
	-111, -67, -68, -52, 45, -44, -46, 24, 19, 27,
	22, -76, 169, -47, -48, 25, 18, 169, 25, 36,
	36, -147, 169, -146, -143, -147, -142, -143, 97, 44,
	103, 127, -148, -150, -148, -142, -142, -38, 104, 105,
	37, 38, 106, 107, -142, -142, -68, -68, -68, -150,
	-142, -68, -68, -68, -142, -68, -115, -67, -142, -68,
	-142, -142, 158, -67, -68, -115, -42, -60, -46, -68,
	-143, -144, -9, 133, 96, 6, 65, 66, 67, -62,
	-61, -157, 31, -151, 79, 157, 156, 162, 77, 75,
	74, 71, 76, -159, 164, 163, 165, 166, 167, 73,
	72, -67, -67, 172, 169, 169, 169, 169, 169, 169,
	169, 169, 169, 156, 162, -152, -159, 74, -76, -67,
	-67, -142, 169, 172, -1, 92, -115, -82, 169, -111,
	-134, -112, 91, -53, -59, 51, 52, 48, -52, -47,
	25, -102, -100, -95, -97, -142, 30, -96, 139, 140,
	141, 142, 143, 25, 18, -101, -95, -48, -49, 23,
	-144, -143, -117, -106, -103, -107, 29, -104, 169, -100,
	-99, -76, -98, 144, 145, 146, -82, -115, -100, -142,
	-100, -151, 171, 158, 97, 44, 127, 128, -142, -95,
	-142, -142, 162, 43, 162, 43, 62, -142, -68, -68,
	18, 62, 62, 43, 18, 18, 171, 62, 171, -68,
	6, -67, 170, 170, 170, 170, 94, 71, 171, 71,
	-143, -144, -156, 68, -156, -156, 171, -142, -119, -109,
	-67, -69, -142, 165, -67, -67, -67, -152, -67, 75,
	71, 76, -70, 169, -76, -67, 69, 68, -67, -67,
	-67, -67, -67, -67, -67, -142, 6, -82, -151, -82,
	-67, 170, -119, -151, -151, -151, -82, -82, -82, -70,
	-70, 75, 71, 69, 68, 77, 149, -67, -142, 6,
	-1, 170, 91, -135, 93, -113, 93, -67, -68, 98,
	99, -68, -68, -72, -73, -67, -53, -48, -100, 20,
	171, 169, -100, -117, 18, 171, -49, -50, 46, -67,
	60, -153, -155, 63, 171, 55, 57, 58, 59, -142,
	28, -106, -76, -142, 28, 169, 170, 62, 169, 169,
	-158, 28, 33, 34, 42, 20, -82, -147, -67, 98,
	169, 28, 169, 169, -68, -142, -68, -142, -142, -68,
	-142, -68, -30, -29, -68, 25, 5, -30, -116, -68,
	-150, -150, -100, -116, -116, -115, -68, -2, -12, -5,
	-13, 88, 87, -8, -10, -6, 113, 114, -142, -144,
	-142, 71, 71, -45, -44, -45, -45, -62, 28, 169,
	171, 28, 172, -64, -65, 72, -67, -70, -67, -70,
	-70, 170, -82, 170, 18, 170, -82, -82, -69, -82,
	170, 170, 170, -70, -78, 169, -76, 147, -78, -78,
	-152, 171, -127, -126, 93, 89, 95, -1, 95, -67,
	92, 92, 19, -55, 37, 104, -56, -57, 53, 86,
	137, -58, 86, 137, 171, -74, 49, 50, 98, -49,
	26, 169, -42, -123, -122, -66, -142, -102, -95, -68,
	-142, 30, 62, 169, -49, -117, -101, -50, -51, 47,
	48, 54, 54, -154, 56, -153, -155, -105, -106, 64,
	-104, -142, 170, -142, -68, 169, -114, -66, -118, -142,
	-42, -24, 169, -142, -66, 169, -66, -142, 170, -42,
	-142, -118, -42, 170, -36, -33, -35, -32, -34, -143,
	-142, 171, 28, -144, 171, 95, 161, -68, -111, 94,
	94, -142, -142, 169, -118, -119, -142, -69, -67, 72,
	110, 170, -67, 170, 170, 170, 170, 110, 110, 131,
	110, 131, 72, -71, -70, -76, 169, 100, 71, -67,
	95, -127, -1, -68, 87, -67, -1, -68, -54, 138,
	80, -72, 136, 19, -50, -71, -114, -48, 171, 162,
	170, 171, 171, 169, -114, -49, -51, -67, -115, -106,
	64, -106, 64, 54, 54, -154, -104, 171, 171, -114,
	170, 171, 170, 171, -26, 37, 38, 39, 40, -25,
	-24, 41, -114, 43, 43, 110, 170, 28, 170, 171,
	171, 41, 170, 171, -30, -142, -116, 90, -2, 92,
	-136, 91, -2, -2, 94, 94, -42, 170, -67, 169,
	110, 170, 98, 110, 110, 110, 132, 110, 169, 169,
	136, 169, 136, -70, 170, 171, -67, 81, 170, 88,
	95, 92, -112, -134, 91, -57, -59, 135, -75, 37,
	38, -51, 170, -49, -123, -67, -82, -95, -114, 170,
	-52, -104, -108, 61, 62, -104, -106, 64, -106, 64,
	54, 171, -105, -142, -68, 170, 62, -114, -158, -118,
	-66, -66, 170, 171, -67, 170, -142, -142, -68, 169,
	28, 129, 28, -32, -35, -35, -143, -68, 28, -36,
	-2, -137, 93, -68, 95, 95, -2, -2, 170, 28,
	-88, -87, -89, 109, 169, -67, 169, 169, 169, 46,
	169, -87, -89, -88, 110, -87, 110, -71, 171, 88,
	-1, -54, -52, 26, -42, 170, 170, 171, 170, 62,
	-53, -67, 169, -108, -108, -104, -104, -106, 64, -105,
	170, 171, 170, 171, 26, -42, 169, -42, -26, -25,
	-88, -42, -3, -14, -5, -18, 88, 87, -15, -16,
	90, 130, 129, 129, 170, -129, -128, 93, 89, 95,
	-2, 92, 90, 90, 95, 95, 169, 170, -52, 45,
	48, -88, 170, -88, -88, -88, 169, -87, 170, 170,
	169, 170, 169, -67, -126, -53, -71, -82, 26, -42,
	169, 98, -118, -108, -104, -82, -82, -71, -114, 170,
	95, 161, -68, -111, -68, -143, -144, -9, -68, -3,
	-3, 28, 95, -129, -2, -68, 87, -2, 90, 90,
	-42, 48, -115, 170, 170, 170, 170, -52, 170, -88,
	-87, 170, 98, 170, -71, -114, 19, 170, 170, 170,
	170, -3, 92, -138, 91, 94, 71, 71, -143, -144,
	95, 95, 129, 88, 95, 92, -136, 91, 170, -72,
	170, 170, 170, 19, 170, 26, -42, -3, -139, 93,
	-68, -4, -17, -5, -19, 88, 87, -15, -16, -6,
	-142, -142, 71, 71, -3, 88, -2, -90, 137, 26,
	-42, -71, -131, -130, 93, 89, 95, -3, 92, 95,
	161, -68, -111, 94, 94, -142, -142, 95, -128, -91,
	75, 82, 6, 85, -71, 95, -131, -3, -68, 87,
	-3, 90, -4, 92, -140, 91, -4, -4, 94, 94,
	-93, 82, -92, 6, 85, 83, 83, 86, 88, 95,
	92, -138, 91, -4, -141, 93, -68, 95, 95, -4,
	-4, 72, 83, 83, 84, 86, 88, -3, -133, -132,
	93, 89, 95, -4, 92, 90, 90, 95, 95, -94,
	82, -92, -130, 95, -133, -4, -68, 87, -4, 90,
	90, 84, 88, 95, 92, -140, 91, 88, -4, -132,
}

var yyDef = [...]int{
	-2, -2, 2, 30, 31, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
	25, -2, 27, 0, 409, 46, 47, -2, 0, 192,
	0, 0, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 139, 0, 0, 85, 86, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 171, 0, 0, 241, 242,
	243, -2, 245, 246, 247, 248, 249, 250, 251, 253,
	254, 255, 256, 0, 258, 0, 39, 0, 514, 501,
	226, 227, 228, 229, 230, 0, 0, 0, 233, 0,
	0, 0, 0, 324, 0, 0, 0, 0, 503, 0,
	0, 0, 490, 498, 499, 500, 0, 231, 232, 238,
	481, 482, 483, 484, 485, 486, 487, 488, 489, 0,
	0, -2, 239, 309, 244, 252, 0, 0, 0, 409,
	0, 410, 239, 218, 0, -2, 192, 0, 0, 0,
	0, 189, 0, 192, 194, 0, 0, 309, 0, 0,
	0, 76, 501, 496, 494, 77, 0, 79, 0, 0,
	0, 0, 0, 0, 84, 108, 110, 0, 140, 141,
	142, 143, 0, 0, 0, -2, -2, 239, 239, 155,
	167, -2, -2, -2, -2, -2, 166, 417, -2, -2,
	172, 173, 0, 0, 239, 0, 0, 0, 192, 239,
	251, 0, 0, 37, 38, 40, 512, 512, 512, 221,
	224, 0, 515, 0, 502, 0, 518, 519, 503, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 303, 304, 0, 309, 309, 0, 501, 501, 501,
	309, 309, 309, 518, 519, 0, 0, 504, 297, 307,
	308, 0, 0, 0, 3, -2, 0, 0, 309, 0,
	467, 413, 0, 176, 202, 0, 0, 0, 218, 192,
	0, 0, 425, 374, 375, 356, 357, 0, -2, -2,
	-2, -2, -2, 0, 0, 0, 423, 194, 196, 0,
	191, 491, 193, -2, 385, 388, 389, 390, 0, 376,
	377, 378, 0, 363, 364, 365, 0, 310, 0, 516,
	0, 309, 0, 0, 0, 0, 0, 0, 111, 116,
	124, 138, 0, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	227, 493, 240, 257, 260, 274, -2, 0, 0, 0,
	0, 0, 0, 513, 0, 0, 514, 0, 190, 429,
	404, 406, 233, 259, 275, -2, -2, 0, 0, 0,
	0, 0, 288, 0, 261, -2, 0, 0, 298, 299,
	300, 301, 302, 305, 306, 234, 236, 0, 309, 0,
	417, 315, 0, 309, 309, 309, 0, 0, 0, 280,
	282, 0, 0, 0, 0, 503, 148, 0, 235, 237,
	451, 317, 0, 0, -2, 0, 0, 0, 239, 0,
	0, -2, -2, 201, 265, 269, 178, 194, 0, 0,
	0, 0, 0, 194, 0, 0, 196, 198, 0, 195,
	0, 0, 507, 505, 0, 506, 509, 510, 511, 386,
	0, 505, -2, 379, 0, 0, 318, 0, 0, 0,
	0, 517, 0, 0, 0, 0, 0, 497, 495, 0,
	0, 0, 0, 0, -2, -2, -2, -2, -2, -2,
	-2, -2, 109, 119, -2, 0, 121, 123, 164, -2,
	153, 154, 168, 159, 160, 418, -2, 0, 0, 41,
	42, 0, 409, 51, 52, 53, 28, 29, 0, 492,
	0, 0, 0, 185, 188, 186, 187, 225, 0, 0,
	0, 0, 0, 283, 284, 0, 0, 289, -2, 293,
	295, 311, 0, 312, 0, 316, 0, 0, 0, 0,
	0, 0, 0, 0, 290, 0, 277, 0, 294, 296,
	0, 0, 0, 451, -2, 0, 0, 468, 408, 414,
	0, -2, 177, 0, 208, 209, 205, 211, 212, 213,
	214, 219, 216, 217, 0, 267, 270, 271, 0, 196,
	0, 0, 433, 192, 437, 0, 233, 426, 0, 239,
	-2, 357, 0, 0, 447, 194, 424, 198, 184, 0,
	0, 0, 0, 0, 508, 0, 507, 422, -2, 0,
	390, 387, 391, 380, 239, 0, 0, 415, 0, 427,
	89, 101, 0, 97, 92, 0, 0, 0, 321, 106,
	107, 0, 115, 0, 0, 131, 132, 126, 129, 125,
	0, 0, 0, 112, 0, 0, -2, 239, 0, -2,
	-2, 0, 0, 0, 0, 430, 405, 407, 285, 0,
	0, 319, 0, 320, 322, 323, 325, 0, 0, 0,
	0, 0, 0, 0, 263, -2, 0, 146, 0, 0,
	0, 0, 452, 239, 45, 411, 465, 239, 218, 206,
	0, 266, 0, 179, 198, 431, 0, 194, 0, 0,
	366, 309, 0, 0, 0, 448, 200, 199, 197, 392,
	0, 505, 0, 0, 0, 0, 382, 0, 0, 0,
	0, 0, -2, 0, 90, 102, 103, 0, 0, 0,
	99, 0, 0, 0, 0, 0, 113, 0, 0, 0,
	0, 0, 0, 0, 120, 118, 420, 32, 5, -2,
	471, 0, 0, 0, -2, -2, 0, 0, 286, 342,
	0, 313, 0, 0, 0, 0, 0, 0, 342, 342,
	0, 342, 0, 287, 276, 0, 0, 147, 262, 43,
	0, -2, 412, 466, 0, 205, 204, 207, 268, 272,
	273, 200, 0, 435, 438, 436, 0, 0, 0, 0,
	218, 397, 393, 0, 0, 0, 505, 0, 395, 0,
	0, 0, 383, 233, 239, 0, 0, 416, 0, 428,
	104, 105, 101, 0, 98, 93, 94, -2, -2, 342,
	0, -2, 0, 127, 133, 130, 0, -2, 0, 0,
	455, 0, -2, 239, 0, 0, 0, 0, 222, 0,
	0, 340, 200, 0, 342, 0, 342, 342, 342, 0,
	342, 0, 200, 0, 0, 0, 0, 264, 0, 44,
	449, 203, 218, 0, 434, 367, 368, 309, 0, 0,
	180, 402, 0, 398, 394, 0, 400, 396, 0, 384,
	370, 309, 372, 309, 0, 445, 0, 88, 91, 100,
	0, 114, 0, 0, 54, 55, 0, 409, 68, 69,
	0, 61, -2, -2, 0, 0, 455, -2, 0, 0,
	472, -2, 33, 34, 0, 0, 0, 327, 339, 0,
	0, 0, 314, 0, 0, 0, 200, 0, 334, 335,
	342, 337, 342, 0, 450, 182, 432, 0, 0, 441,
	0, 0, 0, 399, 401, 0, 0, 443, 0, 330,
	134, -2, 239, 0, 239, 251, 0, 0, -2, 0,
	0, 0, 0, 0, 456, 239, 50, 469, 35, 36,
	0, 0, 343, 328, 329, 331, 332, 0, 333, 0,
	0, 278, 0, 369, 439, 0, 181, 403, 371, 373,
	0, 7, -2, 475, 0, -2, 0, 0, 0, 0,
	135, 136, -2, 48, 0, -2, 470, 0, 223, 201,
	326, 336, 338, 183, 0, 0, 446, 459, 0, -2,
	239, 0, 0, 63, 64, 0, 409, 73, 74, 75,
	0, 0, 0, 0, 0, 49, 453, 341, 0, 0,
	442, 444, 0, 459, -2, 0, 0, 476, -2, 0,
	-2, 239, 0, -2, -2, 0, 0, 137, 454, 344,
	0, 0, 0, 0, 440, 0, 0, 460, 239, 67,
	473, 56, 9, -2, 479, 0, 0, 0, -2, -2,
	0, 0, 353, 0, 0, 346, 347, 348, 65, 0,
	-2, 474, 0, 463, 0, -2, 239, 0, 0, 0,
	0, 0, 352, 349, 350, 351, 66, 457, 0, 463,
	-2, 0, 0, 480, -2, 57, 58, 0, 0, 345,
	0, 355, 458, 0, 0, 464, 239, 72, 477, 59,
	60, 354, 70, 0, -2, 478, 0, 71, 461, 462,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 168, 3, 3, 3, 167, 3, 3,
	169, 170, 165, 164, 171, 163, 172, 166, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 161,
	3, 162,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160,
}

var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:249
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:254
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:259
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:266
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:270
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:276
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:280
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:286
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:290
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:296
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:300
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:304
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:308
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:312
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:316
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:320
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:324
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:328
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:332
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:336
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:340
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:344
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:348
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:352
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:356
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:360
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:364
		{
			yyVAL.statement = ExternalCommand{BaseExpr: NewBaseExpr(yyDollar[1].token), Command: yyDollar[1].token.Literal}
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:370
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:374
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:380
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:384
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 32:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:390
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 33:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:394
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 34:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:398
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 35:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:402
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 36:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:406
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:412
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:416
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:422
		{
			yyVAL.statement = Exit{}
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:426
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:432
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:436
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:442
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:446
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:450
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:454
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:458
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 48:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:464
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 49:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:468
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 50:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:472
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:476
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:480
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:484
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:490
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:494
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 56:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:500
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:504
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 58:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:508
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 59:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:512
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 60:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:516
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:522
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:526
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:532
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:536
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:542
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 66:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:546
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 67:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:550
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:554
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:558
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 70:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:564
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 71:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:568
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 72:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:572
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:576
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:580
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:584
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:590
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:594
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:598
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:602
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:608
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 81:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:612
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:616
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:620
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:624
		{
			yyVAL.statement = UnsetEnvVar{EnvVar: yyDollar[2].envvar}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:630
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:634
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 87:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:640
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:644
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 89:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:648
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 90:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:652
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:656
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:660
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:664
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 94:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:668
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 95:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:672
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].identifier}
		}
	case 96:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:676
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].queryexpr}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:682
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:686
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:692
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:696
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:702
		{
			yyVAL.expression = nil
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:706
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:710
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:714
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:718
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:724
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 107:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:728
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Statement: yyDollar[5].identifier}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:732
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 109:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:736
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:740
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:744
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 112:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:748
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:754
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 114:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:758
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 115:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:762
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:766
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].queryexpr}
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:772
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:776
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr, Name: yyDollar[3].identifier}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:782
		{
			yyVAL.replacevals = []ReplaceValue{yyDollar[1].replaceval}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:786
		{
			yyVAL.replacevals = append([]ReplaceValue{yyDollar[1].replaceval}, yyDollar[3].replacevals...)
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:792
		{
			yyVAL.statement = StatementPreparation{Name: yyDollar[2].identifier, Statement: value.NewString(yyDollar[4].token.Literal)}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:796
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier}
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:800
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:804
		{
			yyVAL.statement = DisposeStatement{Name: yyDollar[3].identifier}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:810
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:816
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:820
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:826
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:832
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:836
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:842
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:846
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:850
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 134:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:856
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 135:
		yyDollar = yyS[yypt-10 : yypt+1]
//line parser.y:860
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 136:
		yyDollar = yyS[yypt-10 : yypt+1]
//line parser.y:864
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 137:
		yyDollar = yyS[yypt-12 : yypt+1]
//line parser.y:868
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:872
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:878
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:882
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:886
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:890
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:894
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:898
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:902
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:908
		{
			yyVAL.queryexpr = CursorStatus{Cursor: yyDollar[2].identifier, Negation: yyDollar[4].token, Type: yyDollar[5].token}
		}
	case 147:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:912
		{
			yyVAL.queryexpr = CursorStatus{Cursor: yyDollar[2].identifier, Negation: yyDollar[4].token, Type: yyDollar[6].token}
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:916
		{
			yyVAL.queryexpr = CursorAttrebute{Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:922
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:926
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:930
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:934
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:938
		{
			yyVAL.statement = AddFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:942
		{
			yyVAL.statement = RemoveFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:946
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:950
		{
			yyVAL.statement = Echo{Value: yyDollar[2].queryexpr}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:954
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:958
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:962
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:966
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:970
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].identifier}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:974
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:978
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr}
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:982
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:986
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:990
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token), Keywords: yyDollar[2].queryexprs}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:994
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:998
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier, Table: yyDollar[4].queryexpr}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1002
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].identifier}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1006
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].queryexpr}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1010
		{
			yyVAL.statement = Pwd{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1014
		{
			yyVAL.statement = Reload{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1020
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1024
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[3].queryexpr}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1028
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1034
		{
			yyVAL.queryexpr = SelectQuery{
				SelectEntity:  yyDollar[1].queryexpr,
				OrderByClause: yyDollar[2].queryexpr,
				LimitClause:   yyDollar[3].queryexpr,
			}
		}
	case 177:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1042
		{
			yyVAL.queryexpr = SelectQuery{
				SelectEntity:  yyDollar[1].queryexpr,
				OrderByClause: yyDollar[2].queryexpr,
				LimitClause:   yyDollar[3].queryexpr,
				Context:       yyDollar[5].token,
			}
		}
	case 178:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1051
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
			}
		}
	case 179:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:1060
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				Context:       yyDollar[6].token,
			}
		}
	case 180:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:1072
		{
			yyVAL.queryexpr = SelectQuery{
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[1].queryexpr,
					IntoClause:    yyDollar[2].queryexpr,
					FromClause:    yyDollar[3].queryexpr,
					WhereClause:   yyDollar[4].queryexpr,
					GroupByClause: yyDollar[5].queryexpr,
					HavingClause:  yyDollar[6].queryexpr,
				},
				OrderByClause: yyDollar[7].queryexpr,
				LimitClause:   yyDollar[8].queryexpr,
			}
		}
	case 181:
		yyDollar = yyS[yypt-10 : yypt+1]
//line parser.y:1087
		{
			yyVAL.queryexpr = SelectQuery{
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[1].queryexpr,
					IntoClause:    yyDollar[2].queryexpr,
					FromClause:    yyDollar[3].queryexpr,
					WhereClause:   yyDollar[4].queryexpr,
					GroupByClause: yyDollar[5].queryexpr,
					HavingClause:  yyDollar[6].queryexpr,
				},
				OrderByClause: yyDollar[7].queryexpr,
				LimitClause:   yyDollar[8].queryexpr,
				Context:       yyDollar[10].token,
			}
		}
	case 182:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:1103
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause: yyDollar[1].queryexpr,
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[2].queryexpr,
					IntoClause:    yyDollar[3].queryexpr,
					FromClause:    yyDollar[4].queryexpr,
					WhereClause:   yyDollar[5].queryexpr,
					GroupByClause: yyDollar[6].queryexpr,
					HavingClause:  yyDollar[7].queryexpr,
				},
				OrderByClause: yyDollar[8].queryexpr,
				LimitClause:   yyDollar[9].queryexpr,
			}
		}
	case 183:
		yyDollar = yyS[yypt-11 : yypt+1]
//line parser.y:1119
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause: yyDollar[1].queryexpr,
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[2].queryexpr,
					IntoClause:    yyDollar[3].queryexpr,
					FromClause:    yyDollar[4].queryexpr,
					WhereClause:   yyDollar[5].queryexpr,
					GroupByClause: yyDollar[6].queryexpr,
					HavingClause:  yyDollar[7].queryexpr,
				},
				OrderByClause: yyDollar[8].queryexpr,
				LimitClause:   yyDollar[9].queryexpr,
				Context:       yyDollar[11].token,
			}
		}
	case 184:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1138
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 185:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1148
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1157
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 187:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1166
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1177
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1181
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1187
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1193
		{
			yyVAL.queryexpr = IntoClause{Variables: yyDollar[2].variables}
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1199
		{
			yyVAL.queryexpr = nil
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1203
		{
			yyVAL.queryexpr = FromClause{Tables: yyDollar[2].queryexprs}
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1209
		{
			yyVAL.queryexpr = nil
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1213
		{
			yyVAL.queryexpr = WhereClause{Filter: yyDollar[2].queryexpr}
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1219
		{
			yyVAL.queryexpr = nil
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1223
		{
			yyVAL.queryexpr = GroupByClause{Items: yyDollar[3].queryexprs}
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1229
		{
			yyVAL.queryexpr = nil
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1233
		{
			yyVAL.queryexpr = HavingClause{Filter: yyDollar[2].queryexpr}
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1239
		{
			yyVAL.queryexpr = nil
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1243
		{
			yyVAL.queryexpr = OrderByClause{Items: yyDollar[3].queryexprs}
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1249
		{
			if yyDollar[1].queryexpr == nil {
				yyVAL.queryexpr = yyDollar[1].queryexpr
			} else {
				yyVAL.queryexpr = LimitClause{BaseExpr: yyDollar[1].queryexpr.(OffsetClause).BaseExpr, OffsetClause: yyDollar[1].queryexpr}
			}
		}
	case 203:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:1257
		{
			var base *BaseExpr
			if yyDollar[1].queryexpr == nil {
				base = NewBaseExpr(yyDollar[2].token)
			} else {
				base = yyDollar[1].queryexpr.(OffsetClause).BaseExpr
			}
			yyVAL.queryexpr = LimitClause{BaseExpr: base, Type: yyDollar[2].token, Position: yyDollar[3].token, Value: yyDollar[4].queryexpr, Unit: yyDollar[5].token, Restriction: yyDollar[6].token, OffsetClause: yyDollar[1].queryexpr}
		}
	case 204:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1267
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, Value: yyDollar[2].queryexpr, Unit: yyDollar[3].token, Restriction: yyDollar[4].token, OffsetClause: yyDollar[5].queryexpr}
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1273
		{
			yyVAL.token = Token{}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1277
		{
			yyVAL.token = yyDollar[1].token
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1281
		{
			yyVAL.token = yyDollar[2].token
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1287
		{
			yyVAL.token = yyDollar[1].token
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1291
		{
			yyVAL.token = yyDollar[1].token
		}
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1297
		{
			yyVAL.token = Token{}
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1301
		{
			yyVAL.token = yyDollar[1].token
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1315
		{
			yyVAL.token = yyDollar[1].token
		}
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1321
		{
			yyVAL.token = Token{}
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1329
		{
			yyVAL.token = yyDollar[1].token
		}
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1335
		{
			yyVAL.queryexpr = nil
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1339
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: yyDollar[2].queryexpr, Unit: yyDollar[3].token}
		}
	case 220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1345
		{
			yyVAL.queryexpr = nil
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1349
		{
			yyVAL.queryexpr = WithClause{InlineTables: yyDollar[2].queryexprs}
		}
	case 222:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:1355
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 223:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:1359
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1365
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1369
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1375
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1379
		{
			i, err := strconv.ParseInt(yyDollar[1].token.Literal, 10, 64)
			if err != nil {
				yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
			} else {
				iv := NewIntegerValue(i)
				iv.Literal = yyDollar[1].token.Literal
				yyVAL.queryexpr = iv
			}
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1390
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1394
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1398
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1404
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1410
		{
			yyVAL.queryexpr = NewNullValue()
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1416
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1420
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1424
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1428
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1432
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1438
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1442
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1446
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1452
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1456
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1460
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1464
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1468
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1472
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1476
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1480
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1484
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1488
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1492
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1496
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1500
		{
			yyVAL.queryexpr = yyDollar[1].envvar
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1504
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1508
		{
			yyVAL.queryexpr = yyDollar[1].flag
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1512
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1516
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1520
		{
			name := ""
			if yyDollar[1].token.Literal[0] == ':' {
				name = yyDollar[1].token.Literal[1:]
			}
			yyVAL.queryexpr = Placeholder{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Ordinal: yyDollar[1].token.HolderOrdinal, Name: name}
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1530
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1536
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1540
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 262:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:1544
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1550
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1554
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1560
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1564
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 267:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1570
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 268:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1574
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, NullsPosition: yyDollar[4].token}
		}
	case 269:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1580
		{
			yyVAL.token = Token{}
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1584
		{
			yyVAL.token = yyDollar[1].token
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1588
		{
			yyVAL.token = yyDollar[1].token
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1594
		{
			yyVAL.token = yyDollar[1].token
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1598
		{
			yyVAL.token = yyDollar[1].token
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1604
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1610
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1633
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1637
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 278:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:1641
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1647
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1651
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1655
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1659
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1663
		{
			yyVAL.queryexpr = Is{LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1667
		{
			yyVAL.queryexpr = Is{LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 285:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1671
		{
			yyVAL.queryexpr = Between{LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 286:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:1675
		{
			yyVAL.queryexpr = Between{LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 287:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:1679
		{
			yyVAL.queryexpr = Between{LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 288:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1683
		{
			yyVAL.queryexpr = In{LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 289:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1687
		{
			yyVAL.queryexpr = In{LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 290:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1691
		{
			yyVAL.queryexpr = In{LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1695
		{
			yyVAL.queryexpr = Like{LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 292:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1699
		{
			yyVAL.queryexpr = Like{LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 293:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1703
		{
			yyVAL.queryexpr = Any{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 294:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1707
		{
			yyVAL.queryexpr = Any{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1711
		{
			yyVAL.queryexpr = All{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1715
		{
			yyVAL.queryexpr = All{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1719
		{
			yyVAL.queryexpr = Exists{Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1725
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1729
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1733
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1737
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1741
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 303:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1745
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1749
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1755
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1759
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1763
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1767
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 309:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1773
		{
			yyVAL.queryexprs = nil
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1777
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1783
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1787
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 313:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:1791
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: []QueryExpression{yyDollar[3].queryexpr, yyDollar[5].queryexpr}, From: yyDollar[4].token}
		}
	case 314:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:1795
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: []QueryExpression{yyDollar[3].queryexpr, yyDollar[5].queryexpr, yyDollar[7].queryexpr}, From: yyDollar[4].token, For: yyDollar[6].token}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1799
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1803
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 317:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1807
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:1811
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 319:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1818
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 320:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1822
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 321:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1826
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1830
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1834
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 324:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1838
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 325:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1844
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 326:
		yyDollar = yyS[yypt-10 : yypt+1]
//line parser.y:1848
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, OrderBy: yyDollar[9].queryexpr}
		}
	case 327:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:1854
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 328:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:1858
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 329:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:1862
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 330:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:1866
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 331:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:1870
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 332:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:1874
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 333:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:1878
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 334:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:1882
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 335:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:1886
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 336:
		yyDollar = yyS[yypt-10 : yypt+1]
//line parser.y:1890
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreType: yyDollar[6].token, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 337:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:1894
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 338:
		yyDollar = yyS[yypt-10 : yypt+1]
//line parser.y:1898
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreType: yyDollar[6].token, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1904
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1910
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 341:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1914
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: OrderByClause{Items: yyDollar[4].queryexprs}, WindowingClause: yyDollar[5].queryexpr}
		}
	case 342:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:1920
		{
			yyVAL.queryexpr = nil
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:1924
		{
			yyVAL.queryexpr = PartitionClause{Values: yyDollar[3].queryexprs}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1930
		{
			yyVAL.queryexpr = WindowingClause{FrameLow: yyDollar[2].queryexpr}
		}
	case 345:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:1934
		{
			yyVAL.queryexpr = WindowingClause{FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr}
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1940
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Unbounded: yyDollar[1].token}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1944
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Offset: i}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1949
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1955
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Offset: i}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1960
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Offset: i}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1965
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token}
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1971
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Unbounded: yyDollar[1].token}
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1975
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 354:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:1981
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Unbounded: yyDollar[1].token}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1985
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1991
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:1995
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2001
		{
			yyVAL.token = yyDollar[1].token
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2005
		{
			yyVAL.token = yyDollar[1].token
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2009
		{
			yyVAL.token = yyDollar[1].token
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2013
		{
			yyVAL.token = yyDollar[1].token
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2017
		{
			yyVAL.token = yyDollar[1].token
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2023
		{
			yyVAL.token = yyDollar[1].token
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2027
		{
			yyVAL.token = yyDollar[1].token
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2031
		{
			yyVAL.token = yyDollar[1].token
		}
	case 366:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2037
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, Path: yyDollar[3].queryexpr, Args: nil}
		}
	case 367:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:2041
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, Path: yyDollar[3].queryexpr, Args: yyDollar[5].queryexprs}
		}
	case 368:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:2045
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: nil}
		}
	case 369:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:2049
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: yyDollar[7].queryexprs}
		}
	case 370:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:2055
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: nil}
		}
	case 371:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:2059
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: yyDollar[7].queryexprs}
		}
	case 372:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:2063
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: nil}
		}
	case 373:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:2067
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: yyDollar[7].queryexprs}
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2073
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2077
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2083
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2087
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2093
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr}
		}
	case 379:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2097
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2101
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token, Alias: yyDollar[3].identifier}
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2107
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2111
		{
			yyDollar[2].table.Lateral = yyDollar[1].token
			yyDollar[2].table.BaseExpr = NewBaseExpr(yyDollar[1].token)
			yyVAL.queryexprs = []QueryExpression{yyDollar[2].table}
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2117
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].table}, yyDollar[3].queryexprs...)
		}
	case 384:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2121
		{
			yyDollar[2].table.Lateral = yyDollar[1].token
			yyDollar[2].table.BaseExpr = NewBaseExpr(yyDollar[1].token)
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[2].table}, yyDollar[4].queryexprs...)
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2129
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2133
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2137
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token, Alias: yyDollar[3].identifier}
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2141
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2145
		{
			yyVAL.queryexpr = Table{Object: Dual{}}
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2149
		{
			yyVAL.queryexpr = yyDollar[1].table
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2153
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 392:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2159
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 393:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2163
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 394:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:2167
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 395:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2171
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 396:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:2175
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 397:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2179
		{
			yyDollar[5].table.Lateral = yyDollar[4].token
			yyDollar[5].table.BaseExpr = NewBaseExpr(yyDollar[4].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].table, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 398:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:2185
		{
			yyDollar[5].table.Lateral = yyDollar[4].token
			yyDollar[5].table.BaseExpr = NewBaseExpr(yyDollar[4].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].table, JoinType: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 399:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:2191
		{
			yyDollar[6].table.Lateral = yyDollar[5].token
			yyDollar[6].table.BaseExpr = NewBaseExpr(yyDollar[5].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].table, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[7].queryexpr}
		}
	case 400:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:2197
		{
			yyDollar[6].table.Lateral = yyDollar[5].token
			yyDollar[6].table.BaseExpr = NewBaseExpr(yyDollar[5].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].table, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 401:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:2203
		{
			yyDollar[7].table.Lateral = yyDollar[6].token
			yyDollar[7].table.BaseExpr = NewBaseExpr(yyDollar[6].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[7].table, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 402:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2211
		{
			yyVAL.queryexpr = JoinCondition{On: yyDollar[2].queryexpr}
		}
	case 403:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2215
		{
			yyVAL.queryexpr = JoinCondition{Using: yyDollar[3].queryexprs}
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2221
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2225
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token, Alias: yyDollar[3].identifier}
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2229
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2233
		{
			yyVAL.queryexpr = Field{Object: FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].queryexpr}}
		}
	case 408:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2239
		{
			yyVAL.queryexpr = CaseExpr{Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 409:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2245
		{
			yyVAL.queryexpr = nil
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2249
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 411:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2255
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 412:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2259
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 413:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2265
		{
			yyVAL.queryexpr = nil
		}
	case 414:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2269
		{
			yyVAL.queryexpr = CaseExprElse{Result: yyDollar[2].queryexpr}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2275
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2279
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2285
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2289
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2295
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2299
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2305
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2309
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2315
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2319
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2325
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2329
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 427:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2335
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2339
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2345
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2349
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 431:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:2355
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, ValuesList: yyDollar[6].queryexprs}
		}
	case 432:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:2359
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 433:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2363
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 434:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:2367
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 435:
		yyDollar = yyS[yypt-7 : yypt+1]
//line parser.y:2373
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 436:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2379
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2385
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 438:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2389
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 439:
		yyDollar = yyS[yypt-10 : yypt+1]
//line parser.y:2395
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Keys: yyDollar[7].queryexprs, ValuesList: yyDollar[10].queryexprs}
		}
	case 440:
		yyDollar = yyS[yypt-13 : yypt+1]
//line parser.y:2399
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Keys: yyDollar[10].queryexprs, ValuesList: yyDollar[13].queryexprs}
		}
	case 441:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:2403
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Keys: yyDollar[7].queryexprs, Query: yyDollar[9].queryexpr.(SelectQuery)}
		}
	case 442:
		yyDollar = yyS[yypt-12 : yypt+1]
//line parser.y:2407
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Keys: yyDollar[10].queryexprs, Query: yyDollar[12].queryexpr.(SelectQuery)}
		}
	case 443:
		yyDollar = yyS[yypt-9 : yypt+1]
//line parser.y:2411
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Keys: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 444:
		yyDollar = yyS[yypt-12 : yypt+1]
//line parser.y:2415
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Fields: yyDollar[5].queryexprs, Keys: yyDollar[9].queryexprs, ValuesList: yyDollar[12].queryexprs}
		}
	case 445:
		yyDollar = yyS[yypt-8 : yypt+1]
//line parser.y:2419
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Keys: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 446:
		yyDollar = yyS[yypt-11 : yypt+1]
//line parser.y:2423
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Fields: yyDollar[5].queryexprs, Keys: yyDollar[9].queryexprs, Query: yyDollar[11].queryexpr.(SelectQuery)}
		}
	case 447:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2429
		{
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: FromClause{Tables: yyDollar[4].queryexprs}, WhereClause: yyDollar[5].queryexpr}
		}
	case 448:
		yyDollar = yyS[yypt-6 : yypt+1]
//line parser.y:2433
		{
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: FromClause{Tables: yyDollar[5].queryexprs}, WhereClause: yyDollar[6].queryexpr}
		}
	case 449:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2439
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 450:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2443
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 451:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2449
		{
			yyVAL.elseexpr = Else{}
		}
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2453
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2459
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 454:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2463
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 455:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2469
		{
			yyVAL.elseexpr = Else{}
		}
	case 456:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2473
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2479
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 458:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2483
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2489
		{
			yyVAL.elseexpr = Else{}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2493
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2499
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 462:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2503
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 463:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2509
		{
			yyVAL.elseexpr = Else{}
		}
	case 464:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2513
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 465:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2519
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 466:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2523
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 467:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2529
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 468:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2533
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2539
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 470:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2543
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 471:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2549
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 472:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2553
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 473:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2559
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 474:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2563
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2569
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 476:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2573
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
//line parser.y:2579
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
//line parser.y:2583
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2589
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line parser.y:2593
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2599
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2603
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 483:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2607
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2611
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2615
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2619
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2623
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2627
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2631
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2637
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2643
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 492:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2647
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2653
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2659
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2663
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2669
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
//line parser.y:2673
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2679
		{
			yyVAL.envvar = EnvironmentVariable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2685
		{
			yyVAL.queryexpr = RuntimeInformation{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2691
		{
			yyVAL.flag = Flag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2697
		{
			yyVAL.token = Token{}
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2701
		{
			yyVAL.token = yyDollar[1].token
		}
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2707
		{
			yyVAL.token = Token{}
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2711
		{
			yyVAL.token = yyDollar[1].token
		}
	case 505:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2717
		{
			yyVAL.token = Token{}
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2721
		{
			yyVAL.token = yyDollar[1].token
		}
	case 507:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2727
		{
			yyVAL.token = Token{}
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2731
		{
			yyVAL.token = yyDollar[1].token
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2737
		{
			yyVAL.token = yyDollar[1].token
		}
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2741
		{
			yyVAL.token = yyDollar[1].token
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2745
		{
			yyVAL.token = yyDollar[1].token
		}
	case 512:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2751
		{
			yyVAL.token = Token{}
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2755
		{
			yyVAL.token = yyDollar[1].token
		}
	case 514:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2761
		{
			yyVAL.token = Token{}
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2765
		{
			yyVAL.token = yyDollar[1].token
		}
	case 516:
		yyDollar = yyS[yypt-0 : yypt+1]
//line parser.y:2771
		{
			yyVAL.token = Token{}
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2775
		{
			yyVAL.token = yyDollar[1].token
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2781
		{
			yyVAL.token = yyDollar[1].token
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
//line parser.y:2785
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
