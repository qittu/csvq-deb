// Code generated by goyacc -o lib/parser/parser.go -v lib/parser/parser.output lib/parser/parser.y. DO NOT EDIT.

//line lib/parser/parser.y:2
package parser

import __yyfmt__ "fmt"

//line lib/parser/parser.y:2

import (
	"strconv"

	"github.com/mithrandie/csvq/lib/value"
)

//line lib/parser/parser.y:11
type yySymType struct {
	yys         int
	program     []Statement
	statement   Statement
	queryexpr   QueryExpression
	queryexprs  []QueryExpression
	expression  Expression
	expressions []Expression
	identifier  Identifier
	table       Table
	variable    Variable
	variables   []Variable
	varassign   VariableAssignment
	varassigns  []VariableAssignment
	envvar      EnvironmentVariable
	flag        Flag
	updateset   UpdateSet
	updatesets  []UpdateSet
	columndef   ColumnDefault
	columndefs  []ColumnDefault
	elseif      []ElseIf
	elseexpr    Else
	casewhen    []CaseWhen
	caseelse    CaseElse
	fetchpos    FetchPosition
	replaceval  ReplaceValue
	replacevals []ReplaceValue
	token       Token
}

const IDENTIFIER = 57346
const STRING = 57347
const INTEGER = 57348
const FLOAT = 57349
const BOOLEAN = 57350
const TERNARY = 57351
const DATETIME = 57352
const VARIABLE = 57353
const FLAG = 57354
const ENVIRONMENT_VARIABLE = 57355
const RUNTIME_INFORMATION = 57356
const EXTERNAL_COMMAND = 57357
const PLACEHOLDER = 57358
const SELECT = 57359
const FROM = 57360
const UPDATE = 57361
const SET = 57362
const UNSET = 57363
const DELETE = 57364
const WHERE = 57365
const INSERT = 57366
const INTO = 57367
const VALUES = 57368
const REPLACE = 57369
const AS = 57370
const DUAL = 57371
const STDIN = 57372
const RECURSIVE = 57373
const CREATE = 57374
const ADD = 57375
const DROP = 57376
const ALTER = 57377
const TABLE = 57378
const FIRST = 57379
const LAST = 57380
const AFTER = 57381
const BEFORE = 57382
const DEFAULT = 57383
const RENAME = 57384
const TO = 57385
const VIEW = 57386
const ORDER = 57387
const GROUP = 57388
const HAVING = 57389
const BY = 57390
const ASC = 57391
const DESC = 57392
const LIMIT = 57393
const OFFSET = 57394
const PERCENT = 57395
const JOIN = 57396
const INNER = 57397
const OUTER = 57398
const LEFT = 57399
const RIGHT = 57400
const FULL = 57401
const CROSS = 57402
const ON = 57403
const USING = 57404
const NATURAL = 57405
const LATERAL = 57406
const UNION = 57407
const INTERSECT = 57408
const EXCEPT = 57409
const ALL = 57410
const ANY = 57411
const EXISTS = 57412
const IN = 57413
const AND = 57414
const OR = 57415
const NOT = 57416
const BETWEEN = 57417
const LIKE = 57418
const IS = 57419
const NULL = 57420
const DISTINCT = 57421
const WITH = 57422
const RANGE = 57423
const UNBOUNDED = 57424
const PRECEDING = 57425
const FOLLOWING = 57426
const CURRENT = 57427
const ROW = 57428
const CASE = 57429
const IF = 57430
const ELSEIF = 57431
const WHILE = 57432
const WHEN = 57433
const THEN = 57434
const ELSE = 57435
const DO = 57436
const END = 57437
const DECLARE = 57438
const CURSOR = 57439
const FOR = 57440
const FETCH = 57441
const OPEN = 57442
const CLOSE = 57443
const DISPOSE = 57444
const PREPARE = 57445
const NEXT = 57446
const PRIOR = 57447
const ABSOLUTE = 57448
const RELATIVE = 57449
const SEPARATOR = 57450
const PARTITION = 57451
const OVER = 57452
const COMMIT = 57453
const ROLLBACK = 57454
const CONTINUE = 57455
const BREAK = 57456
const EXIT = 57457
const ECHO = 57458
const PRINT = 57459
const PRINTF = 57460
const SOURCE = 57461
const EXECUTE = 57462
const CHDIR = 57463
const PWD = 57464
const RELOAD = 57465
const REMOVE = 57466
const SYNTAX = 57467
const TRIGGER = 57468
const FUNCTION = 57469
const AGGREGATE = 57470
const BEGIN = 57471
const RETURN = 57472
const IGNORE = 57473
const WITHIN = 57474
const VAR = 57475
const SHOW = 57476
const TIES = 57477
const NULLS = 57478
const ROWS = 57479
const ONLY = 57480
const CSV = 57481
const JSON = 57482
const JSONL = 57483
const FIXED = 57484
const LTSV = 57485
const CSV_INLINE = 57486
const JSON_INLINE = 57487
const JSON_TABLE = 57488
const JSON_ROW = 57489
const SUBSTRING = 57490
const COUNT = 57491
const JSON_OBJECT = 57492
const AGGREGATE_FUNCTION = 57493
const LIST_FUNCTION = 57494
const ANALYTIC_FUNCTION = 57495
const FUNCTION_NTH = 57496
const FUNCTION_WITH_INS = 57497
const COMPARISON_OP = 57498
const STRING_OP = 57499
const SUBSTITUTION_OP = 57500
const UMINUS = 57501
const UPLUS = 57502

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENTIFIER",
	"STRING",
	"INTEGER",
	"FLOAT",
	"BOOLEAN",
	"TERNARY",
	"DATETIME",
	"VARIABLE",
	"FLAG",
	"ENVIRONMENT_VARIABLE",
	"RUNTIME_INFORMATION",
	"EXTERNAL_COMMAND",
	"PLACEHOLDER",
	"SELECT",
	"FROM",
	"UPDATE",
	"SET",
	"UNSET",
	"DELETE",
	"WHERE",
	"INSERT",
	"INTO",
	"VALUES",
	"REPLACE",
	"AS",
	"DUAL",
	"STDIN",
	"RECURSIVE",
	"CREATE",
	"ADD",
	"DROP",
	"ALTER",
	"TABLE",
	"FIRST",
	"LAST",
	"AFTER",
	"BEFORE",
	"DEFAULT",
	"RENAME",
	"TO",
	"VIEW",
	"ORDER",
	"GROUP",
	"HAVING",
	"BY",
	"ASC",
	"DESC",
	"LIMIT",
	"OFFSET",
	"PERCENT",
	"JOIN",
	"INNER",
	"OUTER",
	"LEFT",
	"RIGHT",
	"FULL",
	"CROSS",
	"ON",
	"USING",
	"NATURAL",
	"LATERAL",
	"UNION",
	"INTERSECT",
	"EXCEPT",
	"ALL",
	"ANY",
	"EXISTS",
	"IN",
	"AND",
	"OR",
	"NOT",
	"BETWEEN",
	"LIKE",
	"IS",
	"NULL",
	"DISTINCT",
	"WITH",
	"RANGE",
	"UNBOUNDED",
	"PRECEDING",
	"FOLLOWING",
	"CURRENT",
	"ROW",
	"CASE",
	"IF",
	"ELSEIF",
	"WHILE",
	"WHEN",
	"THEN",
	"ELSE",
	"DO",
	"END",
	"DECLARE",
	"CURSOR",
	"FOR",
	"FETCH",
	"OPEN",
	"CLOSE",
	"DISPOSE",
	"PREPARE",
	"NEXT",
	"PRIOR",
	"ABSOLUTE",
	"RELATIVE",
	"SEPARATOR",
	"PARTITION",
	"OVER",
	"COMMIT",
	"ROLLBACK",
	"CONTINUE",
	"BREAK",
	"EXIT",
	"ECHO",
	"PRINT",
	"PRINTF",
	"SOURCE",
	"EXECUTE",
	"CHDIR",
	"PWD",
	"RELOAD",
	"REMOVE",
	"SYNTAX",
	"TRIGGER",
	"FUNCTION",
	"AGGREGATE",
	"BEGIN",
	"RETURN",
	"IGNORE",
	"WITHIN",
	"VAR",
	"SHOW",
	"TIES",
	"NULLS",
	"ROWS",
	"ONLY",
	"CSV",
	"JSON",
	"JSONL",
	"FIXED",
	"LTSV",
	"CSV_INLINE",
	"JSON_INLINE",
	"JSON_TABLE",
	"JSON_ROW",
	"SUBSTRING",
	"COUNT",
	"JSON_OBJECT",
	"AGGREGATE_FUNCTION",
	"LIST_FUNCTION",
	"ANALYTIC_FUNCTION",
	"FUNCTION_NTH",
	"FUNCTION_WITH_INS",
	"COMPARISON_OP",
	"STRING_OP",
	"SUBSTITUTION_OP",
	"UMINUS",
	"UPLUS",
	"';'",
	"'='",
	"'-'",
	"'+'",
	"'*'",
	"'/'",
	"'%'",
	"'!'",
	"'('",
	"')'",
	"','",
	"'.'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line lib/parser/parser.y:2808

func SetDebugLevel(level int, verbose bool) {
	yyDebug = level
	yyErrorVerbose = verbose
}

func Parse(s string, sourceFile string, forPrepared bool, ansiQuotes bool) ([]Statement, int, error) {
	l := new(Lexer)
	l.Init(s, sourceFile, forPrepared, ansiQuotes)
	yyParse(l)
	return l.program, l.HolderNumber(), l.err
}

//line yacctab:1
var yyExca = [...]int{
	-1, 0,
	1, 1,
	-2, 220,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 21,
	1, 26,
	89, 26,
	91, 26,
	93, 26,
	95, 26,
	161, 26,
	-2, 239,
	-1, 27,
	65, 188,
	66, 188,
	67, 188,
	-2, 200,
	-1, 35,
	1, 78,
	89, 78,
	91, 78,
	93, 78,
	95, 78,
	161, 78,
	-2, 251,
	-1, 61,
	65, 189,
	66, 189,
	67, 189,
	-2, 244,
	-1, 117,
	19, 220,
	22, 220,
	24, 220,
	-2, 1,
	-1, 131,
	65, 188,
	66, 188,
	67, 188,
	-2, 200,
	-1, 171,
	1, 122,
	89, 122,
	91, 122,
	93, 122,
	95, 122,
	161, 122,
	-2, 233,
	-1, 172,
	1, 163,
	89, 163,
	91, 163,
	93, 163,
	95, 163,
	161, 163,
	-2, 239,
	-1, 177,
	1, 156,
	89, 156,
	91, 156,
	93, 156,
	95, 156,
	161, 156,
	-2, 239,
	-1, 178,
	1, 157,
	89, 157,
	91, 157,
	93, 157,
	95, 157,
	161, 157,
	-2, 239,
	-1, 179,
	1, 158,
	89, 158,
	91, 158,
	93, 158,
	95, 158,
	161, 158,
	-2, 239,
	-1, 180,
	1, 161,
	89, 161,
	91, 161,
	93, 161,
	95, 161,
	161, 161,
	-2, 233,
	-1, 181,
	1, 162,
	89, 162,
	91, 162,
	93, 162,
	95, 162,
	161, 162,
	-2, 239,
	-1, 184,
	1, 169,
	89, 169,
	91, 169,
	93, 169,
	95, 169,
	161, 169,
	-2, 233,
	-1, 185,
	1, 170,
	89, 170,
	91, 170,
	93, 170,
	95, 170,
	161, 170,
	-2, 239,
	-1, 248,
	89, 1,
	93, 1,
	95, 1,
	-2, 220,
	-1, 271,
	169, 359,
	-2, 488,
	-1, 272,
	169, 360,
	-2, 489,
	-1, 273,
	169, 361,
	-2, 490,
	-1, 274,
	169, 362,
	-2, 491,
	-1, 275,
	169, 363,
	-2, 492,
	-1, 286,
	54, 508,
	-2, 424,
	-1, 321,
	4, 144,
	135, 144,
	136, 144,
	137, 144,
	139, 144,
	140, 144,
	141, 144,
	142, 144,
	143, 144,
	-2, 239,
	-1, 322,
	4, 145,
	135, 145,
	136, 145,
	137, 145,
	139, 145,
	140, 145,
	141, 145,
	142, 145,
	143, 145,
	-2, 239,
	-1, 332,
	1, 174,
	89, 174,
	91, 174,
	93, 174,
	95, 174,
	161, 174,
	-2, 239,
	-1, 339,
	95, 4,
	-2, 220,
	-1, 367,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	156, 0,
	162, 0,
	-2, 280,
	-1, 368,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	156, 0,
	162, 0,
	-2, 282,
	-1, 377,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	156, 0,
	162, 0,
	-2, 292,
	-1, 413,
	95, 1,
	-2, 220,
	-1, 420,
	1, 210,
	52, 210,
	80, 210,
	89, 210,
	91, 210,
	93, 210,
	95, 210,
	98, 210,
	138, 210,
	161, 210,
	170, 210,
	-2, 239,
	-1, 421,
	1, 215,
	89, 215,
	91, 215,
	93, 215,
	95, 215,
	98, 215,
	99, 215,
	161, 215,
	170, 215,
	-2, 239,
	-1, 454,
	65, 189,
	66, 189,
	67, 189,
	-2, 379,
	-1, 476,
	1, 80,
	89, 80,
	91, 80,
	93, 80,
	95, 80,
	161, 80,
	-2, 239,
	-1, 477,
	1, 81,
	89, 81,
	91, 81,
	93, 81,
	95, 81,
	161, 81,
	-2, 233,
	-1, 478,
	1, 82,
	89, 82,
	91, 82,
	93, 82,
	95, 82,
	161, 82,
	-2, 239,
	-1, 479,
	1, 83,
	89, 83,
	91, 83,
	93, 83,
	95, 83,
	161, 83,
	-2, 233,
	-1, 480,
	1, 149,
	89, 149,
	91, 149,
	93, 149,
	95, 149,
	161, 149,
	-2, 233,
	-1, 481,
	1, 150,
	89, 150,
	91, 150,
	93, 150,
	95, 150,
	161, 150,
	-2, 239,
	-1, 482,
	1, 151,
	89, 151,
	91, 151,
	93, 151,
	95, 151,
	161, 151,
	-2, 233,
	-1, 483,
	1, 152,
	89, 152,
	91, 152,
	93, 152,
	95, 152,
	161, 152,
	-2, 239,
	-1, 486,
	1, 117,
	89, 117,
	91, 117,
	93, 117,
	95, 117,
	161, 117,
	171, 117,
	-2, 239,
	-1, 491,
	1, 422,
	89, 422,
	91, 422,
	93, 422,
	95, 422,
	161, 422,
	-2, 239,
	-1, 498,
	1, 175,
	89, 175,
	91, 175,
	93, 175,
	95, 175,
	161, 175,
	-2, 239,
	-1, 538,
	71, 0,
	75, 0,
	76, 0,
	77, 0,
	156, 0,
	162, 0,
	-2, 293,
	-1, 561,
	95, 1,
	-2, 220,
	-1, 568,
	91, 1,
	93, 1,
	95, 1,
	-2, 220,
	-1, 597,
	170, 357,
	171, 357,
	-2, 233,
	-1, 615,
	54, 508,
	-2, 382,
	-1, 653,
	19, 220,
	22, 220,
	24, 220,
	-2, 4,
	-1, 656,
	95, 4,
	-2, 220,
	-1, 657,
	95, 4,
	-2, 220,
	-1, 684,
	170, 260,
	171, 260,
	-2, 189,
	-1, 732,
	17, 519,
	80, 519,
	169, 519,
	-2, 87,
	-1, 758,
	89, 4,
	93, 4,
	95, 4,
	-2, 220,
	-1, 763,
	95, 4,
	-2, 220,
	-1, 764,
	95, 4,
	-2, 220,
	-1, 789,
	89, 1,
	93, 1,
	95, 1,
	-2, 220,
	-1, 835,
	1, 95,
	89, 95,
	91, 95,
	93, 95,
	95, 95,
	161, 95,
	-2, 233,
	-1, 836,
	1, 96,
	89, 96,
	91, 96,
	93, 96,
	95, 96,
	161, 96,
	-2, 239,
	-1, 838,
	95, 6,
	-2, 220,
	-1, 844,
	170, 128,
	171, 128,
	-2, 239,
	-1, 849,
	95, 4,
	-2, 220,
	-1, 915,
	95, 6,
	-2, 220,
	-1, 916,
	95, 6,
	-2, 220,
	-1, 920,
	95, 4,
	-2, 220,
	-1, 924,
	91, 4,
	93, 4,
	95, 4,
	-2, 220,
	-1, 961,
	19, 220,
	22, 220,
	24, 220,
	-2, 6,
	-1, 968,
	161, 62,
	-2, 239,
	-1, 1009,
	89, 6,
	93, 6,
	95, 6,
	-2, 220,
	-1, 1012,
	95, 8,
	-2, 220,
	-1, 1019,
	95, 6,
	-2, 220,
	-1, 1022,
	89, 4,
	93, 4,
	95, 4,
	-2, 220,
	-1, 1048,
	95, 6,
	-2, 220,
	-1, 1081,
	95, 6,
	-2, 220,
	-1, 1085,
	91, 6,
	93, 6,
	95, 6,
	-2, 220,
	-1, 1087,
	19, 220,
	22, 220,
	24, 220,
	-2, 8,
	-1, 1090,
	95, 8,
	-2, 220,
	-1, 1091,
	95, 8,
	-2, 220,
	-1, 1108,
	89, 8,
	93, 8,
	95, 8,
	-2, 220,
	-1, 1113,
	95, 8,
	-2, 220,
	-1, 1114,
	95, 8,
	-2, 220,
	-1, 1119,
	89, 6,
	93, 6,
	95, 6,
	-2, 220,
	-1, 1124,
	95, 8,
	-2, 220,
	-1, 1139,
	95, 8,
	-2, 220,
	-1, 1143,
	91, 8,
	93, 8,
	95, 8,
	-2, 220,
	-1, 1172,
	89, 8,
	93, 8,
	95, 8,
	-2, 220,
}

const yyPrivate = 57344

const yyLast = 4283

var yyAct = [...]int{
	120, 61, 1138, 1109, 1150, 1080, 1137, 1010, 1079, 919,
	983, 422, 121, 35, 507, 126, 357, 759, 982, 810,
	499, 197, 918, 1027, 198, 560, 739, 625, 981, 137,
	1057, 256, 300, 734, 614, 506, 26, 643, 641, 644,
	462, 698, 623, 590, 67, 281, 1, 290, 257, 253,
	605, 129, 574, 266, 93, 254, 351, 490, 610, 505,
	25, 354, 140, 439, 484, 559, 740, 444, 443, 1050,
	292, 264, 278, 61, 550, 83, 82, 147, 150, 150,
	285, 153, 237, 345, 70, 205, 182, 230, 682, 324,
	229, 525, 27, 1013, 229, 240, 447, 340, 448, 449,
	450, 442, 76, 525, 445, 191, 524, 1061, 209, 896,
	897, 513, 151, 880, 881, 105, 751, 752, 61, 196,
	61, 131, 159, 230, 894, 895, 229, 78, 78, 134,
	35, 246, 136, 175, 133, 710, 711, 135, 229, 137,
	831, 252, 819, 294, 782, 749, 748, 733, 731, 501,
	3, 330, 249, 26, 728, 261, 727, 1056, 712, 708,
	651, 648, 581, 283, 247, 522, 341, 447, 544, 448,
	449, 450, 442, 437, 250, 445, 97, 25, 432, 78,
	188, 78, 349, 305, 188, 1098, 284, 1097, 1076, 1073,
	279, 77, 78, 341, 137, 1072, 230, 341, 1071, 229,
	1070, 1044, 280, 1069, 1068, 265, 1040, 341, 1043, 312,
	78, 341, 446, 78, 1041, 301, 115, 303, 376, 949,
	344, 217, 226, 225, 216, 215, 218, 214, 221, 220,
	222, 223, 224, 1039, 1037, 1038, 376, 376, 375, 709,
	1036, 1026, 77, 343, 77, 1025, 106, 107, 108, 61,
	109, 110, 111, 112, 113, 77, 211, 304, 905, 990,
	329, 35, 221, 220, 222, 223, 224, 3, 1007, 1087,
	1006, 1005, 374, 77, 1004, 1000, 77, 426, 294, 138,
	138, 961, 619, 917, 26, 882, 131, 347, 348, 394,
	397, 398, 454, 428, 879, 409, 863, 369, 862, 217,
	226, 225, 216, 215, 218, 214, 212, 211, 25, 861,
	860, 115, 213, 221, 220, 222, 223, 224, 299, 411,
	520, 331, 859, 858, 217, 429, 438, 216, 215, 218,
	214, 138, 599, 375, 430, 640, 855, 833, 830, 390,
	61, 823, 395, 396, 138, 78, 137, 434, 137, 137,
	150, 807, 35, 405, 800, 781, 776, 775, 435, 774,
	78, 767, 138, 511, 497, 138, 78, 766, 747, 898,
	745, 732, 730, 376, 688, 877, 61, 680, 679, 376,
	376, 678, 676, 469, 212, 211, 284, 495, 496, 489,
	213, 221, 220, 222, 223, 224, 635, 545, 3, 494,
	376, 552, 552, 552, 78, 389, 391, 543, 191, 212,
	211, 492, 493, 587, 61, 213, 221, 220, 222, 223,
	224, 553, 105, 77, 541, 473, 35, 537, 459, 77,
	458, 137, 410, 539, 540, 519, 463, 294, 516, 600,
	516, 516, 337, 551, 97, 534, 533, 294, 515, 26,
	517, 518, 338, 336, 549, 144, 989, 988, 548, 987,
	564, 521, 986, 137, 985, 138, 951, 77, 944, 940,
	938, 286, 137, 25, 137, 586, 554, 555, 937, 468,
	930, 601, 929, 900, 886, 713, 556, 595, 685, 660,
	622, 279, 532, 531, 617, 530, 529, 138, 528, 527,
	638, 526, 604, 265, 594, 222, 223, 224, 475, 650,
	603, 474, 138, 613, 612, 457, 433, 602, 138, 646,
	655, 148, 143, 251, 245, 244, 234, 233, 232, 231,
	239, 628, 284, 318, 653, 460, 117, 316, 306, 188,
	579, 403, 700, 1116, 795, 575, 941, 939, 702, 661,
	139, 785, 684, 106, 107, 108, 588, 109, 110, 111,
	112, 113, 61, 3, 1019, 542, 472, 916, 936, 61,
	546, 547, 128, 21, 35, 915, 838, 461, 576, 662,
	557, 35, 867, 996, 865, 994, 664, 629, 376, 137,
	785, 580, 935, 701, 934, 933, 118, 26, 426, 143,
	699, 932, 148, 868, 26, 866, 683, 931, 692, 294,
	294, 864, 235, 404, 308, 696, 172, 294, 236, 173,
	174, 25, 177, 178, 179, 181, 691, 185, 25, 577,
	857, 706, 984, 687, 666, 667, 668, 669, 670, 419,
	718, 571, 683, 714, 999, 190, 952, 195, 715, 585,
	704, 97, 317, 707, 61, 716, 315, 61, 61, 471,
	1114, 137, 686, 418, 726, 729, 35, 307, 1171, 35,
	35, 1157, 725, 105, 757, 742, 705, 761, 762, 1147,
	1146, 1141, 376, 262, 155, 1127, 1126, 277, 1118, 1100,
	21, 1094, 190, 1086, 1083, 1021, 1018, 309, 310, 269,
	665, 1017, 972, 960, 928, 671, 672, 673, 572, 755,
	927, 3, 922, 753, 852, 851, 788, 690, 3, 652,
	565, 294, 563, 294, 294, 294, 1140, 1113, 294, 1091,
	1139, 772, 1090, 1012, 1082, 921, 780, 154, 1081, 920,
	808, 321, 322, 156, 764, 763, 791, 794, 657, 656,
	793, 790, 802, 801, 562, 799, 806, 339, 561, 61,
	332, 827, 820, 453, 61, 61, 805, 157, 809, 1139,
	813, 35, 219, 826, 825, 617, 35, 35, 1124, 847,
	1081, 1048, 920, 376, 853, 854, 841, 842, 840, 849,
	61, 846, 561, 646, 843, 415, 413, 646, 1172, 1143,
	104, 137, 35, 1119, 106, 107, 108, 1108, 109, 110,
	111, 112, 113, 1085, 1022, 1009, 294, 924, 294, 294,
	294, 21, 789, 876, 137, 26, 758, 137, 417, 568,
	248, 420, 421, 887, 888, 875, 874, 683, 137, 61,
	884, 768, 769, 770, 771, 773, 105, 1174, 1121, 25,
	61, 35, 1110, 1024, 893, 1011, 792, 760, 903, 78,
	411, 255, 35, 889, 902, 890, 238, 617, 1164, 912,
	923, 870, 116, 1163, 1145, 1144, 1106, 979, 376, 978,
	926, 925, 756, 137, 1140, 1082, 804, 921, 476, 478,
	481, 483, 486, 294, 562, 1178, 1170, 486, 491, 376,
	945, 1135, 491, 491, 1117, 1064, 498, 1020, 946, 954,
	873, 787, 21, 1161, 953, 1104, 61, 61, 615, 976,
	694, 61, 77, 1151, 1133, 61, 963, 1169, 35, 35,
	137, 1155, 683, 35, 1180, 966, 1166, 35, 967, 3,
	955, 974, 973, 959, 1154, 977, 912, 912, 992, 1153,
	376, 992, 1151, 683, 1167, 1168, 991, 784, 965, 995,
	210, 239, 61, 1165, 102, 372, 947, 993, 998, 371,
	373, 400, 346, 681, 35, 399, 1062, 106, 107, 108,
	1014, 109, 110, 111, 112, 113, 21, 958, 907, 1016,
	514, 342, 912, 1131, 1002, 1023, 911, 402, 401, 1176,
	1132, 992, 1152, 1134, 683, 203, 596, 883, 137, 1035,
	61, 138, 1015, 61, 1030, 1031, 1032, 1033, 1034, 824,
	61, 325, 35, 61, 319, 35, 611, 1058, 1149, 818,
	621, 1152, 35, 103, 259, 35, 379, 378, 1001, 724,
	912, 811, 812, 1065, 137, 376, 202, 203, 204, 61,
	912, 992, 447, 723, 448, 449, 948, 609, 608, 1075,
	606, 35, 1067, 258, 259, 907, 907, 1074, 583, 584,
	956, 1089, 957, 911, 911, 1095, 654, 376, 1096, 912,
	719, 721, 61, 426, 1066, 1029, 61, 607, 61, 1101,
	260, 61, 61, 447, 35, 448, 449, 450, 35, 683,
	35, 872, 1058, 35, 35, 1058, 1058, 440, 130, 61,
	1028, 907, 912, 1120, 61, 61, 912, 105, 744, 911,
	61, 35, 743, 1058, 97, 61, 35, 35, 1058, 1058,
	326, 683, 35, 1078, 21, 693, 750, 35, 741, 1058,
	61, 21, 1156, 697, 61, 1158, 208, 166, 167, 105,
	912, 388, 35, 146, 1058, 145, 35, 1107, 1058, 907,
	1111, 1112, 1052, 971, 68, 1099, 1173, 911, 856, 907,
	1177, 797, 798, 61, 969, 970, 845, 911, 1122, 467,
	839, 837, 1181, 1128, 1129, 35, 463, 1058, 735, 736,
	737, 738, 464, 465, 1142, 814, 816, 746, 907, 615,
	649, 466, 158, 160, 523, 142, 911, 487, 276, 1159,
	263, 282, 141, 1162, 164, 165, 168, 169, 431, 1042,
	1008, 486, 1003, 703, 491, 569, 21, 142, 436, 21,
	21, 907, 592, 328, 327, 907, 323, 1052, 98, 911,
	1052, 1052, 1179, 911, 100, 98, 100, 97, 106, 107,
	108, 488, 109, 110, 111, 112, 113, 201, 1052, 207,
	69, 624, 149, 1052, 1052, 1123, 631, 633, 1046, 907,
	1047, 105, 848, 412, 1052, 10, 9, 911, 1063, 591,
	106, 107, 108, 8, 109, 110, 111, 112, 113, 1052,
	891, 615, 7, 1052, 84, 414, 64, 116, 352, 353,
	447, 822, 448, 449, 450, 442, 288, 1084, 445, 287,
	358, 293, 295, 267, 270, 1175, 1148, 836, 1130, 127,
	1115, 92, 1052, 844, 63, 62, 28, 66, 59, 65,
	60, 21, 796, 850, 582, 424, 21, 21, 423, 58,
	1102, 206, 578, 573, 1105, 570, 6, 20, 183, 217,
	226, 225, 216, 215, 218, 214, 19, 71, 163, 17,
	645, 642, 21, 16, 485, 417, 15, 189, 217, 226,
	225, 216, 215, 218, 214, 14, 11, 18, 1136, 13,
	227, 228, 12, 1053, 908, 1051, 906, 502, 500, 624,
	241, 242, 4, 2, 0, 0, 0, 0, 0, 193,
	0, 624, 106, 107, 108, 0, 109, 110, 111, 112,
	113, 21, 0, 0, 189, 0, 0, 0, 0, 0,
	127, 0, 21, 624, 447, 0, 448, 449, 450, 442,
	811, 812, 445, 624, 212, 211, 632, 0, 183, 0,
	213, 221, 220, 222, 223, 224, 193, 0, 335, 331,
	0, 0, 0, 212, 211, 0, 0, 0, 0, 213,
	221, 220, 222, 223, 224, 193, 0, 0, 871, 0,
	0, 217, 226, 225, 216, 215, 218, 214, 0, 0,
	0, 0, 962, 334, 0, 0, 964, 968, 21, 21,
	0, 0, 0, 21, 975, 29, 0, 21, 779, 0,
	0, 0, 0, 0, 356, 0, 366, 367, 368, 592,
	370, 0, 0, 377, 624, 380, 381, 382, 383, 384,
	385, 386, 0, 0, 132, 183, 392, 356, 0, 0,
	0, 0, 624, 0, 21, 0, 0, 0, 828, 829,
	406, 0, 0, 0, 0, 0, 183, 0, 0, 0,
	416, 0, 0, 0, 0, 425, 212, 211, 0, 0,
	0, 0, 213, 221, 220, 222, 223, 224, 194, 0,
	778, 0, 0, 0, 0, 0, 0, 441, 0, 0,
	0, 0, 21, 0, 1049, 21, 0, 0, 0, 0,
	0, 0, 21, 0, 0, 21, 0, 850, 0, 183,
	0, 470, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 194, 0, 0, 193, 0,
	0, 21, 0, 0, 0, 0, 183, 1088, 0, 0,
	0, 5, 0, 0, 194, 217, 226, 225, 216, 215,
	218, 214, 0, 0, 0, 0, 0, 217, 226, 225,
	216, 215, 218, 214, 21, 1103, 0, 0, 21, 0,
	21, 0, 0, 21, 21, 0, 536, 0, 538, 0,
	183, 0, 105, 217, 226, 225, 216, 215, 218, 214,
	0, 21, 0, 1125, 0, 183, 21, 21, 0, 194,
	183, 183, 21, 0, 1049, 0, 0, 21, 116, 0,
	183, 624, 193, 0, 192, 0, 416, 0, 0, 0,
	566, 0, 21, 1160, 0, 0, 21, 0, 0, 0,
	212, 211, 0, 0, 0, 0, 213, 221, 220, 222,
	223, 224, 212, 211, 0, 558, 0, 0, 213, 221,
	220, 222, 223, 224, 0, 21, 997, 1125, 0, 0,
	0, 192, 624, 0, 0, 105, 0, 193, 212, 211,
	0, 0, 0, 0, 213, 221, 220, 222, 223, 224,
	192, 0, 0, 331, 217, 226, 225, 216, 215, 218,
	214, 269, 0, 0, 0, 0, 0, 194, 0, 193,
	0, 0, 0, 87, 0, 0, 0, 0, 193, 127,
	193, 0, 0, 106, 107, 108, 0, 109, 110, 111,
	112, 113, 0, 0, 0, 0, 0, 356, 0, 0,
	183, 0, 0, 0, 0, 183, 183, 183, 152, 0,
	674, 0, 0, 161, 162, 0, 170, 171, 0, 677,
	0, 194, 176, 194, 194, 0, 180, 0, 184, 0,
	186, 187, 0, 689, 0, 0, 0, 0, 0, 212,
	211, 0, 695, 0, 0, 213, 221, 220, 222, 223,
	224, 194, 0, 942, 0, 0, 425, 0, 193, 105,
	0, 408, 0, 0, 0, 0, 106, 107, 108, 0,
	109, 110, 111, 112, 113, 243, 105, 0, 0, 0,
	0, 717, 183, 217, 226, 225, 216, 215, 218, 214,
	0, 0, 0, 105, 0, 193, 0, 0, 0, 0,
	456, 0, 0, 192, 0, 0, 194, 0, 268, 0,
	268, 0, 0, 0, 0, 0, 268, 452, 268, 302,
	268, 0, 0, 0, 0, 0, 0, 0, 311, 268,
	313, 314, 0, 0, 0, 0, 0, 320, 194, 0,
	105, 183, 183, 183, 183, 183, 0, 194, 0, 194,
	777, 0, 0, 217, 226, 225, 216, 215, 218, 214,
	783, 0, 105, 0, 0, 289, 269, 193, 212, 211,
	0, 0, 0, 0, 213, 221, 220, 222, 223, 224,
	0, 350, 786, 355, 803, 0, 183, 192, 269, 0,
	106, 107, 108, 0, 109, 110, 111, 112, 113, 0,
	616, 0, 0, 387, 0, 0, 355, 106, 107, 108,
	0, 109, 110, 111, 112, 113, 832, 0, 0, 0,
	407, 0, 105, 0, 106, 107, 108, 194, 109, 110,
	111, 112, 113, 0, 427, 416, 0, 268, 212, 211,
	0, 0, 589, 0, 213, 221, 220, 222, 223, 224,
	268, 268, 0, 0, 869, 0, 0, 0, 0, 0,
	105, 451, 388, 0, 194, 268, 0, 0, 455, 0,
	0, 106, 107, 108, 627, 271, 272, 273, 274, 275,
	296, 297, 298, 636, 0, 639, 885, 0, 0, 477,
	479, 480, 482, 106, 107, 108, 0, 271, 272, 273,
	274, 275, 268, 0, 0, 291, 0, 193, 0, 0,
	0, 0, 0, 0, 510, 0, 512, 0, 0, 0,
	0, 0, 0, 217, 226, 105, 216, 215, 218, 214,
	193, 0, 0, 193, 0, 0, 194, 0, 78, 0,
	0, 0, 105, 0, 193, 0, 943, 0, 0, 0,
	289, 269, 0, 106, 107, 108, 183, 109, 110, 111,
	112, 113, 0, 192, 0, 0, 0, 289, 269, 0,
	183, 0, 183, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 127, 0, 105, 0, 193,
	0, 106, 107, 108, 0, 109, 110, 111, 112, 113,
	192, 77, 892, 0, 0, 593, 268, 597, 212, 211,
	268, 268, 289, 269, 213, 221, 220, 222, 223, 224,
	268, 0, 0, 0, 0, 0, 618, 0, 455, 0,
	620, 0, 0, 0, 593, 626, 193, 0, 630, 593,
	593, 634, 0, 0, 0, 637, 626, 817, 0, 647,
	0, 0, 0, 0, 0, 0, 106, 107, 108, 0,
	271, 272, 273, 274, 275, 296, 297, 298, 0, 0,
	0, 0, 765, 106, 107, 108, 194, 271, 272, 273,
	274, 275, 296, 297, 298, 0, 416, 658, 659, 0,
	291, 0, 0, 0, 0, 626, 355, 663, 387, 194,
	0, 0, 194, 0, 183, 0, 0, 291, 105, 0,
	0, 0, 0, 194, 193, 0, 100, 0, 106, 107,
	108, 0, 271, 272, 273, 274, 275, 296, 297, 298,
	127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 425, 0, 0, 0, 0, 0, 0, 0, 0,
	193, 0, 291, 0, 0, 427, 0, 0, 194, 0,
	0, 0, 593, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 593, 0, 0, 0, 0, 0,
	0, 0, 268, 268, 0, 416, 0, 0, 0, 0,
	0, 0, 105, 79, 80, 81, 593, 102, 0, 97,
	100, 98, 99, 630, 73, 194, 593, 0, 0, 0,
	0, 0, 878, 0, 0, 123, 0, 0, 116, 0,
	0, 0, 0, 754, 0, 0, 0, 0, 0, 105,
	0, 0, 0, 0, 0, 899, 0, 0, 901, 106,
	107, 108, 0, 109, 110, 111, 112, 113, 0, 904,
	0, 0, 0, 0, 289, 269, 0, 0, 94, 0,
	0, 0, 95, 0, 0, 0, 103, 0, 0, 0,
	0, 0, 0, 0, 0, 125, 122, 0, 0, 0,
	0, 0, 593, 194, 200, 101, 268, 593, 0, 815,
	0, 0, 0, 0, 950, 0, 0, 268, 268, 0,
	0, 268, 821, 0, 0, 593, 0, 626, 0, 0,
	0, 593, 593, 0, 0, 0, 0, 834, 835, 194,
	0, 199, 0, 106, 107, 108, 0, 109, 110, 111,
	112, 113, 0, 0, 0, 115, 88, 91, 89, 90,
	114, 980, 217, 226, 225, 216, 215, 218, 214, 0,
	0, 85, 86, 0, 0, 0, 96, 72, 0, 0,
	106, 107, 108, 567, 271, 272, 273, 274, 275, 296,
	297, 298, 0, 105, 79, 80, 81, 0, 102, 0,
	97, 100, 98, 99, 22, 73, 78, 0, 0, 37,
	38, 0, 268, 268, 291, 0, 30, 0, 0, 116,
	0, 31, 46, 0, 32, 630, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1045,
	0, 0, 0, 0, 0, 0, 0, 212, 211, 0,
	0, 0, 0, 213, 221, 220, 222, 223, 224, 94,
	0, 0, 0, 95, 0, 0, 0, 103, 0, 77,
	0, 0, 0, 0, 0, 1077, 1055, 1054, 0, 913,
	626, 0, 0, 0, 0, 34, 101, 0, 41, 39,
	40, 36, 42, 0, 593, 0, 0, 0, 0, 0,
	44, 45, 508, 509, 0, 49, 50, 51, 52, 43,
	54, 55, 56, 47, 53, 57, 0, 0, 0, 914,
	0, 0, 33, 48, 106, 107, 108, 0, 109, 110,
	111, 112, 113, 0, 0, 0, 115, 88, 91, 89,
	90, 114, 0, 0, 0, 593, 0, 0, 0, 0,
	0, 0, 85, 86, 0, 0, 0, 96, 72, 0,
	0, 0, 0, 0, 0, 0, 105, 79, 80, 81,
	0, 102, 0, 97, 100, 98, 99, 22, 73, 78,
	0, 0, 37, 38, 0, 0, 0, 0, 0, 30,
	0, 0, 116, 0, 31, 46, 0, 32, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1059, 1060, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 94, 0, 0, 0, 95, 0, 0, 0,
	103, 0, 77, 0, 0, 0, 105, 0, 0, 504,
	503, 0, 74, 0, 0, 1092, 1093, 0, 34, 101,
	427, 41, 39, 40, 36, 42, 0, 0, 0, 0,
	0, 289, 269, 44, 45, 508, 509, 75, 49, 50,
	51, 52, 43, 54, 55, 56, 47, 53, 57, 0,
	0, 0, 0, 0, 0, 33, 48, 106, 107, 108,
	0, 109, 110, 111, 112, 113, 722, 0, 0, 115,
	88, 91, 89, 90, 114, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 85, 86, 0, 0, 0,
	96, 72, 105, 79, 80, 81, 0, 102, 0, 97,
	100, 98, 99, 22, 73, 78, 0, 0, 37, 38,
	0, 0, 0, 0, 0, 30, 0, 0, 116, 0,
	31, 46, 0, 32, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 106, 107, 108,
	0, 271, 272, 273, 274, 275, 296, 297, 298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 94, 0,
	0, 0, 95, 0, 0, 0, 103, 0, 77, 0,
	0, 291, 105, 0, 0, 910, 909, 0, 913, 0,
	0, 0, 0, 0, 34, 101, 0, 41, 39, 40,
	36, 42, 0, 0, 0, 0, 0, 289, 269, 44,
	45, 0, 0, 0, 49, 50, 51, 52, 43, 54,
	55, 56, 47, 53, 57, 0, 0, 0, 914, 0,
	0, 33, 48, 106, 107, 108, 0, 109, 110, 111,
	112, 113, 720, 0, 0, 115, 88, 91, 89, 90,
	114, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 85, 86, 0, 0, 0, 96, 72, 105, 79,
	80, 81, 0, 102, 0, 97, 100, 98, 99, 22,
	73, 78, 0, 0, 37, 38, 0, 0, 0, 0,
	0, 30, 0, 0, 116, 0, 31, 46, 0, 32,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 106, 107, 108, 0, 271, 272, 273,
	274, 275, 296, 297, 298, 0, 0, 0, 0, 0,
	105, 0, 0, 0, 94, 0, 0, 0, 95, 0,
	0, 0, 103, 0, 77, 0, 0, 291, 0, 0,
	0, 24, 23, 0, 74, 289, 269, 0, 0, 0,
	34, 101, 0, 41, 39, 40, 36, 42, 0, 0,
	0, 0, 0, 0, 0, 44, 45, 0, 0, 75,
	49, 50, 51, 52, 43, 54, 55, 56, 47, 53,
	57, 0, 0, 0, 0, 0, 0, 33, 48, 106,
	107, 108, 0, 109, 110, 111, 112, 113, 0, 0,
	0, 115, 88, 91, 89, 90, 114, 0, 0, 0,
	217, 675, 225, 216, 215, 218, 214, 85, 86, 0,
	0, 0, 96, 72, 105, 79, 80, 81, 0, 102,
	0, 97, 100, 98, 99, 0, 73, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 123, 0, 0,
	116, 106, 107, 108, 0, 271, 272, 273, 274, 275,
	296, 297, 298, 0, 0, 105, 79, 80, 81, 0,
	102, 0, 97, 100, 98, 99, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 291, 0, 0, 123, 0,
	94, 116, 0, 0, 95, 212, 211, 0, 103, 0,
	0, 213, 221, 220, 222, 223, 224, 125, 122, 0,
	0, 0, 0, 0, 0, 0, 0, 101, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 94, 0, 0, 0, 95, 0, 0, 0, 103,
	0, 0, 0, 0, 0, 0, 0, 0, 125, 122,
	0, 0, 0, 360, 0, 106, 107, 108, 101, 109,
	110, 111, 112, 113, 0, 0, 0, 115, 88, 361,
	89, 359, 362, 363, 364, 365, 0, 0, 0, 0,
	0, 0, 0, 85, 86, 358, 0, 0, 96, 72,
	393, 0, 0, 0, 360, 0, 106, 107, 108, 0,
	109, 110, 111, 112, 113, 0, 0, 0, 115, 88,
	361, 89, 359, 362, 363, 364, 365, 217, 535, 225,
	216, 215, 218, 214, 85, 86, 358, 0, 0, 96,
	72, 105, 79, 80, 81, 0, 102, 0, 97, 100,
	98, 99, 0, 73, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 123, 0, 0, 116, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 105, 79,
	80, 81, 0, 102, 0, 97, 100, 98, 99, 0,
	73, 78, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 123, 0, 0, 116, 0, 0, 94, 0, 0,
	0, 95, 212, 211, 0, 103, 0, 0, 213, 221,
	220, 222, 223, 224, 125, 122, 0, 0, 0, 0,
	0, 0, 0, 0, 101, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 94, 0, 0, 0, 95, 0,
	0, 0, 103, 0, 77, 0, 0, 0, 0, 0,
	0, 125, 122, 0, 0, 0, 0, 0, 0, 0,
	360, 101, 106, 107, 108, 0, 109, 110, 111, 112,
	113, 0, 0, 0, 115, 88, 361, 89, 359, 362,
	363, 364, 365, 0, 0, 0, 0, 0, 0, 0,
	85, 86, 0, 0, 0, 96, 72, 124, 0, 106,
	107, 108, 0, 109, 110, 111, 112, 113, 0, 0,
	0, 115, 88, 91, 89, 90, 114, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 85, 86, 0,
	0, 0, 96, 72, 105, 79, 80, 81, 0, 102,
	0, 97, 100, 98, 99, 0, 73, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 123, 0, 0,
	116, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 105, 79, 80, 81, 0, 102, 0, 97, 100,
	98, 99, 0, 73, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 123, 0, 0, 116, 0, 0,
	94, 0, 0, 0, 95, 0, 0, 0, 103, 0,
	0, 0, 0, 0, 0, 0, 0, 125, 122, 0,
	0, 0, 0, 0, 0, 0, 0, 101, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 94, 0, 0,
	0, 95, 0, 0, 0, 103, 210, 0, 0, 0,
	0, 0, 0, 0, 125, 122, 0, 0, 0, 0,
	0, 0, 0, 124, 101, 106, 107, 108, 0, 109,
	110, 111, 112, 113, 0, 0, 0, 115, 88, 91,
	89, 90, 114, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 86, 358, 0, 0, 96, 72,
	124, 0, 106, 107, 108, 0, 109, 110, 111, 112,
	113, 0, 0, 0, 115, 88, 91, 89, 90, 114,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	85, 86, 0, 0, 0, 96, 72, 105, 79, 80,
	81, 0, 102, 0, 97, 100, 98, 99, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	123, 0, 0, 116, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 105, 79, 80, 81, 0, 102,
	0, 97, 100, 98, 99, 0, 73, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 123, 0, 0,
	116, 0, 0, 94, 0, 0, 0, 95, 0, 0,
	0, 103, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 122, 0, 0, 0, 0, 0, 0, 0, 0,
	101, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	94, 0, 0, 0, 95, 0, 0, 0, 103, 0,
	0, 0, 0, 0, 0, 0, 0, 125, 122, 0,
	0, 0, 0, 0, 0, 0, 124, 101, 106, 107,
	108, 0, 109, 110, 111, 112, 113, 0, 0, 0,
	115, 88, 91, 89, 90, 114, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 86, 0, 0,
	0, 96, 72, 124, 0, 106, 107, 108, 0, 109,
	110, 111, 112, 113, 0, 0, 0, 115, 88, 91,
	89, 90, 114, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 85, 86, 0, 0, 0, 96, 119,
	105, 79, 80, 81, 0, 102, 0, 97, 100, 98,
	99, 0, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 123, 0, 0, 598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 105, 79, 333,
	81, 0, 102, 0, 97, 100, 98, 99, 0, 73,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	123, 0, 0, 116, 0, 0, 94, 0, 0, 0,
	95, 0, 0, 0, 103, 0, 0, 0, 0, 0,
	0, 0, 0, 125, 122, 0, 0, 0, 0, 0,
	0, 0, 0, 101, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 94, 0, 0, 0, 95, 0, 0,
	0, 103, 0, 0, 0, 0, 0, 0, 0, 0,
	125, 122, 0, 0, 0, 0, 0, 0, 0, 124,
	101, 106, 107, 108, 0, 109, 110, 111, 112, 113,
	0, 0, 0, 115, 88, 91, 89, 90, 114, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 85,
	86, 0, 0, 0, 96, 72, 124, 0, 106, 107,
	108, 0, 109, 110, 111, 112, 113, 0, 0, 0,
	115, 88, 91, 89, 90, 114, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 85, 86, 0, 0,
	0, 96, 72,
}

var yyPact = [...]int{
	3094, -1000, 375, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3910, 3873, -1000, -1000, 1063, 110, 1187,
	430, 1119, 1117, 433, 1113, -1000, 640, 1232, 1225, 2038,
	2038, 1110, 2038, 3873, -1000, -1000, 3873, 3873, 2324, 3873,
	3873, 3873, 3873, 3873, 3873, -1000, 2038, 2038, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 381, -1000, -1000,
	-1000, -1000, 3504, -1000, 2408, 1251, 981, 1115, 881, -1000,
	-1000, -1000, -1000, -1000, 1902, 3873, 3873, -82, 360, 359,
	358, 357, -1000, 456, 296, 3873, 3873, -1000, -1000, -1000,
	-1000, 2038, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 356, 355, -41, 3094, 738, 3504,
	-1000, -1000, 354, 353, 352, 3873, 770, 1902, -1000, 1012,
	1042, 1063, 1187, 1185, 1978, 1183, 669, -1000, 196, 1209,
	1188, 1236, 3156, 3873, 1978, 2038, 1978, -1000, 881, 12,
	380, -1000, 570, -1000, 2038, 1751, 2038, 2038, 494, 490,
	-1000, 962, -1000, 2038, -1000, -1000, -1000, -1000, 3873, 3873,
	1218, 27, 959, 1087, 1216, -1000, 1215, -1000, -1000, 89,
	-82, -1000, -1000, 1602, -82, -1000, -1000, 4113, 3873, 1278,
	283, 272, 282, 328, 1209, 663, 26, 920, 1236, 352,
	-1000, -1000, 904, 904, 904, -1000, 11, 2038, -1000, 3301,
	-1000, 3873, 3873, 3873, 887, 3873, 894, 69, 3873, 968,
	3873, 3873, 3873, 3873, 3873, 3873, 3873, -1000, -1000, 2076,
	3707, 3873, 3260, 881, 881, 69, 69, 900, 929, -1000,
	-1000, 253, -1000, 464, 881, 3873, 1875, -1000, 3094, 272,
	262, 3873, 769, 703, 702, 3873, 565, 540, 3873, 3873,
	3467, 1012, 1209, 1978, 1198, 7, -1000, -1000, -1000, -1000,
	347, -1000, -1000, -1000, -1000, -1000, 1978, 3156, 1210, 2,
	1188, 1061, 3873, -1000, -5, -1000, 41, 1909, -1000, -1000,
	-1000, 2141, -1000, -1000, 1892, 346, -1000, -1000, -1000, 260,
	-1000, 366, 408, 1159, 3873, 1236, 3873, 561, 397, 342,
	339, -1000, -1000, -1000, -1000, 3873, 3873, 3873, 3873, 3873,
	1182, -1000, -1000, 1246, 3873, 3873, 1234, 1234, 1978, 3873,
	3873, 3873, -1000, 3873, 1902, -1000, -1000, -1000, -1000, 2762,
	2038, 1236, 2038, 40, 919, 328, -1000, 328, 328, 1115,
	292, -1000, -6, 1176, -1000, -66, 1902, -1000, -1000, 332,
	330, 329, 327, 326, 324, 323, 65, 99, 99, 955,
	3386, 3873, 69, 3873, -1000, 3504, -1000, 99, 69, 69,
	340, 340, -1000, -1000, -1000, 2072, 253, -1000, -1000, 254,
	3873, 237, 150, -1000, 227, 3873, 3670, -1000, -1000, 69,
	274, 274, 274, 887, -1000, 3873, 1564, -1000, -1000, 665,
	-1000, 3873, 627, 3094, 625, 3873, 2491, 737, 1206, 604,
	492, 454, -1000, -9, 1019, 1902, -1000, -78, 551, 1188,
	387, 1668, 1978, 4076, 270, 1188, 3156, 1751, 1061, 1013,
	1039, 1902, 1004, 1003, 970, 1038, 1956, -1000, -1000, -1000,
	-1000, -1000, 2038, 112, 1892, -1000, 2038, 3873, -1000, 321,
	1668, 2038, 196, -1000, 418, 1267, 1668, 2038, 226, -1000,
	1902, 111, 2038, 196, 165, 2038, -1000, -82, -1000, -82,
	-82, -1000, -82, -1000, -1000, -10, 1172, 1236, -1000, -1000,
	-1000, -11, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 624,
	373, -1000, -1000, 3910, 3873, -1000, -1000, -1000, -1000, -1000,
	655, -1000, 654, 2038, 2038, 939, -1000, -1000, 939, -1000,
	320, 2038, 3301, 2038, 1145, 3707, 881, 881, 881, 881,
	3873, 3873, 3873, -1000, -1000, 3873, 3179, -1000, 99, -1000,
	-1000, -1000, 212, -1000, 3873, -1000, 211, 208, 207, 901,
	-1000, 164, -1000, 319, -1000, -1000, 562, 204, 3873, 622,
	699, 3094, 3873, 833, -1000, -1000, 1902, 3873, 3094, -1000,
	3873, -1000, -1000, 462, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3467, 412, -1000, -1000, 1204, 1061, 69, 842, -1000,
	1209, -12, 77, -34, -1000, -35, -13, -82, -41, 316,
	1668, -1000, 1188, -1000, 1013, -1000, 3873, 3873, 3008, 2842,
	999, -1000, 985, 970, -1000, 1245, 296, -15, -1000, -1000,
	-1000, -17, 1668, 202, -23, 201, -24, -1000, 1151, 2038,
	1097, -1000, 1668, 1079, 1075, -1000, -1000, -1000, 200, -1000,
	1169, 198, -25, -1000, -1000, -26, 1095, -54, 3873, 2038,
	-1000, 3873, 792, 2762, 734, 766, 2762, 2762, 651, 650,
	196, 197, -1000, -1000, -1000, 191, 3873, 3873, 3873, 3670,
	3873, 189, 187, 186, 253, 3873, -1000, 1400, -1000, -1000,
	-1000, 69, 185, -27, -1000, 3873, -1000, 876, 419, 1832,
	823, 621, -1000, 730, -1000, 228, 765, 492, 982, -1000,
	409, -1000, 1134, -1000, 1013, -1000, 184, 1188, 1668, 3873,
	-1000, 3873, 1751, 1668, 181, -1000, 1063, 1902, -1000, 997,
	296, 1369, 296, 2445, 2203, 975, -29, 1956, 3873, 171,
	957, 1668, 1158, 2038, -1000, -1000, -1000, 1668, 1668, 168,
	-31, 3873, 167, 2038, 3873, 1153, 447, 1152, 1236, 1236,
	3873, 1148, 1236, -1000, -1000, -1000, -1000, -1000, 2762, 696,
	3873, 620, 619, 2762, 2762, 166, 1140, 520, 153, 152,
	140, 139, 128, 126, 501, 474, 472, 253, -1000, 3873,
	-1000, -1000, 69, 1297, -1000, 1055, -1000, -1000, 822, 3094,
	-1000, -1000, 3873, 462, -1000, -1000, -1000, -1000, -1000, 1063,
	349, -1000, -1000, 1902, 124, -57, 115, 945, 1012, -1000,
	-1000, 3873, 315, 980, 1369, 296, 997, 296, 2158, 1956,
	-1000, -46, -61, 343, 314, -1000, 196, -1000, -1000, -1000,
	1151, 2038, 1902, -1000, -1000, -82, -1000, 196, 2928, 446,
	-1000, -1000, -1000, 1095, -1000, 438, 113, 646, 617, 2762,
	725, 791, 790, 615, 609, -1000, 313, 311, 497, 491,
	485, 484, 482, 458, 309, 301, 411, 300, 410, 1703,
	-1000, 3873, 299, -1000, 805, -1000, 1012, 69, -1000, -1000,
	-1000, 3873, 193, 297, 548, 1902, 2038, -1000, -1000, 980,
	-1000, 997, 296, -1000, -1000, 3873, -1000, 3873, 69, -1000,
	1668, -1000, -1000, -1000, -1000, 608, 120, -1000, -1000, 3910,
	3873, -1000, -1000, 2408, 3873, 2928, 2928, 1135, 607, 689,
	2762, 3873, 832, -1000, 2762, -1000, -1000, 789, 787, 196,
	523, 295, 293, 290, 288, 287, 90, 523, 523, 475,
	523, 473, -1000, 1576, 1063, -1000, 546, -1000, 105, 69,
	-1000, 1668, 1203, 104, -1000, -1000, 101, 100, -1000, 98,
	-1000, 2928, 723, 764, 639, 22, 909, 1236, -1000, 606,
	601, 435, 819, 600, -1000, 722, -1000, 762, -1000, -1000,
	75, 71, -1000, 1065, 1037, 523, 523, 523, 523, 523,
	523, 70, 1063, 64, 66, 63, 37, -1000, 44, 1200,
	-1000, -1000, 38, -1000, -1000, -1000, -1000, 175, -1000, 2928,
	688, 3873, 2589, 2038, 2038, 36, 905, -1000, -1000, 2928,
	-1000, 817, 2762, -1000, 3873, -1000, -1000, -1000, 1036, 3873,
	34, 33, 30, 28, 25, 19, -1000, -1000, 523, -1000,
	523, -1000, -1000, 162, 69, -1000, 645, 599, 2928, 721,
	598, 108, -1000, -1000, 3910, 3873, -1000, -1000, -1000, 638,
	635, 2038, 2038, 596, -1000, 798, 3467, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 17, 15, 69, -1000, -1000, 594,
	687, 2928, 3873, 828, -1000, 2928, 786, 2589, 715, 761,
	2589, 2589, 633, 566, -1000, -1000, 406, -1000, -1000, -1000,
	816, 593, -1000, 711, -1000, 757, -1000, -1000, 2589, 685,
	3873, 591, 590, 2589, 2589, -1000, 918, -1000, 813, 2928,
	-1000, 3873, 637, 586, 2589, 707, 785, 784, 585, 584,
	-1000, 946, 866, 861, 845, -1000, 796, 576, 676, 2589,
	3873, 826, -1000, 2589, -1000, -1000, 783, 778, 891, 853,
	-1000, 871, 841, -1000, -1000, -1000, -1000, 808, 573, -1000,
	706, -1000, 756, -1000, -1000, 917, -1000, -1000, -1000, -1000,
	-1000, 807, 2589, -1000, 3873, -1000, 850, -1000, -1000, 795,
	-1000, -1000,
}

var yyPgo = [...]int{
	0, 46, 20, 258, 69, 149, 14, 1393, 59, 24,
	35, 1392, 1388, 1387, 1386, 157, 30, 1385, 1384, 1383,
	1382, 1379, 1377, 1376, 66, 26, 33, 1375, 1366, 1364,
	64, 1363, 39, 1361, 1360, 37, 38, 1359, 1358, 1357,
	1356, 1347, 1631, 1346, 92, 102, 1495, 550, 62, 45,
	63, 50, 23, 31, 41, 1345, 1343, 52, 1342, 48,
	1326, 1341, 85, 1339, 76, 75, 800, 1294, 572, 61,
	54, 88, 11, 1338, 1335, 1334, 1332, 0, 1330, 74,
	1329, 1328, 1327, 174, 1325, 1324, 1321, 16, 18, 28,
	10, 1320, 1318, 4, 1316, 1315, 53, 1314, 1313, 1312,
	1311, 70, 72, 71, 1309, 47, 34, 471, 1306, 19,
	1299, 1298, 1296, 15, 55, 1295, 42, 32, 57, 80,
	27, 56, 1292, 1283, 1279, 43, 1276, 1275, 25, 65,
	9, 22, 5, 8, 2, 6, 49, 1273, 17, 1272,
	7, 1270, 3, 1265, 1793, 44, 21, 12, 1262, 77,
	1164, 1260, 84, 108, 82, 68, 58, 67, 83, 1259,
	40, 772,
}

var yyR1 = [...]int{
	0, 1, 1, 1, 2, 2, 3, 3, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 6, 6,
	7, 7, 8, 8, 8, 8, 8, 9, 9, 10,
	10, 12, 12, 11, 11, 11, 11, 11, 13, 13,
	13, 13, 13, 13, 14, 14, 15, 15, 15, 15,
	15, 16, 16, 17, 17, 18, 18, 18, 18, 18,
	19, 19, 19, 19, 19, 19, 20, 20, 20, 20,
	21, 21, 21, 21, 21, 22, 22, 23, 23, 23,
	23, 23, 23, 23, 23, 23, 23, 24, 24, 25,
	25, 26, 26, 26, 26, 26, 27, 27, 27, 27,
	27, 27, 27, 28, 28, 28, 28, 29, 29, 30,
	30, 31, 31, 31, 31, 32, 33, 33, 34, 35,
	35, 36, 36, 36, 37, 37, 37, 37, 37, 38,
	38, 38, 38, 38, 38, 38, 39, 39, 39, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 41, 41, 41, 42, 42, 42, 42,
	43, 43, 43, 43, 44, 44, 44, 44, 45, 45,
	46, 47, 48, 48, 49, 49, 50, 50, 51, 51,
	52, 52, 53, 53, 53, 54, 54, 54, 55, 55,
	56, 56, 57, 57, 57, 58, 58, 58, 59, 59,
	60, 60, 61, 61, 62, 62, 63, 63, 63, 63,
	63, 64, 65, 66, 66, 66, 66, 66, 67, 67,
	67, 68, 68, 68, 68, 68, 68, 68, 68, 68,
	68, 68, 68, 68, 68, 68, 68, 68, 69, 70,
	70, 70, 71, 71, 72, 72, 73, 73, 74, 74,
	75, 75, 75, 76, 76, 77, 78, 79, 79, 79,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 81,
	81, 81, 81, 81, 81, 81, 82, 82, 82, 82,
	83, 83, 84, 84, 84, 84, 84, 84, 84, 84,
	85, 85, 85, 85, 85, 85, 86, 86, 87, 87,
	87, 87, 87, 87, 87, 87, 87, 87, 87, 87,
	88, 89, 89, 90, 90, 91, 91, 92, 92, 92,
	93, 93, 93, 94, 94, 95, 95, 96, 96, 97,
	97, 97, 97, 97, 99, 99, 99, 98, 98, 98,
	98, 100, 100, 100, 100, 101, 101, 104, 104, 105,
	105, 105, 106, 106, 106, 106, 107, 107, 107, 107,
	107, 107, 107, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 109, 109, 110, 110, 111, 111, 111,
	111, 112, 113, 113, 114, 114, 115, 115, 116, 116,
	117, 117, 118, 118, 119, 119, 102, 102, 103, 103,
	120, 120, 121, 121, 122, 122, 122, 122, 123, 124,
	125, 125, 126, 126, 126, 126, 126, 126, 126, 126,
	127, 127, 128, 128, 129, 129, 130, 130, 131, 131,
	132, 132, 133, 133, 134, 134, 135, 135, 136, 136,
	137, 137, 138, 138, 139, 139, 140, 140, 141, 141,
	142, 142, 143, 143, 144, 144, 144, 144, 144, 144,
	144, 144, 144, 145, 146, 146, 147, 148, 148, 149,
	149, 150, 151, 152, 153, 153, 154, 154, 155, 155,
	156, 156, 157, 157, 157, 158, 158, 159, 159, 160,
	160, 161, 161,
}

var yyR2 = [...]int{
	0, 0, 1, 3, 0, 3, 0, 3, 0, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 6, 8, 8, 9, 9, 1, 1, 1,
	2, 1, 1, 7, 8, 6, 1, 1, 7, 8,
	6, 1, 1, 1, 1, 1, 6, 8, 8, 9,
	9, 1, 2, 1, 1, 7, 8, 6, 1, 1,
	7, 8, 6, 1, 1, 1, 2, 2, 1, 2,
	4, 4, 4, 4, 2, 1, 1, 6, 8, 5,
	6, 8, 5, 7, 7, 7, 7, 1, 3, 1,
	3, 0, 1, 1, 2, 2, 5, 5, 2, 4,
	2, 3, 5, 6, 8, 5, 3, 1, 3, 1,
	3, 4, 2, 4, 3, 1, 1, 3, 3, 1,
	3, 1, 1, 3, 9, 10, 10, 12, 3, 0,
	1, 1, 1, 1, 2, 2, 5, 6, 3, 4,
	4, 4, 4, 4, 4, 2, 2, 2, 2, 4,
	4, 2, 2, 2, 4, 1, 2, 2, 4, 2,
	2, 1, 2, 2, 3, 4, 3, 5, 4, 6,
	8, 10, 9, 11, 5, 4, 4, 4, 1, 1,
	3, 2, 0, 2, 0, 2, 0, 3, 0, 2,
	0, 3, 1, 6, 5, 0, 1, 2, 1, 1,
	0, 1, 1, 1, 1, 0, 1, 1, 0, 3,
	0, 2, 6, 9, 1, 3, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 1, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 1, 3,
	1, 6, 1, 3, 1, 3, 2, 4, 1, 1,
	0, 1, 1, 1, 1, 3, 3, 3, 1, 6,
	3, 3, 3, 3, 4, 4, 5, 6, 6, 3,
	4, 4, 3, 4, 4, 4, 4, 4, 2, 3,
	3, 3, 3, 3, 2, 2, 3, 3, 2, 2,
	0, 1, 4, 4, 6, 8, 3, 4, 4, 4,
	5, 5, 5, 5, 5, 1, 5, 10, 8, 9,
	9, 9, 9, 9, 9, 8, 8, 10, 8, 10,
	2, 1, 5, 0, 3, 2, 5, 2, 2, 2,
	2, 2, 2, 2, 1, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 6, 6,
	8, 6, 8, 6, 8, 1, 1, 1, 1, 1,
	2, 3, 1, 2, 3, 4, 1, 2, 3, 1,
	1, 1, 3, 4, 5, 6, 5, 6, 5, 6,
	7, 6, 7, 2, 4, 1, 1, 1, 3, 1,
	3, 5, 0, 1, 4, 5, 0, 2, 1, 3,
	1, 3, 1, 3, 1, 3, 1, 3, 1, 3,
	1, 3, 1, 3, 6, 9, 5, 8, 7, 3,
	1, 3, 10, 13, 9, 12, 9, 12, 8, 11,
	5, 6, 4, 5, 0, 2, 4, 5, 0, 2,
	4, 5, 0, 2, 4, 5, 0, 2, 4, 5,
	0, 2, 4, 5, 0, 2, 4, 5, 0, 2,
	4, 5, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	3, 1, 1, 1, 0, 1, 0, 1, 0, 1,
	0, 1, 1, 1, 1, 0, 1, 0, 1, 0,
	1, 1, 1,
}

var yyChk = [...]int{
	-1000, -1, -7, -5, -11, -42, -43, -122, -123, -126,
	-127, -23, -20, -21, -27, -28, -31, -37, -22, -40,
	-41, -68, 15, 88, 87, -8, -10, -44, -60, -46,
	27, 32, 35, 133, 96, -147, 102, 20, 21, 100,
	101, 99, 103, 120, 111, 112, 33, 124, 134, 116,
	117, 118, 119, 125, 121, 122, 123, 126, -63, -81,
	-78, -77, -84, -85, -112, -80, -82, -145, -150, -151,
	-152, -39, 169, 16, 90, 115, -45, 80, 17, 5,
	6, 7, -64, -65, -67, 163, 164, -144, 148, 150,
	151, 149, -86, -70, 70, 74, 168, 11, 13, 14,
	12, 97, 9, 78, -66, 4, 135, 136, 137, 139,
	140, 141, 142, 143, 152, 147, 30, 161, -68, 169,
	-77, -147, 88, 27, 133, 87, -113, -67, -68, -52,
	45, -44, -46, 24, 19, 27, 22, -77, 169, -47,
	-48, 25, 18, 169, 25, 36, 36, -149, 169, -148,
	-145, -149, -144, -145, 97, 44, 103, 127, -150, -152,
	-150, -144, -144, -38, 104, 105, 37, 38, 106, 107,
	-144, -144, -68, -68, -68, -152, -144, -68, -68, -68,
	-144, -68, -117, -67, -144, -68, -144, -144, 158, -67,
	-68, -117, -42, -60, -46, -68, -145, -146, -9, 133,
	96, 6, 65, 66, 67, -62, -61, -159, 31, -153,
	79, 157, 156, 162, 77, 75, 74, 71, 76, -161,
	164, 163, 165, 166, 167, 73, 72, -67, -67, 172,
	169, 169, 169, 169, 169, 156, 162, -154, -161, 74,
	-77, -67, -67, -144, 169, 169, 172, -1, 92, -117,
	-83, 169, -113, -136, -114, 91, -53, -59, 51, 52,
	48, -52, -47, 25, -103, -101, -96, -98, -144, 30,
	-97, 139, 140, 141, 142, 143, 25, 18, -102, -96,
	-48, -49, 23, -146, -145, -119, -107, -104, -108, 29,
	-105, 169, -101, -100, -77, -99, 144, 145, 146, -83,
	-117, -101, -144, -101, -153, 171, 158, 97, 44, 127,
	128, -144, -96, -144, -144, 162, 43, 162, 43, 62,
	-144, -68, -68, 18, 62, 62, 43, 18, 18, 171,
	62, 171, -68, 6, -67, 170, 170, 170, 170, 94,
	71, 171, 71, -145, -146, -158, 68, -158, -158, 171,
	-144, -121, -111, -110, -69, -144, -67, -87, 165, 151,
	133, 149, 152, 153, 154, 155, -67, -67, -67, -154,
	-67, 75, 71, 76, -70, 169, -77, -67, 69, 68,
	-67, -67, -67, -67, -67, -67, -67, -144, 6, -83,
	-153, -83, -67, 170, -121, -153, -153, -70, -70, 75,
	71, 69, 68, 77, 149, -153, -67, -144, 6, -1,
	170, 91, -137, 93, -115, 93, -67, -68, 98, 99,
	-68, -68, -72, -73, -74, -67, -87, -144, -53, -48,
	-101, 20, 171, 169, -101, -119, 18, 171, -49, -50,
	46, -67, 60, -155, -157, 63, 171, 55, 57, 58,
	59, -144, 28, -107, -77, -144, 28, 169, 170, 62,
	169, 169, -160, 28, 33, 34, 42, 20, -83, -149,
	-67, 98, 169, 28, 169, 169, -68, -144, -68, -144,
	-144, -68, -144, -68, -30, -29, -68, 25, 5, -30,
	-118, -68, -152, -152, -101, -118, -118, -117, -68, -2,
	-12, -5, -13, 88, 87, -8, -10, -6, 113, 114,
	-144, -146, -144, 71, 71, -45, -44, -45, -45, -62,
	28, 169, 171, 28, 172, 169, 169, 169, 169, 169,
	169, 169, 169, -64, -65, 72, -67, -70, -67, -70,
	-70, 170, -83, 170, 18, 170, -83, -83, -69, -70,
	-79, 169, -77, 147, -79, -79, -154, -83, 171, -129,
	-128, 93, 89, 95, -1, 95, -67, 92, 92, 19,
	-55, 37, 104, -56, -57, 53, 86, 137, -58, 86,
	137, 171, -75, 49, 50, 98, -49, 26, 169, -42,
	-125, -124, -66, -144, -103, -96, -68, -144, 30, 62,
	169, -49, -119, -102, -50, -51, 47, 48, 54, 54,
	-156, 56, -155, -157, -106, -107, 64, -105, -144, 170,
	-144, -68, 169, -116, -66, -120, -144, -42, -24, 169,
	-144, -66, 169, -66, -144, 170, -42, -144, -120, -42,
	170, -36, -33, -35, -32, -34, -145, -144, 171, 28,
	-146, 171, 95, 161, -68, -113, 94, 94, -144, -144,
	169, -120, -121, -144, -69, -83, -153, -153, -153, -153,
	-153, -83, -83, -83, -67, 72, 170, -67, 170, 170,
	170, 72, -71, -70, -77, 169, 100, 71, 170, -67,
	95, -129, -1, -68, 87, -67, -1, -68, -54, 138,
	80, -72, 136, 19, -50, -71, -116, -48, 171, 162,
	170, 171, 171, 169, -116, -49, -51, -67, -117, -107,
	64, -107, 64, 54, 54, -156, -105, 171, 171, -116,
	170, 171, 170, 171, -26, 37, 38, 39, 40, -25,
	-24, 41, -116, 43, 43, 170, 28, 170, 171, 171,
	41, 170, 171, -30, -144, -118, 90, -2, 92, -138,
	91, -2, -2, 94, 94, -42, 170, 170, -83, -83,
	-83, -83, -69, -83, 170, 170, 170, -67, 170, 98,
	-70, 170, 171, -67, 81, 132, 170, 88, 95, 92,
	-114, -136, 91, -57, -59, 135, -76, 37, 38, -51,
	170, -49, -125, -67, -83, -96, -116, 170, -52, -105,
	-109, 61, 62, -105, -107, 64, -107, 64, 54, 171,
	-106, -144, -68, 170, 62, -116, -160, -120, -66, -66,
	170, 171, -67, 170, -144, -144, -68, 28, 129, 28,
	-32, -35, -35, -145, -68, 28, -36, -2, -139, 93,
	-68, 95, 95, -2, -2, 170, 28, 110, 170, 170,
	170, 170, 170, 170, 110, 110, 131, 110, 131, -67,
	-71, 171, 46, 88, -1, -54, -52, 26, -42, 170,
	170, 171, 170, 62, -53, -67, 169, -109, -109, -105,
	-105, -107, 64, -106, 170, 171, 170, 171, 26, -42,
	169, -42, -26, -25, -42, -3, -14, -5, -18, 88,
	87, -15, -16, 90, 130, 129, 129, 170, -131, -130,
	93, 89, 95, -2, 92, 90, 90, 95, 95, 169,
	169, 110, 110, 110, 110, 110, 110, 169, 169, 136,
	169, 136, 170, -67, 169, -128, -53, -71, -83, 26,
	-42, 169, 98, -120, -109, -105, -83, -83, -71, -116,
	95, 161, -68, -113, -68, -145, -146, -9, -68, -3,
	-3, 28, 95, -131, -2, -68, 87, -2, 90, 90,
	-42, -89, -88, -90, 109, 169, 169, 169, 169, 169,
	169, -88, -90, -89, 110, -88, 110, 170, -52, 98,
	170, -71, -116, 19, 170, 170, 170, 170, -3, 92,
	-140, 91, 94, 71, 71, -145, -146, 95, 95, 129,
	88, 95, 92, -138, 91, 170, 170, -52, 45, 48,
	-89, -89, -89, -89, -89, -88, 170, 170, 169, 170,
	169, 170, 19, 170, 26, -42, -3, -141, 93, -68,
	-4, -17, -5, -19, 88, 87, -15, -16, -6, -144,
	-144, 71, 71, -3, 88, -2, 48, -117, 170, 170,
	170, 170, 170, 170, -89, -88, 26, -42, -71, -133,
	-132, 93, 89, 95, -3, 92, 95, 161, -68, -113,
	94, 94, -144, -144, 95, -130, -72, 170, 170, -71,
	95, -133, -3, -68, 87, -3, 90, -4, 92, -142,
	91, -4, -4, 94, 94, -91, 137, 88, 95, 92,
	-140, 91, -4, -143, 93, -68, 95, 95, -4, -4,
	-92, 75, 82, 6, 85, 88, -3, -135, -134, 93,
	89, 95, -4, 92, 90, 90, 95, 95, -94, 82,
	-93, 6, 85, 83, 83, 86, -132, 95, -135, -4,
	-68, 87, -4, 90, 90, 72, 83, 83, 84, 86,
	88, 95, 92, -142, 91, -95, 82, -93, 88, -4,
	84, -134,
}

var yyDef = [...]int{
	-2, -2, 2, 30, 31, 10, 11, 12, 13, 14,
	15, 16, 17, 18, 19, 20, 21, 22, 23, 24,
	25, -2, 27, 0, 412, 46, 47, -2, 0, 192,
	0, 0, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 139, 0, 0, 85, 86, 0, 0, 0, 0,
	0, 0, 0, 165, 0, 171, 0, 0, 241, 242,
	243, -2, 245, 246, 247, 248, 249, 250, 252, 253,
	254, 255, 0, 257, 0, 39, 0, 517, 504, 226,
	227, 228, 229, 230, 0, 0, 0, 233, 0, 0,
	0, 0, 325, 506, 0, 0, 0, 493, 501, 502,
	503, 0, 231, 232, 238, 484, 485, 486, 487, 488,
	489, 490, 491, 492, 0, 0, 0, -2, 239, 310,
	244, 251, 0, 0, 0, 412, 0, 413, 239, 218,
	0, -2, 192, 0, 0, 0, 0, 189, 0, 192,
	194, 0, 0, 310, 0, 0, 0, 76, 504, 499,
	497, 77, 0, 79, 0, 0, 0, 0, 0, 0,
	84, 108, 110, 0, 140, 141, 142, 143, 0, 0,
	0, -2, -2, 239, 239, 155, 167, -2, -2, -2,
	-2, -2, 166, 420, -2, -2, 172, 173, 0, 0,
	239, 0, 0, 0, 192, 239, 250, 0, 0, 37,
	38, 40, 515, 515, 515, 221, 224, 0, 518, 0,
	505, 0, 521, 522, 506, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 304, 305, 0,
	310, 310, 0, 504, 504, 521, 522, 0, 0, 507,
	298, 308, 309, 0, 504, 0, 0, 3, -2, 0,
	0, 310, 0, 470, 416, 0, 176, 202, 0, 0,
	0, 218, 192, 0, 0, 428, 375, 376, 357, 358,
	0, -2, -2, -2, -2, -2, 0, 0, 0, 426,
	194, 196, 0, 191, 494, 193, -2, 386, 389, 390,
	391, 0, 377, 378, 379, 0, 364, 365, 366, 0,
	311, 0, 519, 0, 310, 0, 0, 0, 0, 0,
	0, 111, 116, 124, 138, 0, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, 227, 496, 240, 256, 259, 275, -2,
	0, 0, 0, 0, 0, 0, 516, 0, 0, 517,
	0, 190, 432, 407, 409, 233, 405, 406, 258, 0,
	0, 0, 0, 0, 0, 0, 276, -2, -2, 0,
	0, 0, 0, 0, 289, 0, 260, -2, 0, 0,
	299, 300, 301, 302, 303, 306, 307, 234, 236, 0,
	310, 0, 420, 316, 0, 310, 310, 281, 283, 0,
	0, 0, 0, 506, 148, 310, 0, 235, 237, 454,
	318, 0, 0, -2, 0, 0, 0, 239, 0, 0,
	-2, -2, 201, 264, 270, 268, 269, 233, 178, 194,
	0, 0, 0, 0, 0, 194, 0, 0, 196, 198,
	0, 195, 0, 0, 510, 508, 0, 509, 512, 513,
	514, 387, 0, 508, -2, 380, 0, 0, 319, 0,
	0, 0, 0, 520, 0, 0, 0, 0, 0, 500,
	498, 0, 0, 0, 0, 0, -2, -2, -2, -2,
	-2, -2, -2, -2, 109, 119, -2, 0, 121, 123,
	164, -2, 153, 154, 168, 159, 160, 421, -2, 0,
	0, 41, 42, 0, 412, 51, 52, 53, 28, 29,
	0, 495, 0, 0, 0, 185, 188, 186, 187, 225,
	0, 0, 0, 0, 0, 310, 504, 504, 504, 504,
	310, 310, 310, 284, 285, 0, 0, 290, -2, 294,
	296, 312, 0, 313, 0, 317, 0, 0, 0, 0,
	291, 0, 278, 0, 295, 297, 0, 0, 0, 0,
	454, -2, 0, 0, 471, 411, 417, 0, -2, 177,
	0, 208, 209, 205, 211, 212, 213, 214, 219, 216,
	217, 0, 266, 271, 272, 0, 196, 0, 0, 436,
	192, 440, 0, 233, 429, 0, 239, -2, 358, 0,
	0, 450, 194, 427, 198, 184, 0, 0, 0, 0,
	0, 511, 0, 510, 425, -2, 0, 391, 388, 392,
	381, 239, 0, 0, 418, 0, 430, 89, 101, 0,
	97, 92, 0, 0, 0, 322, 106, 107, 0, 115,
	0, 0, 131, 132, 126, 129, 125, 0, 0, 0,
	112, 0, 0, -2, 239, 0, -2, -2, 0, 0,
	0, 0, 433, 408, 410, 0, 310, 310, 310, 310,
	310, 0, 0, 0, 286, 0, 320, 0, 321, 323,
	324, 0, 0, 262, -2, 0, 146, 0, 326, 0,
	0, 0, 455, 239, 45, 414, 468, 239, 218, 206,
	0, 265, 0, 179, 198, 434, 0, 194, 0, 0,
	367, 310, 0, 0, 0, 451, 200, 199, 197, 393,
	0, 508, 0, 0, 0, 0, 383, 0, 0, 0,
	0, 0, -2, 0, 90, 102, 103, 0, 0, 0,
	99, 0, 0, 0, 0, 113, 0, 0, 0, 0,
	0, 0, 0, 120, 118, 423, 32, 5, -2, 474,
	0, 0, 0, -2, -2, 0, 0, 312, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 287, 314, 0,
	288, 277, 0, 0, 147, 0, 261, 43, 0, -2,
	415, 469, 0, 205, 204, 207, 267, 273, 274, 200,
	0, 438, 441, 439, 0, 0, 0, 0, 218, 398,
	394, 0, 0, 0, 508, 0, 396, 0, 0, 0,
	384, 233, 239, 0, 0, 419, 0, 431, 104, 105,
	101, 0, 98, 93, 94, -2, -2, 0, -2, 0,
	127, 133, 130, 0, -2, 0, 0, 458, 0, -2,
	239, 0, 0, 0, 0, 222, 0, 0, 320, 321,
	322, 323, 324, 326, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 44, 452, 203, 218, 0, 437, 368,
	369, 310, 0, 0, 180, 403, 0, 399, 395, 0,
	401, 397, 0, 385, 371, 310, 373, 310, 0, 448,
	0, 88, 91, 100, 114, 0, 0, 54, 55, 0,
	412, 68, 69, 0, 61, -2, -2, 0, 0, 458,
	-2, 0, 0, 475, -2, 33, 34, 0, 0, 0,
	343, 0, 0, 0, 0, 0, 0, 343, 343, 0,
	343, 0, 315, 0, 200, 453, 182, 435, 0, 0,
	444, 0, 0, 0, 400, 402, 0, 0, 446, 0,
	134, -2, 239, 0, 239, 250, 0, 0, -2, 0,
	0, 0, 0, 0, 459, 239, 50, 472, 35, 36,
	0, 0, 341, 200, 0, 343, 343, 343, 343, 343,
	343, 0, 200, 0, 0, 0, 0, 279, 0, 0,
	370, 442, 0, 181, 404, 372, 374, 0, 7, -2,
	478, 0, -2, 0, 0, 0, 0, 135, 136, -2,
	48, 0, -2, 473, 0, 223, 328, 340, 0, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 343, 338,
	343, 327, 183, 0, 0, 449, 462, 0, -2, 239,
	0, 0, 63, 64, 0, 412, 73, 74, 75, 0,
	0, 0, 0, 0, 49, 456, 0, 344, 329, 330,
	331, 332, 333, 334, 0, 0, 0, 445, 447, 0,
	462, -2, 0, 0, 479, -2, 0, -2, 239, 0,
	-2, -2, 0, 0, 137, 457, 201, 337, 339, 443,
	0, 0, 463, 239, 67, 476, 56, 9, -2, 482,
	0, 0, 0, -2, -2, 342, 0, 65, 0, -2,
	477, 0, 466, 0, -2, 239, 0, 0, 0, 0,
	345, 0, 0, 0, 0, 66, 460, 0, 466, -2,
	0, 0, 483, -2, 57, 58, 0, 0, 0, 0,
	354, 0, 0, 347, 348, 349, 461, 0, 0, 467,
	239, 72, 480, 59, 60, 0, 353, 350, 351, 352,
	70, 0, -2, 481, 0, 346, 0, 356, 71, 464,
	355, 465,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 168, 3, 3, 3, 167, 3, 3,
	169, 170, 165, 164, 171, 163, 172, 166, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 161,
	3, 162,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160,
}

var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:251
		{
			yyVAL.program = nil
			yylex.(*Lexer).program = yyVAL.program
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:256
		{
			yyVAL.program = []Statement{yyDollar[1].statement}
			yylex.(*Lexer).program = yyVAL.program
		}
	case 3:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:261
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
			yylex.(*Lexer).program = yyVAL.program
		}
	case 4:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:268
		{
			yyVAL.program = nil
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:272
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 6:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:278
		{
			yyVAL.program = nil
		}
	case 7:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:282
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 8:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:288
		{
			yyVAL.program = nil
		}
	case 9:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:292
		{
			yyVAL.program = append([]Statement{yyDollar[1].statement}, yyDollar[3].program...)
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:298
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:302
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:306
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:310
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:314
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:318
		{
			yyVAL.statement = yyDollar[1].expression
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:322
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:326
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:330
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:334
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:338
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:342
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:346
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:350
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:354
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:358
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:362
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:366
		{
			yyVAL.statement = ExternalCommand{BaseExpr: NewBaseExpr(yyDollar[1].token), Command: yyDollar[1].token.Literal}
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:372
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:376
		{
			yyVAL.statement = FlowControl{Token: yyDollar[1].token.Token}
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:382
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:386
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 32:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:392
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 33:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:396
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 34:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:400
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 35:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:404
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 36:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:408
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:414
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:418
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:424
		{
			yyVAL.statement = Exit{}
		}
	case 40:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:428
		{
			yyVAL.statement = Exit{Code: value.NewIntegerFromString(yyDollar[2].token.Literal)}
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:434
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:438
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 43:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:444
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 44:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:448
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 45:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:452
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:456
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:460
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 48:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:466
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 49:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:470
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 50:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:474
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:478
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:482
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:486
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:492
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:496
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 56:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:502
		{
			yyVAL.statement = While{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}
		}
	case 57:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:506
		{
			yyVAL.statement = WhileInCursor{Variables: []Variable{yyDollar[2].variable}, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 58:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:510
		{
			yyVAL.statement = WhileInCursor{Variables: yyDollar[2].variables, Cursor: yyDollar[4].identifier, Statements: yyDollar[6].program}
		}
	case 59:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:514
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: []Variable{yyDollar[3].variable}, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 60:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:518
		{
			yyVAL.statement = WhileInCursor{WithDeclaration: true, Variables: yyDollar[3].variables, Cursor: yyDollar[5].identifier, Statements: yyDollar[7].program}
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:524
		{
			yyVAL.statement = Return{Value: NewNullValue()}
		}
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:528
		{
			yyVAL.statement = Return{Value: yyDollar[2].queryexpr}
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:534
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:538
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 65:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:544
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 66:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:548
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 67:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:552
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:556
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:560
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 70:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:566
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, Else: yyDollar[5].elseexpr}
		}
	case 71:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:570
		{
			yyVAL.statement = If{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program, ElseIf: yyDollar[5].elseif, Else: yyDollar[6].elseexpr}
		}
	case 72:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:574
		{
			yyVAL.statement = Case{Value: yyDollar[2].queryexpr, When: yyDollar[3].casewhen, Else: yyDollar[4].caseelse}
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:578
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:582
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:586
		{
			yyVAL.statement = yyDollar[1].statement
		}
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:592
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:596
		{
			yyVAL.statement = VariableDeclaration{Assignments: yyDollar[2].varassigns}
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:600
		{
			yyVAL.statement = yyDollar[1].queryexpr
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:604
		{
			yyVAL.statement = DisposeVariable{Variable: yyDollar[2].variable}
		}
	case 80:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:610
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 81:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:614
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 82:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:618
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].queryexpr}
		}
	case 83:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:622
		{
			yyVAL.statement = SetEnvVar{EnvVar: yyDollar[2].envvar, Value: yyDollar[4].identifier}
		}
	case 84:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:626
		{
			yyVAL.statement = UnsetEnvVar{EnvVar: yyDollar[2].envvar}
		}
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:632
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:636
		{
			yyVAL.statement = TransactionControl{BaseExpr: NewBaseExpr(yyDollar[1].token), Token: yyDollar[1].token.Token}
		}
	case 87:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:642
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 88:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:646
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 89:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:650
		{
			yyVAL.statement = CreateTable{Table: yyDollar[3].identifier, Query: yyDollar[5].queryexpr}
		}
	case 90:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:654
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: []ColumnDefault{yyDollar[5].columndef}, Position: yyDollar[6].expression}
		}
	case 91:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:658
		{
			yyVAL.statement = AddColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].columndefs, Position: yyDollar[8].expression}
		}
	case 92:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:662
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: []QueryExpression{yyDollar[5].queryexpr}}
		}
	case 93:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:666
		{
			yyVAL.statement = DropColumns{Table: yyDollar[3].queryexpr, Columns: yyDollar[6].queryexprs}
		}
	case 94:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:670
		{
			yyVAL.statement = RenameColumn{Table: yyDollar[3].queryexpr, Old: yyDollar[5].queryexpr, New: yyDollar[7].identifier}
		}
	case 95:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:674
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].identifier}
		}
	case 96:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:678
		{
			yyVAL.statement = SetTableAttribute{BaseExpr: NewBaseExpr(yyDollar[1].token), Table: yyDollar[3].queryexpr, Attribute: yyDollar[5].identifier, Value: yyDollar[7].queryexpr}
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:684
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier}
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:688
		{
			yyVAL.columndef = ColumnDefault{Column: yyDollar[1].identifier, Value: yyDollar[3].queryexpr}
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:694
		{
			yyVAL.columndefs = []ColumnDefault{yyDollar[1].columndef}
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:698
		{
			yyVAL.columndefs = append([]ColumnDefault{yyDollar[1].columndef}, yyDollar[3].columndefs...)
		}
	case 101:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:704
		{
			yyVAL.expression = nil
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:708
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:712
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token}
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:716
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 105:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:720
		{
			yyVAL.expression = ColumnPosition{Position: yyDollar[1].token, Column: yyDollar[2].queryexpr}
		}
	case 106:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:726
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 107:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:730
		{
			yyVAL.statement = CursorDeclaration{Cursor: yyDollar[2].identifier, Statement: yyDollar[5].identifier}
		}
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:734
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier}
		}
	case 109:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:738
		{
			yyVAL.statement = OpenCursor{Cursor: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:742
		{
			yyVAL.statement = CloseCursor{Cursor: yyDollar[2].identifier}
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:746
		{
			yyVAL.statement = DisposeCursor{Cursor: yyDollar[3].identifier}
		}
	case 112:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:750
		{
			yyVAL.statement = FetchCursor{Position: yyDollar[2].fetchpos, Cursor: yyDollar[3].identifier, Variables: yyDollar[5].variables}
		}
	case 113:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:756
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs}
		}
	case 114:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:760
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Fields: yyDollar[5].queryexprs, Query: yyDollar[8].queryexpr}
		}
	case 115:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:764
		{
			yyVAL.statement = ViewDeclaration{View: yyDollar[2].identifier, Query: yyDollar[5].queryexpr}
		}
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:768
		{
			yyVAL.statement = DisposeView{View: yyDollar[3].queryexpr}
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:774
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr}
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:778
		{
			yyVAL.replaceval = ReplaceValue{Value: yyDollar[1].queryexpr, Name: yyDollar[3].identifier}
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:784
		{
			yyVAL.replacevals = []ReplaceValue{yyDollar[1].replaceval}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:788
		{
			yyVAL.replacevals = append([]ReplaceValue{yyDollar[1].replaceval}, yyDollar[3].replacevals...)
		}
	case 121:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:794
		{
			yyVAL.statement = StatementPreparation{Name: yyDollar[2].identifier, Statement: value.NewString(yyDollar[4].token.Literal)}
		}
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:798
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier}
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:802
		{
			yyVAL.statement = ExecuteStatement{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[2].identifier, Values: yyDollar[4].replacevals}
		}
	case 124:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:806
		{
			yyVAL.statement = DisposeStatement{Name: yyDollar[3].identifier}
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:812
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:818
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:822
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassign)
		}
	case 128:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:828
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:834
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:838
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:844
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:848
		{
			yyVAL.varassigns = yyDollar[1].varassigns
		}
	case 133:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:852
		{
			yyVAL.varassigns = append(yyDollar[1].varassigns, yyDollar[3].varassigns...)
		}
	case 134:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:858
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Statements: yyDollar[8].program}
		}
	case 135:
		yyDollar = yyS[yypt-10 : yypt+1]
//line lib/parser/parser.y:862
		{
			yyVAL.statement = FunctionDeclaration{Name: yyDollar[2].identifier, Parameters: yyDollar[5].varassigns, Statements: yyDollar[9].program}
		}
	case 136:
		yyDollar = yyS[yypt-10 : yypt+1]
//line lib/parser/parser.y:866
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Statements: yyDollar[9].program}
		}
	case 137:
		yyDollar = yyS[yypt-12 : yypt+1]
//line lib/parser/parser.y:870
		{
			yyVAL.statement = AggregateDeclaration{Name: yyDollar[2].identifier, Cursor: yyDollar[5].identifier, Parameters: yyDollar[7].varassigns, Statements: yyDollar[11].program}
		}
	case 138:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:874
		{
			yyVAL.statement = DisposeFunction{Name: yyDollar[3].identifier}
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:880
		{
			yyVAL.fetchpos = FetchPosition{}
		}
	case 140:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:884
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:888
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 142:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:892
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:896
		{
			yyVAL.fetchpos = FetchPosition{Position: yyDollar[1].token}
		}
	case 144:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:900
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 145:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:904
		{
			yyVAL.fetchpos = FetchPosition{BaseExpr: NewBaseExpr(yyDollar[1].token), Position: yyDollar[1].token, Number: yyDollar[2].queryexpr}
		}
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:910
		{
			yyVAL.queryexpr = CursorStatus{Cursor: yyDollar[2].identifier, Negation: yyDollar[4].token, Type: yyDollar[5].token}
		}
	case 147:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:914
		{
			yyVAL.queryexpr = CursorStatus{Cursor: yyDollar[2].identifier, Negation: yyDollar[4].token, Type: yyDollar[6].token}
		}
	case 148:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:918
		{
			yyVAL.queryexpr = CursorAttrebute{Cursor: yyDollar[2].identifier, Attrebute: yyDollar[3].token}
		}
	case 149:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:924
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 150:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:928
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 151:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:932
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].identifier}
		}
	case 152:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:936
		{
			yyVAL.statement = SetFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag, Value: yyDollar[4].queryexpr}
		}
	case 153:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:940
		{
			yyVAL.statement = AddFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 154:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:944
		{
			yyVAL.statement = RemoveFlagElement{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[4].flag, Value: yyDollar[2].queryexpr}
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:948
		{
			yyVAL.statement = ShowFlag{BaseExpr: NewBaseExpr(yyDollar[1].token), Flag: yyDollar[2].flag}
		}
	case 156:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:952
		{
			yyVAL.statement = Echo{Value: yyDollar[2].queryexpr}
		}
	case 157:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:956
		{
			yyVAL.statement = Print{Value: yyDollar[2].queryexpr}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:960
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:964
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:968
		{
			yyVAL.statement = Printf{BaseExpr: NewBaseExpr(yyDollar[1].token), Format: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 161:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:972
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].identifier}
		}
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:976
		{
			yyVAL.statement = Source{BaseExpr: NewBaseExpr(yyDollar[1].token), FilePath: yyDollar[2].queryexpr}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:980
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr}
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:984
		{
			yyVAL.statement = Execute{BaseExpr: NewBaseExpr(yyDollar[1].token), Statements: yyDollar[2].queryexpr, Values: yyDollar[4].queryexprs}
		}
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:988
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:992
		{
			yyVAL.statement = Syntax{BaseExpr: NewBaseExpr(yyDollar[1].token), Keywords: yyDollar[2].queryexprs}
		}
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:996
		{
			yyVAL.statement = ShowObjects{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 168:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1000
		{
			yyVAL.statement = ShowFields{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier, Table: yyDollar[4].queryexpr}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1004
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].identifier}
		}
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1008
		{
			yyVAL.statement = Chdir{BaseExpr: NewBaseExpr(yyDollar[1].token), DirPath: yyDollar[2].queryexpr}
		}
	case 171:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1012
		{
			yyVAL.statement = Pwd{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1016
		{
			yyVAL.statement = Reload{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[2].identifier}
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1022
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier}
		}
	case 174:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1026
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[3].queryexpr}
		}
	case 175:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1030
		{
			yyVAL.statement = Trigger{BaseExpr: NewBaseExpr(yyDollar[1].token), Event: yyDollar[2].identifier, Message: yyDollar[4].queryexpr, Code: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 176:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1036
		{
			yyVAL.queryexpr = SelectQuery{
				SelectEntity:  yyDollar[1].queryexpr,
				OrderByClause: yyDollar[2].queryexpr,
				LimitClause:   yyDollar[3].queryexpr,
			}
		}
	case 177:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1044
		{
			yyVAL.queryexpr = SelectQuery{
				SelectEntity:  yyDollar[1].queryexpr,
				OrderByClause: yyDollar[2].queryexpr,
				LimitClause:   yyDollar[3].queryexpr,
				Context:       yyDollar[5].token,
			}
		}
	case 178:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1053
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
			}
		}
	case 179:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1062
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause:    yyDollar[1].queryexpr,
				SelectEntity:  yyDollar[2].queryexpr,
				OrderByClause: yyDollar[3].queryexpr,
				LimitClause:   yyDollar[4].queryexpr,
				Context:       yyDollar[6].token,
			}
		}
	case 180:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:1074
		{
			yyVAL.queryexpr = SelectQuery{
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[1].queryexpr,
					IntoClause:    yyDollar[2].queryexpr,
					FromClause:    yyDollar[3].queryexpr,
					WhereClause:   yyDollar[4].queryexpr,
					GroupByClause: yyDollar[5].queryexpr,
					HavingClause:  yyDollar[6].queryexpr,
				},
				OrderByClause: yyDollar[7].queryexpr,
				LimitClause:   yyDollar[8].queryexpr,
			}
		}
	case 181:
		yyDollar = yyS[yypt-10 : yypt+1]
//line lib/parser/parser.y:1089
		{
			yyVAL.queryexpr = SelectQuery{
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[1].queryexpr,
					IntoClause:    yyDollar[2].queryexpr,
					FromClause:    yyDollar[3].queryexpr,
					WhereClause:   yyDollar[4].queryexpr,
					GroupByClause: yyDollar[5].queryexpr,
					HavingClause:  yyDollar[6].queryexpr,
				},
				OrderByClause: yyDollar[7].queryexpr,
				LimitClause:   yyDollar[8].queryexpr,
				Context:       yyDollar[10].token,
			}
		}
	case 182:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1105
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause: yyDollar[1].queryexpr,
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[2].queryexpr,
					IntoClause:    yyDollar[3].queryexpr,
					FromClause:    yyDollar[4].queryexpr,
					WhereClause:   yyDollar[5].queryexpr,
					GroupByClause: yyDollar[6].queryexpr,
					HavingClause:  yyDollar[7].queryexpr,
				},
				OrderByClause: yyDollar[8].queryexpr,
				LimitClause:   yyDollar[9].queryexpr,
			}
		}
	case 183:
		yyDollar = yyS[yypt-11 : yypt+1]
//line lib/parser/parser.y:1121
		{
			yyVAL.queryexpr = SelectQuery{
				WithClause: yyDollar[1].queryexpr,
				SelectEntity: SelectEntity{
					SelectClause:  yyDollar[2].queryexpr,
					IntoClause:    yyDollar[3].queryexpr,
					FromClause:    yyDollar[4].queryexpr,
					WhereClause:   yyDollar[5].queryexpr,
					GroupByClause: yyDollar[6].queryexpr,
					HavingClause:  yyDollar[7].queryexpr,
				},
				OrderByClause: yyDollar[8].queryexpr,
				LimitClause:   yyDollar[9].queryexpr,
				Context:       yyDollar[11].token,
			}
		}
	case 184:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1140
		{
			yyVAL.queryexpr = SelectEntity{
				SelectClause:  yyDollar[1].queryexpr,
				FromClause:    yyDollar[2].queryexpr,
				WhereClause:   yyDollar[3].queryexpr,
				GroupByClause: yyDollar[4].queryexpr,
				HavingClause:  yyDollar[5].queryexpr,
			}
		}
	case 185:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1150
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1159
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 187:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1168
		{
			yyVAL.queryexpr = SelectSet{
				LHS:      yyDollar[1].queryexpr,
				Operator: yyDollar[2].token,
				All:      yyDollar[3].token,
				RHS:      yyDollar[4].queryexpr,
			}
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1179
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1183
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1189
		{
			yyVAL.queryexpr = SelectClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Distinct: yyDollar[2].token, Fields: yyDollar[3].queryexprs}
		}
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1195
		{
			yyVAL.queryexpr = IntoClause{Variables: yyDollar[2].variables}
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1201
		{
			yyVAL.queryexpr = nil
		}
	case 193:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1205
		{
			yyVAL.queryexpr = FromClause{Tables: yyDollar[2].queryexprs}
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1211
		{
			yyVAL.queryexpr = nil
		}
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1215
		{
			yyVAL.queryexpr = WhereClause{Filter: yyDollar[2].queryexpr}
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1221
		{
			yyVAL.queryexpr = nil
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1225
		{
			yyVAL.queryexpr = GroupByClause{Items: yyDollar[3].queryexprs}
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1231
		{
			yyVAL.queryexpr = nil
		}
	case 199:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1235
		{
			yyVAL.queryexpr = HavingClause{Filter: yyDollar[2].queryexpr}
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1241
		{
			yyVAL.queryexpr = nil
		}
	case 201:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1245
		{
			yyVAL.queryexpr = OrderByClause{Items: yyDollar[3].queryexprs}
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1251
		{
			if yyDollar[1].queryexpr == nil {
				yyVAL.queryexpr = yyDollar[1].queryexpr
			} else {
				yyVAL.queryexpr = LimitClause{BaseExpr: yyDollar[1].queryexpr.(OffsetClause).BaseExpr, OffsetClause: yyDollar[1].queryexpr}
			}
		}
	case 203:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1259
		{
			var base *BaseExpr
			if yyDollar[1].queryexpr == nil {
				base = NewBaseExpr(yyDollar[2].token)
			} else {
				base = yyDollar[1].queryexpr.(OffsetClause).BaseExpr
			}
			yyVAL.queryexpr = LimitClause{BaseExpr: base, Type: yyDollar[2].token, Position: yyDollar[3].token, Value: yyDollar[4].queryexpr, Unit: yyDollar[5].token, Restriction: yyDollar[6].token, OffsetClause: yyDollar[1].queryexpr}
		}
	case 204:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1269
		{
			yyVAL.queryexpr = LimitClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, Value: yyDollar[2].queryexpr, Unit: yyDollar[3].token, Restriction: yyDollar[4].token, OffsetClause: yyDollar[5].queryexpr}
		}
	case 205:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1275
		{
			yyVAL.token = Token{}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1279
		{
			yyVAL.token = yyDollar[1].token
		}
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1283
		{
			yyVAL.token = yyDollar[2].token
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1289
		{
			yyVAL.token = yyDollar[1].token
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1293
		{
			yyVAL.token = yyDollar[1].token
		}
	case 210:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1299
		{
			yyVAL.token = Token{}
		}
	case 211:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1303
		{
			yyVAL.token = yyDollar[1].token
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 214:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1317
		{
			yyVAL.token = yyDollar[1].token
		}
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1323
		{
			yyVAL.token = Token{}
		}
	case 216:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1331
		{
			yyVAL.token = yyDollar[1].token
		}
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1337
		{
			yyVAL.queryexpr = nil
		}
	case 219:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1341
		{
			yyVAL.queryexpr = OffsetClause{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: yyDollar[2].queryexpr, Unit: yyDollar[3].token}
		}
	case 220:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1347
		{
			yyVAL.queryexpr = nil
		}
	case 221:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1351
		{
			yyVAL.queryexpr = WithClause{InlineTables: yyDollar[2].queryexprs}
		}
	case 222:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1357
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 223:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1361
		{
			yyVAL.queryexpr = InlineTable{Recursive: yyDollar[1].token, Name: yyDollar[2].identifier, Fields: yyDollar[4].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1367
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1371
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1377
		{
			yyVAL.queryexpr = NewStringValue(yyDollar[1].token.Literal)
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1381
		{
			i, err := strconv.ParseInt(yyDollar[1].token.Literal, 10, 64)
			if err != nil {
				yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
			} else {
				iv := NewIntegerValue(i)
				iv.Literal = yyDollar[1].token.Literal
				yyVAL.queryexpr = iv
			}
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1392
		{
			yyVAL.queryexpr = NewFloatValueFromString(yyDollar[1].token.Literal)
		}
	case 229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1396
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1400
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 231:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1406
		{
			yyVAL.queryexpr = NewTernaryValueFromString(yyDollar[1].token.Literal)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1412
		{
			yyVAL.queryexpr = NewNullValue()
		}
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1418
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, Column: yyDollar[1].identifier}
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1422
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].identifier}
		}
	case 235:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1426
		{
			yyVAL.queryexpr = FieldReference{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Column: yyDollar[3].identifier}
		}
	case 236:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1430
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1434
		{
			yyVAL.queryexpr = ColumnNumber{BaseExpr: NewBaseExpr(yyDollar[1].token), View: Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal}, Number: value.NewIntegerFromString(yyDollar[3].token.Literal)}
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1440
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1444
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1448
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1454
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1458
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1462
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1466
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1470
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1474
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1478
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1482
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1486
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1490
		{
			yyVAL.queryexpr = yyDollar[1].variable
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1494
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1498
		{
			yyVAL.queryexpr = yyDollar[1].envvar
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1502
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1506
		{
			yyVAL.queryexpr = yyDollar[1].flag
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1510
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1514
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1518
		{
			name := ""
			if yyDollar[1].token.Literal[0] == ':' {
				name = yyDollar[1].token.Literal[1:]
			}
			yyVAL.queryexpr = Placeholder{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Ordinal: yyDollar[1].token.HolderOrdinal, Name: name}
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1528
		{
			yyVAL.queryexpr = AllColumns{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1534
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: ValueList{Values: yyDollar[2].queryexprs}}
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1538
		{
			yyVAL.queryexpr = RowValue{BaseExpr: yyDollar[1].queryexpr.GetBaseExpr(), Value: yyDollar[1].queryexpr}
		}
	case 261:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1542
		{
			yyVAL.queryexpr = RowValue{BaseExpr: NewBaseExpr(yyDollar[1].token), Value: JsonQuery{JsonQuery: yyDollar[1].token, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}}
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1548
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1552
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1558
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1562
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 266:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1568
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token}
		}
	case 267:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1572
		{
			yyVAL.queryexpr = OrderItem{Value: yyDollar[1].queryexpr, Direction: yyDollar[2].token, NullsPosition: yyDollar[4].token}
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1578
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1582
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 270:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1588
		{
			yyVAL.token = Token{}
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1592
		{
			yyVAL.token = yyDollar[1].token
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1596
		{
			yyVAL.token = yyDollar[1].token
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1602
		{
			yyVAL.token = yyDollar[1].token
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1606
		{
			yyVAL.token = yyDollar[1].token
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1612
		{
			yyVAL.queryexpr = Subquery{BaseExpr: NewBaseExpr(yyDollar[1].token), Query: yyDollar[2].queryexpr.(SelectQuery)}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1618
		{
			var item1 []QueryExpression
			var item2 []QueryExpression

			c1, ok := yyDollar[1].queryexpr.(Concat)
			if ok {
				item1 = c1.Items
			} else {
				item1 = []QueryExpression{yyDollar[1].queryexpr}
			}

			c2, ok := yyDollar[3].queryexpr.(Concat)
			if ok {
				item2 = c2.Items
			} else {
				item2 = []QueryExpression{yyDollar[3].queryexpr}
			}

			yyVAL.queryexpr = Concat{Items: append(item1, item2...)}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1641
		{
			yyVAL.queryexpr = RowValueList{RowValues: yyDollar[2].queryexprs}
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1645
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 279:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1649
		{
			yyVAL.queryexpr = JsonQuery{BaseExpr: NewBaseExpr(yyDollar[1].token), JsonQuery: yyDollar[1].token, Query: yyDollar[3].queryexpr, JsonText: yyDollar[5].queryexpr}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1655
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1659
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1663
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 283:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1667
		{
			yyVAL.queryexpr = Comparison{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1671
		{
			yyVAL.queryexpr = Is{LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1675
		{
			yyVAL.queryexpr = Is{LHS: yyDollar[1].queryexpr, RHS: yyDollar[4].queryexpr, Negation: yyDollar[3].token}
		}
	case 286:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1679
		{
			yyVAL.queryexpr = Between{LHS: yyDollar[1].queryexpr, Low: yyDollar[3].queryexpr, High: yyDollar[5].queryexpr}
		}
	case 287:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1683
		{
			yyVAL.queryexpr = Between{LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 288:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1687
		{
			yyVAL.queryexpr = Between{LHS: yyDollar[1].queryexpr, Low: yyDollar[4].queryexpr, High: yyDollar[6].queryexpr, Negation: yyDollar[2].token}
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1691
		{
			yyVAL.queryexpr = In{LHS: yyDollar[1].queryexpr, Values: yyDollar[3].queryexpr}
		}
	case 290:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1695
		{
			yyVAL.queryexpr = In{LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 291:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1699
		{
			yyVAL.queryexpr = In{LHS: yyDollar[1].queryexpr, Values: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1703
		{
			yyVAL.queryexpr = Like{LHS: yyDollar[1].queryexpr, Pattern: yyDollar[3].queryexpr}
		}
	case 293:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1707
		{
			yyVAL.queryexpr = Like{LHS: yyDollar[1].queryexpr, Pattern: yyDollar[4].queryexpr, Negation: yyDollar[2].token}
		}
	case 294:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1711
		{
			yyVAL.queryexpr = Any{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 295:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1715
		{
			yyVAL.queryexpr = Any{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 296:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1719
		{
			yyVAL.queryexpr = All{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 297:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1723
		{
			yyVAL.queryexpr = All{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, Values: yyDollar[4].queryexpr}
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1727
		{
			yyVAL.queryexpr = Exists{Query: yyDollar[2].queryexpr.(Subquery)}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1733
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 300:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1737
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1741
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1745
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1749
		{
			yyVAL.queryexpr = Arithmetic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1753
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 305:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1757
		{
			yyVAL.queryexpr = UnaryArithmetic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1763
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1767
		{
			yyVAL.queryexpr = Logic{LHS: yyDollar[1].queryexpr, Operator: yyDollar[2].token, RHS: yyDollar[3].queryexpr}
		}
	case 308:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1771
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1775
		{
			yyVAL.queryexpr = UnaryLogic{Operand: yyDollar[2].queryexpr, Operator: yyDollar[1].token}
		}
	case 310:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1781
		{
			yyVAL.queryexprs = nil
		}
	case 311:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1785
		{
			yyVAL.queryexprs = yyDollar[1].queryexprs
		}
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1791
		{
			yyVAL.queryexpr = Function{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs}
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1795
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 314:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:1799
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: []QueryExpression{yyDollar[3].queryexpr, yyDollar[5].queryexpr}, From: yyDollar[4].token}
		}
	case 315:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:1803
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: []QueryExpression{yyDollar[3].queryexpr, yyDollar[5].queryexpr, yyDollar[7].queryexpr}, From: yyDollar[4].token, For: yyDollar[6].token}
		}
	case 316:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1807
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 317:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1811
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1815
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 319:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:1819
		{
			yyVAL.queryexpr = Function{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs}
		}
	case 320:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1826
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 321:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1830
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 322:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1834
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 323:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1838
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 324:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1842
		{
			yyVAL.queryexpr = AggregateFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1846
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 326:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1852
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs}
		}
	case 327:
		yyDollar = yyS[yypt-10 : yypt+1]
//line lib/parser/parser.y:1856
		{
			yyVAL.queryexpr = ListFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, OrderBy: yyDollar[9].queryexpr}
		}
	case 328:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:1862
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 329:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1866
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: yyDollar[1].identifier.BaseExpr, Name: yyDollar[1].identifier.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 330:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1870
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 331:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1874
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 332:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1878
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 333:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1882
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: []QueryExpression{yyDollar[4].queryexpr}, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 334:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:1886
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Distinct: yyDollar[3].token, Args: yyDollar[4].queryexprs, AnalyticClause: yyDollar[8].queryexpr.(AnalyticClause)}
		}
	case 335:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:1890
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 336:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:1894
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 337:
		yyDollar = yyS[yypt-10 : yypt+1]
//line lib/parser/parser.y:1898
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreType: yyDollar[6].token, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 338:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:1902
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, AnalyticClause: yyDollar[7].queryexpr.(AnalyticClause)}
		}
	case 339:
		yyDollar = yyS[yypt-10 : yypt+1]
//line lib/parser/parser.y:1906
		{
			yyVAL.queryexpr = AnalyticFunction{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Args: yyDollar[3].queryexprs, IgnoreType: yyDollar[6].token, AnalyticClause: yyDollar[9].queryexpr.(AnalyticClause)}
		}
	case 340:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1912
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: yyDollar[2].queryexpr}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1918
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 342:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1922
		{
			yyVAL.queryexpr = AnalyticClause{PartitionClause: yyDollar[1].queryexpr, OrderByClause: OrderByClause{Items: yyDollar[4].queryexprs}, WindowingClause: yyDollar[5].queryexpr}
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:1928
		{
			yyVAL.queryexpr = nil
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:1932
		{
			yyVAL.queryexpr = PartitionClause{Values: yyDollar[3].queryexprs}
		}
	case 345:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1938
		{
			yyVAL.queryexpr = WindowingClause{FrameLow: yyDollar[2].queryexpr}
		}
	case 346:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:1942
		{
			yyVAL.queryexpr = WindowingClause{FrameLow: yyDollar[3].queryexpr, FrameHigh: yyDollar[5].queryexpr}
		}
	case 347:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1948
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Unbounded: yyDollar[1].token}
		}
	case 348:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1952
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Offset: i}
		}
	case 349:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1957
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token}
		}
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1963
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Offset: i}
		}
	case 351:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1968
		{
			i, _ := strconv.Atoi(yyDollar[1].token.Literal)
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Offset: i}
		}
	case 352:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1973
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[1].token}
		}
	case 353:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1979
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Unbounded: yyDollar[1].token}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1983
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:1989
		{
			yyVAL.queryexpr = WindowFramePosition{Direction: yyDollar[2].token, Unbounded: yyDollar[1].token}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1993
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:1999
		{
			yyVAL.queryexpr = yyDollar[1].identifier
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2003
		{
			yyVAL.queryexpr = Stdin{BaseExpr: NewBaseExpr(yyDollar[1].token)}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2009
		{
			yyVAL.token = yyDollar[1].token
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2013
		{
			yyVAL.token = yyDollar[1].token
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2017
		{
			yyVAL.token = yyDollar[1].token
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2021
		{
			yyVAL.token = yyDollar[1].token
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2025
		{
			yyVAL.token = yyDollar[1].token
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2031
		{
			yyVAL.token = yyDollar[1].token
		}
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2035
		{
			yyVAL.token = yyDollar[1].token
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2039
		{
			yyVAL.token = yyDollar[1].token
		}
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2045
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, Path: yyDollar[3].queryexpr, Args: nil}
		}
	case 368:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2049
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, Path: yyDollar[3].queryexpr, Args: yyDollar[5].queryexprs}
		}
	case 369:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2053
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: nil}
		}
	case 370:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:2057
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: yyDollar[7].queryexprs}
		}
	case 371:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2063
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: nil}
		}
	case 372:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:2067
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].identifier, Args: yyDollar[7].queryexprs}
		}
	case 373:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2071
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: nil}
		}
	case 374:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:2075
		{
			yyVAL.queryexpr = TableObject{BaseExpr: NewBaseExpr(yyDollar[1].token), Type: yyDollar[1].token, FormatElement: yyDollar[3].queryexpr, Path: yyDollar[5].queryexpr, Args: yyDollar[7].queryexprs}
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2081
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2085
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2091
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 378:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2095
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2101
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr}
		}
	case 380:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2105
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2109
		{
			yyVAL.table = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token, Alias: yyDollar[3].identifier}
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2115
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2119
		{
			yyDollar[2].table.Lateral = yyDollar[1].token
			yyDollar[2].table.BaseExpr = NewBaseExpr(yyDollar[1].token)
			yyVAL.queryexprs = []QueryExpression{yyDollar[2].table}
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2125
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].table}, yyDollar[3].queryexprs...)
		}
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2129
		{
			yyDollar[2].table.Lateral = yyDollar[1].token
			yyDollar[2].table.BaseExpr = NewBaseExpr(yyDollar[1].token)
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[2].table}, yyDollar[4].queryexprs...)
		}
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2137
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2141
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, Alias: yyDollar[2].identifier}
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2145
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr, As: yyDollar[2].token, Alias: yyDollar[3].identifier}
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2149
		{
			yyVAL.queryexpr = Table{Object: yyDollar[1].queryexpr}
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2153
		{
			yyVAL.queryexpr = Table{Object: Dual{}}
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2157
		{
			yyVAL.queryexpr = yyDollar[1].table
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2161
		{
			yyVAL.queryexpr = Parentheses{Expr: yyDollar[2].queryexpr}
		}
	case 393:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2167
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 394:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2171
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[4].queryexpr, JoinType: yyDollar[2].token, Condition: yyDollar[5].queryexpr}
		}
	case 395:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2175
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 396:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2179
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].queryexpr, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 397:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2183
		{
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].queryexpr, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 398:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2187
		{
			yyDollar[5].table.Lateral = yyDollar[4].token
			yyDollar[5].table.BaseExpr = NewBaseExpr(yyDollar[4].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].table, JoinType: yyDollar[2].token, Condition: nil}
		}
	case 399:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2193
		{
			yyDollar[5].table.Lateral = yyDollar[4].token
			yyDollar[5].table.BaseExpr = NewBaseExpr(yyDollar[4].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[5].table, JoinType: yyDollar[2].token, Condition: yyDollar[6].queryexpr}
		}
	case 400:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:2199
		{
			yyDollar[6].table.Lateral = yyDollar[5].token
			yyDollar[6].table.BaseExpr = NewBaseExpr(yyDollar[5].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].table, JoinType: yyDollar[3].token, Direction: yyDollar[2].token, Condition: yyDollar[7].queryexpr}
		}
	case 401:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2205
		{
			yyDollar[6].table.Lateral = yyDollar[5].token
			yyDollar[6].table.BaseExpr = NewBaseExpr(yyDollar[5].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[6].table, JoinType: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 402:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:2211
		{
			yyDollar[7].table.Lateral = yyDollar[6].token
			yyDollar[7].table.BaseExpr = NewBaseExpr(yyDollar[6].token)
			yyVAL.queryexpr = Join{Table: yyDollar[1].queryexpr, JoinTable: yyDollar[7].table, JoinType: yyDollar[4].token, Direction: yyDollar[3].token, Natural: yyDollar[2].token}
		}
	case 403:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2219
		{
			yyVAL.queryexpr = JoinCondition{On: yyDollar[2].queryexpr}
		}
	case 404:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2223
		{
			yyVAL.queryexpr = JoinCondition{Using: yyDollar[3].queryexprs}
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2229
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2233
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2239
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2243
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr, As: yyDollar[2].token, Alias: yyDollar[3].identifier}
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2247
		{
			yyVAL.queryexpr = Field{Object: yyDollar[1].queryexpr}
		}
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2251
		{
			yyVAL.queryexpr = Field{Object: FieldReference{BaseExpr: yyDollar[1].identifier.BaseExpr, View: yyDollar[1].identifier, Column: yyDollar[3].queryexpr}}
		}
	case 411:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2257
		{
			yyVAL.queryexpr = CaseExpr{Value: yyDollar[2].queryexpr, When: yyDollar[3].queryexprs, Else: yyDollar[4].queryexpr}
		}
	case 412:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2263
		{
			yyVAL.queryexpr = nil
		}
	case 413:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2267
		{
			yyVAL.queryexpr = yyDollar[1].queryexpr
		}
	case 414:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2273
		{
			yyVAL.queryexprs = []QueryExpression{CaseExprWhen{Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}
		}
	case 415:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2277
		{
			yyVAL.queryexprs = append([]QueryExpression{CaseExprWhen{Condition: yyDollar[2].queryexpr, Result: yyDollar[4].queryexpr}}, yyDollar[5].queryexprs...)
		}
	case 416:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2283
		{
			yyVAL.queryexpr = nil
		}
	case 417:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2287
		{
			yyVAL.queryexpr = CaseExprElse{Result: yyDollar[2].queryexpr}
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2293
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2297
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2303
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2307
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2313
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2317
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2323
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 425:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2327
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2333
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2337
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2343
		{
			yyVAL.queryexprs = []QueryExpression{Table{Object: yyDollar[1].queryexpr}}
		}
	case 429:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2347
		{
			yyVAL.queryexprs = append([]QueryExpression{Table{Object: yyDollar[1].queryexpr}}, yyDollar[3].queryexprs...)
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2353
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].identifier}
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2357
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].identifier}, yyDollar[3].queryexprs...)
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2363
		{
			yyVAL.queryexprs = []QueryExpression{yyDollar[1].queryexpr}
		}
	case 433:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2367
		{
			yyVAL.queryexprs = append([]QueryExpression{yyDollar[1].queryexpr}, yyDollar[3].queryexprs...)
		}
	case 434:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2373
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, ValuesList: yyDollar[6].queryexprs}
		}
	case 435:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:2377
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 436:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2381
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Query: yyDollar[5].queryexpr.(SelectQuery)}
		}
	case 437:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:2385
		{
			yyVAL.expression = InsertQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 438:
		yyDollar = yyS[yypt-7 : yypt+1]
//line lib/parser/parser.y:2391
		{
			yyVAL.expression = UpdateQuery{WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, SetList: yyDollar[5].updatesets, FromClause: yyDollar[6].queryexpr, WhereClause: yyDollar[7].queryexpr}
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2397
		{
			yyVAL.updateset = UpdateSet{Field: yyDollar[1].queryexpr, Value: yyDollar[3].queryexpr}
		}
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2403
		{
			yyVAL.updatesets = []UpdateSet{yyDollar[1].updateset}
		}
	case 441:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2407
		{
			yyVAL.updatesets = append([]UpdateSet{yyDollar[1].updateset}, yyDollar[3].updatesets...)
		}
	case 442:
		yyDollar = yyS[yypt-10 : yypt+1]
//line lib/parser/parser.y:2413
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Keys: yyDollar[7].queryexprs, ValuesList: yyDollar[10].queryexprs}
		}
	case 443:
		yyDollar = yyS[yypt-13 : yypt+1]
//line lib/parser/parser.y:2417
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Keys: yyDollar[10].queryexprs, ValuesList: yyDollar[13].queryexprs}
		}
	case 444:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:2421
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Keys: yyDollar[7].queryexprs, Query: yyDollar[9].queryexpr.(SelectQuery)}
		}
	case 445:
		yyDollar = yyS[yypt-12 : yypt+1]
//line lib/parser/parser.y:2425
		{
			yyVAL.expression = ReplaceQuery{WithClause: yyDollar[1].queryexpr, Table: Table{Object: yyDollar[4].queryexpr}, Fields: yyDollar[6].queryexprs, Keys: yyDollar[10].queryexprs, Query: yyDollar[12].queryexpr.(SelectQuery)}
		}
	case 446:
		yyDollar = yyS[yypt-9 : yypt+1]
//line lib/parser/parser.y:2429
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Keys: yyDollar[6].queryexprs, ValuesList: yyDollar[9].queryexprs}
		}
	case 447:
		yyDollar = yyS[yypt-12 : yypt+1]
//line lib/parser/parser.y:2433
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Fields: yyDollar[5].queryexprs, Keys: yyDollar[9].queryexprs, ValuesList: yyDollar[12].queryexprs}
		}
	case 448:
		yyDollar = yyS[yypt-8 : yypt+1]
//line lib/parser/parser.y:2437
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Keys: yyDollar[6].queryexprs, Query: yyDollar[8].queryexpr.(SelectQuery)}
		}
	case 449:
		yyDollar = yyS[yypt-11 : yypt+1]
//line lib/parser/parser.y:2441
		{
			yyVAL.expression = ReplaceQuery{Table: Table{Object: yyDollar[3].queryexpr}, Fields: yyDollar[5].queryexprs, Keys: yyDollar[9].queryexprs, Query: yyDollar[11].queryexpr.(SelectQuery)}
		}
	case 450:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2447
		{
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, FromClause: FromClause{Tables: yyDollar[4].queryexprs}, WhereClause: yyDollar[5].queryexpr}
		}
	case 451:
		yyDollar = yyS[yypt-6 : yypt+1]
//line lib/parser/parser.y:2451
		{
			yyVAL.expression = DeleteQuery{BaseExpr: NewBaseExpr(yyDollar[2].token), WithClause: yyDollar[1].queryexpr, Tables: yyDollar[3].queryexprs, FromClause: FromClause{Tables: yyDollar[5].queryexprs}, WhereClause: yyDollar[6].queryexpr}
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2457
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 453:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2461
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 454:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2467
		{
			yyVAL.elseexpr = Else{}
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2471
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 456:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2477
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 457:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2481
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 458:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2487
		{
			yyVAL.elseexpr = Else{}
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2491
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2497
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 461:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2501
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 462:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2507
		{
			yyVAL.elseexpr = Else{}
		}
	case 463:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2511
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2517
		{
			yyVAL.elseif = []ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 465:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2521
		{
			yyVAL.elseif = append([]ElseIf{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].elseif...)
		}
	case 466:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2527
		{
			yyVAL.elseexpr = Else{}
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2531
		{
			yyVAL.elseexpr = Else{Statements: yyDollar[2].program}
		}
	case 468:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2537
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 469:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2541
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2547
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2551
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 472:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2557
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 473:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2561
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 474:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2567
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2571
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 476:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2577
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 477:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2581
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 478:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2587
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 479:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2591
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 480:
		yyDollar = yyS[yypt-4 : yypt+1]
//line lib/parser/parser.y:2597
		{
			yyVAL.casewhen = []CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}
		}
	case 481:
		yyDollar = yyS[yypt-5 : yypt+1]
//line lib/parser/parser.y:2601
		{
			yyVAL.casewhen = append([]CaseWhen{{Condition: yyDollar[2].queryexpr, Statements: yyDollar[4].program}}, yyDollar[5].casewhen...)
		}
	case 482:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2607
		{
			yyVAL.caseelse = CaseElse{}
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
//line lib/parser/parser.y:2611
		{
			yyVAL.caseelse = CaseElse{Statements: yyDollar[2].program}
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2617
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 485:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2621
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2625
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2629
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2633
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 489:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2637
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2641
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2645
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2649
		{
			yyVAL.identifier = Identifier{BaseExpr: NewBaseExpr(yyDollar[1].token), Literal: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2655
		{
			yyVAL.variable = Variable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2661
		{
			yyVAL.variables = []Variable{yyDollar[1].variable}
		}
	case 495:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2665
		{
			yyVAL.variables = append([]Variable{yyDollar[1].variable}, yyDollar[3].variables...)
		}
	case 496:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2671
		{
			yyVAL.queryexpr = VariableSubstitution{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2677
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable}
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2681
		{
			yyVAL.varassign = VariableAssignment{Variable: yyDollar[1].variable, Value: yyDollar[3].queryexpr}
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2687
		{
			yyVAL.varassigns = []VariableAssignment{yyDollar[1].varassign}
		}
	case 500:
		yyDollar = yyS[yypt-3 : yypt+1]
//line lib/parser/parser.y:2691
		{
			yyVAL.varassigns = append([]VariableAssignment{yyDollar[1].varassign}, yyDollar[3].varassigns...)
		}
	case 501:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2697
		{
			yyVAL.envvar = EnvironmentVariable{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal, Quoted: yyDollar[1].token.Quoted}
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2703
		{
			yyVAL.queryexpr = RuntimeInformation{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2709
		{
			yyVAL.flag = Flag{BaseExpr: NewBaseExpr(yyDollar[1].token), Name: yyDollar[1].token.Literal}
		}
	case 504:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2715
		{
			yyVAL.token = Token{}
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2719
		{
			yyVAL.token = yyDollar[1].token
		}
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2725
		{
			yyVAL.token = Token{}
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2729
		{
			yyVAL.token = yyDollar[1].token
		}
	case 508:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2735
		{
			yyVAL.token = Token{}
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2739
		{
			yyVAL.token = yyDollar[1].token
		}
	case 510:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2745
		{
			yyVAL.token = Token{}
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2749
		{
			yyVAL.token = yyDollar[1].token
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2755
		{
			yyVAL.token = yyDollar[1].token
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2759
		{
			yyVAL.token = yyDollar[1].token
		}
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2763
		{
			yyVAL.token = yyDollar[1].token
		}
	case 515:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2769
		{
			yyVAL.token = Token{}
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2773
		{
			yyVAL.token = yyDollar[1].token
		}
	case 517:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2779
		{
			yyVAL.token = Token{}
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2783
		{
			yyVAL.token = yyDollar[1].token
		}
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line lib/parser/parser.y:2789
		{
			yyVAL.token = Token{}
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2793
		{
			yyVAL.token = yyDollar[1].token
		}
	case 521:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2799
		{
			yyVAL.token = yyDollar[1].token
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
//line lib/parser/parser.y:2803
		{
			yyDollar[1].token.Token = COMPARISON_OP
			yyVAL.token = yyDollar[1].token
		}
	}
	goto yystack /* stack new state and value */
}
